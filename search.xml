<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>word转md文件</title>
    <url>//p/d44f2022.html</url>
    <content><![CDATA[<p>使用Pandoc转换</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Docx to markdown, including math:</span><br><span class="line">$ pandoc -s example30.docx -t markdown -o example35.md</span><br></pre></td></tr></table></figure>
<p><a href="https://pandoc.org/demos.html" target="_blank" rel="noopener">更多命令参考</a></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>pandoc</tag>
        <tag>word</tag>
      </tags>
  </entry>
  <entry>
    <title>Kettle数据抽取</title>
    <url>//p/5c1c96f2.html</url>
    <content><![CDATA[<h2 id="数据库数据抽取"><a href="#数据库数据抽取" class="headerlink" title="数据库数据抽取"></a>数据库数据抽取</h2><h2 id="抽取数据转换json"><a href="#抽取数据转换json" class="headerlink" title="抽取数据转换json"></a>抽取数据转换json</h2><h2 id="数据存储"><a href="#数据存储" class="headerlink" title="数据存储"></a>数据存储</h2><h2 id="附件文本抽取"><a href="#附件文本抽取" class="headerlink" title="附件文本抽取"></a>附件文本抽取</h2>]]></content>
      <categories>
        <category>数据抽取</category>
      </categories>
      <tags>
        <tag>Kettle</tag>
      </tags>
  </entry>
  <entry>
    <title>【kettle】【报错】 Unexpected problem reading shared objects from XML file当读共享文件时发生错误</title>
    <url>//p/448e437.html</url>
    <content><![CDATA[<h2 id="ETL报错："><a href="#ETL报错：" class="headerlink" title="ETL报错："></a>ETL报错：</h2><p><strong>Unexpected problem reading shared objects from XML file : null</strong></p>
<p>当读共享文件时发生错误(继续加载 报kettle新建转换 时，“读取共享对象时发生一个严重错误”</p>
<p>“Unexpected problem reading shared objects from XML file : null”…</p>
<p>保存ktr,kjb时弹出错误提示 ：“Unable to save shared ojects“</p>
<p> ”Unexpected problem reading shared objects from XML file :“</p>
<h2 id="问题原因："><a href="#问题原因：" class="headerlink" title="问题原因："></a>问题原因：</h2><p>​    这是开发在共享 DB连接 （数据库连接） 时候操作不当造成的。</p>
<h2 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h2><p>​    找到 .kettle/shared.xml（一般在：C:\Users\User.kettle） 文件;删除 <sharedobjects>…</sharedobjects>之间的内容，可解决这个问题；<br><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20190910192024641.png" alt="img"></p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20190910192104994.png" alt="img"></p>
]]></content>
      <categories>
        <category>数据抽取</category>
      </categories>
      <tags>
        <tag>Kettle</tag>
      </tags>
  </entry>
  <entry>
    <title>elasticsearch中英文混搜</title>
    <url>//p/57eff7ce.html</url>
    <content><![CDATA[<p>参考地址：</p>
<ul>
<li><a href="https://blog.csdn.net/weixin_33725126/article/details/89702059" target="_blank" rel="noopener">https://blog.csdn.net/weixin_33725126/article/details/89702059</a></li>
<li><a href="https://blog.csdn.net/weixin_34148456/article/details/86002009" target="_blank" rel="noopener">https://blog.csdn.net/weixin_34148456/article/details/86002009</a></li>
<li><a href="https://blog.csdn.net/zmx729618/article/details/80415984" target="_blank" rel="noopener">https://blog.csdn.net/zmx729618/article/details/80415984</a></li>
<li><a href="https://www.cnblogs.com/zhangyafei/p/11028927.html" target="_blank" rel="noopener">https://www.cnblogs.com/zhangyafei/p/11028927.html</a></li>
</ul>
<h2 id="mapping设置"><a href="#mapping设置" class="headerlink" title="mapping设置"></a>mapping设置</h2><h2 id="中文分词插件"><a href="#中文分词插件" class="headerlink" title="中文分词插件"></a>中文分词插件</h2><h2 id="英文分词插件"><a href="#英文分词插件" class="headerlink" title="英文分词插件"></a>英文分词插件</h2><h2 id="拼音搜索插件"><a href="#拼音搜索插件" class="headerlink" title="拼音搜索插件"></a>拼音搜索插件</h2><h2 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h2>]]></content>
      <categories>
        <category>全文检索</category>
      </categories>
      <tags>
        <tag>elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo中预览pdf</title>
    <url>//p/214f0223.html</url>
    <content><![CDATA[<p>希望在博客中能预览pdf，hexo已有插件支持pdf预览，非常方便，只需安装插件和添加链接即可。</p>
<h1 id="实现-安装插件"><a href="#实现-安装插件" class="headerlink" title="实现 安装插件"></a>实现 安装插件</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-pdf</span><br></pre></td></tr></table></figure>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>在Markdown文档中添加pdf<br>本地资源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% pdf  test.pdf %&#125;</span><br></pre></td></tr></table></figure>
<p>在线资源</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;center&gt; **监督学习**&lt;&#x2F;center&gt; # 居中</span><br><span class="line">&#123;% pdf https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;afshinea&#x2F;stanford-cs-229-machine-learning&#x2F;4d5ac4e620be8b63b6f889ecff667b7ebac008a8&#x2F;zh&#x2F;cheatsheet-supervised-learning.pdf %&#125;</span><br></pre></td></tr></table></figure>
<h1 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h1><h2 id="github上pdf的显示"><a href="#github上pdf的显示" class="headerlink" title="github上pdf的显示"></a>github上pdf的显示</h2><p>要想成功显示pdf，必须正确配置路径，可以用F12来查看。若想显示github上的pdf，用github.com的域名是不行的，应该是<strong>raw.githubusercontent.com</strong>的域名，可以通过F12来查看。</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>pdf</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Kettle将mysql数据同步到Elasticsearch中</title>
    <url>//p/efd6f6f6.html</url>
    <content><![CDATA[<h1 id="使用Kettle将mysql数据同步到Elasticsearch中"><a href="#使用Kettle将mysql数据同步到Elasticsearch中" class="headerlink" title="使用Kettle将mysql数据同步到Elasticsearch中"></a>使用Kettle将mysql数据同步到Elasticsearch中</h1><h2 id="整体流程图如下"><a href="#整体流程图如下" class="headerlink" title="整体流程图如下"></a>整体流程图如下</h2><h2 id="获取配置信息"><a href="#获取配置信息" class="headerlink" title="获取配置信息"></a>获取配置信息</h2><h2 id="将数据字段进行清洗"><a href="#将数据字段进行清洗" class="headerlink" title="将数据字段进行清洗"></a>将数据字段进行清洗</h2><h2 id="将附件进行下载抽取"><a href="#将附件进行下载抽取" class="headerlink" title="将附件进行下载抽取"></a>将附件进行下载抽取</h2><h2 id="根据规则查看ID文档是否存在"><a href="#根据规则查看ID文档是否存在" class="headerlink" title="根据规则查看ID文档是否存在"></a>根据规则查看ID文档是否存在</h2><h2 id="将结构化信息提交"><a href="#将结构化信息提交" class="headerlink" title="将结构化信息提交"></a>将结构化信息提交</h2><h2 id="回写ES的文档id"><a href="#回写ES的文档id" class="headerlink" title="回写ES的文档id"></a>回写ES的文档id</h2>]]></content>
      <categories>
        <category>全文检索</category>
      </categories>
      <tags>
        <tag>elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>在线预览，互联网解决方案</title>
    <url>//p/44b14d3b.html</url>
    <content><![CDATA[<p>使用微软在线预览<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;view.officeapps.live.com&#x2F;op&#x2F;view.aspx?src&#x3D;offcie链接地址</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>office</category>
        <category>在线预览</category>
      </categories>
      <tags>
        <tag>在线预览</tag>
        <tag>office</tag>
      </tags>
  </entry>
  <entry>
    <title>elasticsearch中父子关系文档</title>
    <url>//p/3cb208bc.html</url>
    <content><![CDATA[<p>参考地址：</p>
<ul>
<li><a href="https://blog.csdn.net/hsj1213522415/article/details/97693509" target="_blank" rel="noopener">https://blog.csdn.net/hsj1213522415/article/details/97693509</a></li>
</ul>
<h2 id="为什么要有父子文档？"><a href="#为什么要有父子文档？" class="headerlink" title="为什么要有父子文档？"></a>为什么要有父子文档？</h2><ul>
<li><p>nested object的数据建模，是采取类似冗余数据的方式，将多个数据都放在一起，维护成本就比较高；</p>
</li>
<li><p>parent-child数据建模，采取的是类似于关系型数据库的三范式，多个实体都分割开来，每个实体之间都通过一些关联方式，进行了父子关系的关联，各种数据不需要都放在一起，父doc和子doc分别在进行更新的时候，都不会影响对方；</p>
</li>
</ul>
<h2 id="为什么父子文档性能好？"><a href="#为什么父子文档性能好？" class="headerlink" title="为什么父子文档性能好？"></a>为什么父子文档性能好？</h2><p>​    虽然数据实体之间分割开来，但是我们在搜索的时候，由es自动为我们处理底层的关联关系，并且通过一些手段保证搜索性能。</p>
<h2 id="父子文档核心"><a href="#父子文档核心" class="headerlink" title="父子文档核心"></a>父子文档核心</h2><p>​    父子关系元数据映射，用于确保查询时候的高性能，但是有一个限制：父子数据必须存在于一个shard中；（多个type之间有父子关系，用_parent指定父type）；父子关系数据存在一个shard中，而且映射其关联关系的元数据，因此在搜索父子关系数据的时候，不用跨分片。</p>
<h2 id="实例-带权限的全文检索"><a href="#实例-带权限的全文检索" class="headerlink" title="实例-带权限的全文检索"></a>实例-带权限的全文检索</h2><h3 id="建立mapping"><a href="#建立mapping" class="headerlink" title="建立mapping"></a>建立mapping</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PUT &#x2F;company</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;doc&quot;: &#123;&#125;,</span><br><span class="line">    &quot;employee&quot;: &#123;</span><br><span class="line">      &quot;_parent&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;rd_center&quot; </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>全文检索</category>
      </categories>
      <tags>
        <tag>elasticsearch</tag>
        <tag>全文检索</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown自动生成左侧导航栏</title>
    <url>//p/383ccfbe.html</url>
    <content><![CDATA[<p>Markdown自动生成左侧导航栏</p>
<p>把以下代码直接 复制到markdown生成的html中即可。</p>
<a id="more"></a>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://code.jquery.com/jquery-1.7.2.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript"> <span class="comment">//是否显示导航栏</span></span></span><br><span class="line"><span class="actionscript"> <span class="keyword">var</span> showNavBar = <span class="literal">true</span>;</span></span><br><span class="line"><span class="actionscript"> <span class="comment">//是否展开导航栏</span></span></span><br><span class="line"><span class="actionscript"> <span class="keyword">var</span> expandNavBar = <span class="literal">true</span>;</span></span><br><span class="line"><span class="actionscript"> <span class="keyword">var</span> currentIndex = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript"> <span class="keyword">var</span> currentScrollHigh = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript"> <span class="keyword">var</span> currentContentScrollHigh = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript"> <span class="function"><span class="keyword">function</span> <span class="title">sleep</span><span class="params">(numberMillis)</span> </span>&#123;  </span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();  </span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> exitTime = now.getTime() + numberMillis;  </span></span><br><span class="line"><span class="actionscript">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;  </span></span><br><span class="line"><span class="javascript">        now = <span class="keyword">new</span> <span class="built_in">Date</span>();  </span></span><br><span class="line">        if (now.getTime() &gt; exitTime)  </span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span>;  </span></span><br><span class="line">        &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">$(<span class="built_in">window</span>).onbeforeunload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span></span><br><span class="line">currentIndex = 0;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript"> $(<span class="built_in">window</span>).load(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> h1s = $(<span class="string">"body"</span>).find(<span class="string">"h1"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> h2s = $(<span class="string">"body"</span>).find(<span class="string">"h2"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> h3s = $(<span class="string">"body"</span>).find(<span class="string">"h3"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> h4s = $(<span class="string">"body"</span>).find(<span class="string">"h4"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> h5s = $(<span class="string">"body"</span>).find(<span class="string">"h5"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> h6s = $(<span class="string">"body"</span>).find(<span class="string">"h6"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> headCounts = [h1s.length, h2s.length, h3s.length, h4s.length, h5s.length, h6s.length];</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vH1Tag = <span class="literal">null</span>;  <span class="comment">// 显示的最高层级</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vH2Tag = <span class="literal">null</span>;   <span class="comment">// 显示的最低层级</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> sum = <span class="number">0</span>;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; headCounts.length; i++)&#123;</span></span><br><span class="line">          if(headCounts[i] &gt; 0)&#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">for</span>( <span class="keyword">var</span> y = <span class="number">0</span>; y &lt; headCounts[i]; y++)</span></span><br><span class="line">                 sum = sum + 1;</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; headCounts.length; i++)&#123;</span></span><br><span class="line">        if(headCounts[i] &gt; 0)&#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span>(vH1Tag == <span class="literal">null</span>)&#123;</span></span><br><span class="line"><span class="actionscript">                vH1Tag = <span class="string">'h'</span> + (i + <span class="number">1</span>);</span></span><br><span class="line"><span class="actionscript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">                vH2Tag = <span class="string">'h'</span> + (i + <span class="number">1</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="keyword">if</span>(vH1Tag == <span class="literal">null</span>)&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    $(<span class="string">"body"</span>).prepend(<span class="string">'&lt;div class="BlogAnchor"&gt;'</span> + </span></span><br><span class="line"><span class="handlebars"><span class="xml">        '<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:red;position:absolute;top:-6px;left:0px;cursor:pointer;"</span> ο<span class="attr">nclick</span>=<span class="string">"$(\'.BlogAnchor\').hide();"</span>&gt;</span>×<span class="tag">&lt;/<span class="name">span</span>&gt;</span>' +</span></span></span><br><span class="line"><span class="actionscript">        <span class="string">'&lt;p&gt;'</span> + </span></span><br><span class="line"><span class="handlebars"><span class="xml">            '<span class="tag">&lt;<span class="name">b</span> <span class="attr">id</span>=<span class="string">"AnchorContentToggle"</span> <span class="attr">title</span>=<span class="string">"收起"</span> <span class="attr">style</span>=<span class="string">"cursor:pointer;"</span>&gt;</span>目录▲<span class="tag">&lt;/<span class="name">b</span>&gt;</span>' + </span></span></span><br><span class="line"><span class="actionscript">        <span class="string">'&lt;/p&gt;'</span> + </span></span><br><span class="line"><span class="handlebars"><span class="xml">        '<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"AnchorContent"</span> <span class="attr">id</span>=<span class="string">"AnchorContent"</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span>' + </span></span></span><br><span class="line"><span class="actionscript">    <span class="string">'&lt;/div&gt;'</span> );</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vH1Index = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vH2Index = <span class="number">0</span>;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vIndexH1 = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vIndexH2 = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vIndexH3 = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vIndexH4 = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vIndexH5 = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vIndexH6 = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> headerALL = [];</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> headerIDALL = [];</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> headerHightALL = [];</span></span><br><span class="line"><span class="javascript">    $(<span class="string">"body"</span>).find(<span class="string">"h1,h2,h3,h4,h5,h6"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i,item</span>)</span>&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> id = <span class="string">''</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> name = <span class="string">''</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> tag = $(item).get(<span class="number">0</span>).tagName.toLowerCase();</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> className = <span class="string">''</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// i=0 tag=h1          i=1 tag=h2     i=2 tag=h2</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span>(tag == <span class="string">"h1"</span>)&#123;</span></span><br><span class="line">            id = name = ++vIndexH1;</span><br><span class="line">    vIndexH2 = 0;</span><br><span class="line">    vIndexH3 = 0;</span><br><span class="line">    vIndexH4 = 0;</span><br><span class="line">    vIndexH5 = 0;</span><br><span class="line">    vIndexH6 = 0;</span><br><span class="line"><span class="actionscript">    className = <span class="string">'item_h1'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="comment">//alert("tag ="+ tag +"----   i = "+ i + " name ="+ name +"    className= "+ className);</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//tag =h1----   i = 0 name =1    className= item_h1</span></span></span><br><span class="line"><span class="actionscript">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(tag == <span class="string">"h2"</span>)&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            id = vIndexH1 + <span class="string">'_'</span> + ++vIndexH2;</span></span><br><span class="line"><span class="actionscript">            name = vIndexH1 + <span class="string">'.'</span> + vIndexH2;</span></span><br><span class="line"><span class="actionscript">            className = <span class="string">'item_h2'</span>; </span></span><br><span class="line">    vIndexH3 = 0;</span><br><span class="line">    vIndexH4 = 0;</span><br><span class="line">    vIndexH5 = 0;</span><br><span class="line">    vIndexH6 = 0;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">       &#125;<span class="keyword">else</span> <span class="keyword">if</span>(tag == <span class="string">"h3"</span>)&#123;</span></span><br><span class="line"><span class="actionscript">            id = vIndexH1 + <span class="string">'_'</span> + vIndexH2+ <span class="string">'_'</span> + ++vIndexH3;</span></span><br><span class="line"><span class="actionscript">            name = vIndexH1 + <span class="string">'.'</span> + vIndexH2+ <span class="string">'.'</span> + +vIndexH3;</span></span><br><span class="line"><span class="actionscript">            className = <span class="string">'item_h3'</span>; </span></span><br><span class="line">    vIndexH4 = 0;</span><br><span class="line">    vIndexH5 = 0;</span><br><span class="line">    vIndexH6 = 0;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">       <span class="keyword">else</span> <span class="keyword">if</span>(tag == <span class="string">"h4"</span>)&#123;</span></span><br><span class="line"><span class="actionscript">            id = vIndexH1 + <span class="string">'_'</span> + vIndexH2+ <span class="string">'_'</span>  +vIndexH3 +<span class="string">'_'</span>+ ++vIndexH4 ;</span></span><br><span class="line"><span class="actionscript">            name =  vIndexH1 + <span class="string">'.'</span> + vIndexH2+ <span class="string">'.'</span>  +vIndexH3 +<span class="string">'.'</span>+  vIndexH4 ;</span></span><br><span class="line"><span class="actionscript">            className = <span class="string">'item_h4'</span>;</span></span><br><span class="line">    vIndexH5 = 0;</span><br><span class="line">    vIndexH6 = 0; </span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">       <span class="keyword">else</span> <span class="keyword">if</span>(tag == <span class="string">"h5"</span>)&#123;</span></span><br><span class="line"><span class="actionscript">            id = vIndexH1 + <span class="string">'_'</span> + vIndexH2+ <span class="string">'_'</span>  +vIndexH3 +<span class="string">'_'</span> +vIndexH4+<span class="string">'_'</span>+ ++vIndexH5;</span></span><br><span class="line"><span class="actionscript">            name = vIndexH1 + <span class="string">'.'</span> + vIndexH2+ <span class="string">'.'</span>  +vIndexH3 +<span class="string">'.'</span> +vIndexH4+<span class="string">'.'</span>+ vIndexH5;</span></span><br><span class="line"><span class="actionscript">            className = <span class="string">'item_h5'</span>; </span></span><br><span class="line">            vIndexH6 = 0; </span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">       <span class="keyword">else</span> <span class="keyword">if</span>(tag == <span class="string">"h6"</span>)&#123;</span></span><br><span class="line"><span class="actionscript">            id = vIndexH1 + <span class="string">'_'</span> + vIndexH2+ <span class="string">'_'</span>  +vIndexH3 +<span class="string">'_'</span> +vIndexH4+<span class="string">'_'</span> +vIndexH5+<span class="string">'_'</span>+ ++vIndexH6;</span></span><br><span class="line"><span class="actionscript">            name = vIndexH1 + <span class="string">'.'</span> + vIndexH2+ <span class="string">'.'</span>  +vIndexH3 +<span class="string">'.'</span> +vIndexH4+<span class="string">'.'</span> +vIndexH5+<span class="string">'.'</span>+ vIndexH6;</span></span><br><span class="line"><span class="actionscript">            className = <span class="string">'item_h6'</span>; </span></span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">        if(name.length &gt; 2)&#123;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> mFirstName = name.substring(<span class="number">0</span>,<span class="number">2</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">while</span>(mFirstName == <span class="string">"0."</span>)&#123;</span></span><br><span class="line">        name = name.substring(2,name.length);</span><br><span class="line">        mFirstName = name.substring(0,2);</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        $(item).attr(<span class="string">"id"</span>,<span class="string">"wow"</span>+id+<span class="string">"_index_"</span>+i);</span></span><br><span class="line"><span class="javascript">        $(item).addClass(<span class="string">"wow_head"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> itemHeight = $(item).offset().top</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#AnchorContent"</span>).css(<span class="string">'max-height'</span>, ($(<span class="built_in">document</span>).height()) + <span class="string">'px'</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#AnchorContent"</span>).css(<span class="string">'height'</span>, ($(<span class="built_in">window</span>).height()) + <span class="string">'px'</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#AnchorContent"</span>).css(<span class="string">'overflow'</span>,<span class="string">'auto'</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#AnchorContent"</span>).append(<span class="string">'&lt;li&gt;&lt;a class="nav_item '</span>+className+<span class="string">' anchor-link"  href="#wow'</span>+id+<span class="string">'_index_'</span>+i+<span class="string">'" link="#wow'</span>+id+<span class="string">'" index="'</span>+i+<span class="string">'"&gt;'</span>+name+<span class="string">" "</span>+$(<span class="keyword">this</span>).text()+<span class="string">" "</span>+<span class="string">'&lt;/a&gt;&lt;/li&gt;'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> str = <span class="string">"#wow"</span>+id+<span class="string">"_index_"</span>+i;</span></span><br><span class="line"><span class="javascript">        headerALL.push($(item));</span></span><br><span class="line">        headerIDALL.push(str);</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"  i = "</span>+ i +<span class="string">"   id ="</span> + id +<span class="string">"  itemHeight = "</span>+ itemHeight);</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.1</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.1.1</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.1.1.1</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.1.1.1.1</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.1.1.1.1.1</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#AnchorContentToggle"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> text = $(<span class="keyword">this</span>).html();</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span>(text==<span class="string">"目录▲"</span>)&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="keyword">this</span>).html(<span class="string">"目录▼"</span>);</span></span><br><span class="line"><span class="javascript">            $(<span class="keyword">this</span>).attr(&#123;<span class="string">"title"</span>:<span class="string">"展开"</span>&#125;);</span></span><br><span class="line"><span class="actionscript">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="keyword">this</span>).html(<span class="string">"目录▲"</span>);</span></span><br><span class="line"><span class="javascript">            $(<span class="keyword">this</span>).attr(&#123;<span class="string">"title"</span>:<span class="string">"收起"</span>&#125;);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        $(<span class="string">"#AnchorContent"</span>).toggle();</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">$(<span class="string">".anchor-link"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">//$("html,body").animate(&#123;scrollTop: $($(this).attr("link")).offset().top&#125;, 10);</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> index  = $(<span class="keyword">this</span>).attr(<span class="string">"index"</span>);</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".BlogAnchor li .nav_item.current"</span>).removeClass(<span class="string">'current'</span>);</span></span><br><span class="line"><span class="javascript">                $(headerNavs[index]).addClass(<span class="string">'current'</span>);</span></span><br><span class="line"><span class="javascript">                      <span class="keyword">var</span> scrollTop = $(<span class="built_in">window</span>).scrollTop(); <span class="comment">// 获得将要到达的点离顶距离</span></span></span><br><span class="line">                      currentScrollHigh = scrollTop;</span><br><span class="line">                      currentContentScrollHigh = headerHightALL[index];</span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> value = headerTops[index];</span></span><br><span class="line">      currentIndex = value;</span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">"index = "</span>+ index+ <span class="string">"  headerTops["</span>+index+<span class="string">"] ="</span>+ value + <span class="string">"scrollTop="</span>+ scrollTop);</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> headerNavs = $(<span class="string">".BlogAnchor li .nav_item"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> headerTops = [];</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> mHeight = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">    $(<span class="string">".wow_head"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i, n</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> value = $(n).offset().top;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        headerTops.push($(n).offset().top);</span></span><br><span class="line"><span class="javascript">         <span class="built_in">console</span>.log(<span class="string">"i = "</span>+ i+ <span class="string">"  offset().top ="</span>+ value);</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="javascript">    headerTops.push($(<span class="built_in">document</span>).height());</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onresize = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"></span><br><span class="line">headerTops = [];</span><br><span class="line"><span class="javascript">$.each(headerNavs, <span class="function"><span class="keyword">function</span>(<span class="params">i, n</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">$(n).trigger(<span class="string">"click"</span>); </span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.querySelector(headerIDALL[i]).scrollIntoView(<span class="literal">true</span>);</span></span><br><span class="line"><span class="actionscript"><span class="comment">//var high = $(n).offset().top;</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> scrollTop = $(<span class="built_in">window</span>).scrollTop();</span></span><br><span class="line">headerTops.push(scrollTop);</span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">"headerNavs_index="</span>+i +<span class="string">"   scrollTop="</span>+scrollTop +<span class="string">"  headerTops="</span>+headerTops[i]);</span></span><br><span class="line">&#125;</span><br><span class="line">);</span><br><span class="line"><span class="javascript">headerTops.push($(<span class="built_in">document</span>).height());</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="comment">//$("#AnchorContent").height($(window).height());</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">"#AnchorContent"</span>).css(<span class="string">'height'</span>, ($(<span class="built_in">window</span>).height()) + <span class="string">'px'</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> xcontentWidth =  $(<span class="string">"#AnchorContent"</span>).width();</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> xWidth = $(<span class="built_in">window</span>).width();</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> xlength = xWidth - xcontentWidth;</span></span><br><span class="line"><span class="javascript">$(<span class="string">"body"</span>).css(<span class="string">"marginLeft"</span>,xcontentWidth+<span class="string">'px'</span>);</span></span><br><span class="line"><span class="javascript">$(<span class="string">"body"</span>).css(<span class="string">"max-width"</span>,xlength);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">$(headerNavs[currentIndex]).trigger(<span class="string">"click"</span>); </span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.querySelector(headerIDALL[i]).scrollIntoView(<span class="literal">true</span>);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">$(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> scrollTop = $(<span class="built_in">window</span>).scrollTop(); <span class="comment">// 获得将要到达的点离顶距离</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        $.each(headerTops, <span class="function"><span class="keyword">function</span>(<span class="params">i, n</span>)</span>&#123;</span></span><br><span class="line">            if( (scrollTop &gt;= (headerTops[i])  &amp;&amp; scrollTop &lt; (headerTops[i+1] -1))  )&#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">"headerTops[i-1]"</span>+headerTops[i<span class="number">-1</span>]+<span class="string">"headerTops[i]"</span>+headerTops[i]+<span class="string">"  scrollTop ="</span>+ scrollTop+<span class="string">"  headerTops[i+1]= "</span>+headerTops[i+<span class="number">1</span>] +<span class="string">"  i ="</span>+i);</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".BlogAnchor li .nav_item.current"</span>).removeClass(<span class="string">'current'</span>);</span></span><br><span class="line"><span class="javascript">                $(headerNavs[i]).addClass(<span class="string">'current'</span>);</span></span><br><span class="line">                currentScrollHigh = scrollTop;</span><br><span class="line">                currentContentScrollHigh = headerHightALL[i];</span><br><span class="line">                currentIndex = i;</span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> mxxHeight = $(<span class="string">"#AnchorContent"</span>).height()</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> mscrollTop1 = $(<span class="string">"#AnchorContent"</span>).scrollTop();  <span class="comment">// 当前标签的高度</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"zukgit2 currentIndex="</span>+ currentIndex );</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">"zukgit2 windows.scrollTop="</span>+ scrollTop );</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">"zukgit2 $(window).height()="</span>+ $(<span class="built_in">window</span>).height() );</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">"zukgit2 currentContentScrollHigh="</span>+ currentContentScrollHigh );</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">"zukgit2 AnchorContent.mscrollTop="</span>+ mscrollTop1 );</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">"zukgit2 AnchorContent.high="</span>+ mxxHeight );</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>((currentContentScrollHigh - mscrollTop1)&gt;  ($(<span class="built_in">window</span>).height()/<span class="number">2</span>))&#123; <span class="comment">//↓ // 如果当前index超出  界面的高度</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//var sum =   Math.floor(headerHightALL(i) / $(window).height());</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> dif = currentContentScrollHigh - mscrollTop1;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"#AnchorContent"</span>).animate(&#123;<span class="attr">scrollTop</span>: (currentContentScrollHigh)&#125;, <span class="number">50</span>);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">"  i(zukgit3) = "</span>+ i +<span class="string">"   currentContentScrollHigh ="</span> + currentContentScrollHigh +<span class="string">"  mscrollTop1 = "</span>+ mscrollTop1);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">" $(window).height()="</span>+ $(<span class="built_in">window</span>).height() );</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> <span class="keyword">if</span>( ( mscrollTop1 - currentContentScrollHigh )&gt;  <span class="number">0</span> )&#123;  <span class="comment">//↑</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">"#AnchorContent"</span>).animate(&#123;<span class="attr">scrollTop</span>: currentContentScrollHigh-($(<span class="string">"#AnchorContent"</span>).height()/<span class="number">3</span>)&#125;, <span class="number">50</span>);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">"  i(zukgit4) = "</span>+ i +<span class="string">"   currentContentScrollHigh ="</span> + currentContentScrollHigh +<span class="string">"  mscrollTop1 = "</span>+ mscrollTop1);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">" $(window).height()="</span>+ $(<span class="built_in">window</span>).height() +<span class="string">"   $(#AnchorContent).height()="</span>+mxxHeight);</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        );</span><br><span class="line">        if(scrollTop == 0)&#123;</span><br><span class="line"><span class="javascript">        $(<span class="string">"#AnchorContent"</span>).animate(&#123;<span class="attr">scrollTop</span>: <span class="number">0</span>&#125;, <span class="number">50</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(scrollTop == $(<span class="built_in">document</span>).height())&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#AnchorContent"</span>).animate(&#123;<span class="attr">scrollTop</span>: headerHightALL[headerHightALL.length<span class="number">-1</span>]&#125;, <span class="number">50</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">$.each(headerNavs, <span class="function"><span class="keyword">function</span>(<span class="params">i, n</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> high = $(n).offset().top;</span></span><br><span class="line">headerHightALL.push(high);</span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">"high"</span>+high);</span></span><br><span class="line">&#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">headerTops = [];</span><br><span class="line"><span class="javascript">$.each(headerNavs, <span class="function"><span class="keyword">function</span>(<span class="params">i, n</span>)</span>&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">$(n).trigger(<span class="string">"click"</span>); </span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.querySelector(headerIDALL[i]).scrollIntoView(<span class="literal">true</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> scrollTop = $(<span class="built_in">window</span>).scrollTop();</span></span><br><span class="line"></span><br><span class="line">headerTops.push(scrollTop);</span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">"headerNavs_index="</span>+i +<span class="string">"   scrollTop="</span>+scrollTop +<span class="string">"  headerTops="</span>+headerTops[i]);</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">headerTops.push($(<span class="built_in">document</span>).height());</span></span><br><span class="line"><span class="javascript">$(headerNavs[<span class="number">0</span>]).trigger(<span class="string">"click"</span>); </span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.querySelector(headerIDALL[<span class="number">0</span>]).scrollIntoView(<span class="literal">true</span>);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> xcontentWidth =  $(<span class="string">"#AnchorContent"</span>).width();</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> xWidth = $(<span class="built_in">window</span>).width();</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> xlength = xWidth - xcontentWidth;</span></span><br><span class="line"><span class="javascript">$(<span class="string">"body"</span>).css(<span class="string">"marginLeft"</span>,xcontentWidth+<span class="string">'px'</span>);</span></span><br><span class="line"><span class="javascript">$(<span class="string">"body"</span>).css(<span class="string">"max-width"</span>,xlength);</span></span><br><span class="line"></span><br><span class="line">    if(!showNavBar)&#123;</span><br><span class="line"><span class="javascript">        $(<span class="string">'.BlogAnchor'</span>).hide();</span></span><br><span class="line">    &#125;</span><br><span class="line">    if(!expandNavBar)&#123;</span><br><span class="line"><span class="javascript">        $(<span class="keyword">this</span>).html(<span class="string">"目录▼"</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="keyword">this</span>).attr(&#123;<span class="string">"title"</span>:<span class="string">"展开"</span>&#125;);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#AnchorContent"</span>).hide();</span></span><br><span class="line">    &#125;</span><br><span class="line"> &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/*导航*/</span></span></span><br><span class="line"><span class="css">    <span class="selector-class">.BlogAnchor</span> &#123;</span></span><br><span class="line">        //background: #f1f1f1;</span><br><span class="line"><span class="css">        <span class="selector-tag">background</span>: <span class="selector-id">#ffffff</span>;</span></span><br><span class="line">        //padding: 10px;</span><br><span class="line">        line-height: 180%;</span><br><span class="line">        position: fixed;</span><br><span class="line">        left: 0px;   // right: 48px;  </span><br><span class="line">        top: 0px;</span><br><span class="line"><span class="css">        <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#aaaaaa</span>;</span></span><br><span class="line">        width: 20%;</span><br><span class="line"><span class="css">        <span class="selector-tag">height</span><span class="selector-pseudo">:100</span>%;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.BlogAnchor</span> <span class="selector-tag">p</span> &#123;</span></span><br><span class="line">        font-size: 18px;</span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#15a230</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">margin</span>: 0 0 0<span class="selector-class">.3rem</span> 0;</span></span><br><span class="line">        text-align: right;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.BlogAnchor</span> <span class="selector-class">.AnchorContent</span> &#123;</span></span><br><span class="line">        //padding: 5px 0px;</span><br><span class="line">        overflow: auto;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.BlogAnchor</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">text-indent</span>: 0<span class="selector-class">.5rem</span>;</span></span><br><span class="line">        font-size: 14px;</span><br><span class="line">        list-style: none;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.BlogAnchor</span> <span class="selector-tag">li</span> <span class="selector-class">.nav_item</span>&#123;</span></span><br><span class="line">        padding: 3px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.BlogAnchor</span> <span class="selector-tag">li</span> <span class="selector-class">.item_h1</span>&#123;</span></span><br><span class="line">        margin-left: 0rem;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.BlogAnchor</span> <span class="selector-tag">li</span> <span class="selector-class">.item_h2</span>&#123;</span></span><br><span class="line">        margin-left: 2rem;</span><br><span class="line"><span class="css">        <span class="selector-tag">font-size</span>: 0<span class="selector-class">.8rem</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.BlogAnchor</span> <span class="selector-tag">li</span> <span class="selector-class">.item_h3</span>&#123;</span></span><br><span class="line">        margin-left: 4rem;</span><br><span class="line"><span class="css">        <span class="selector-tag">font-size</span>: 0<span class="selector-class">.8rem</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.BlogAnchor</span> <span class="selector-tag">li</span> <span class="selector-class">.item_h4</span>&#123;</span></span><br><span class="line">        margin-left: 5rem;</span><br><span class="line"><span class="css">        <span class="selector-tag">font-size</span>: 0<span class="selector-class">.8rem</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.BlogAnchor</span> <span class="selector-tag">li</span> <span class="selector-class">.item_h5</span>&#123;</span></span><br><span class="line">        margin-left: 6rem;</span><br><span class="line"><span class="css">        <span class="selector-tag">font-size</span>: 0<span class="selector-class">.8rem</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.BlogAnchor</span> <span class="selector-tag">li</span> <span class="selector-class">.item_h6</span>&#123;</span></span><br><span class="line">        margin-left: 7rem;</span><br><span class="line"><span class="css">        <span class="selector-tag">font-size</span>: 0<span class="selector-class">.8rem</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.BlogAnchor</span> <span class="selector-tag">li</span> <span class="selector-class">.nav_item</span><span class="selector-class">.current</span>&#123;</span></span><br><span class="line">        color: white;</span><br><span class="line"><span class="css">        <span class="selector-tag">background-color</span>: <span class="selector-id">#5cc26f</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#AnchorContentToggle</span> &#123;</span></span><br><span class="line">        font-size: 13px;</span><br><span class="line">        font-weight: normal;</span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#FFF</span>;</span></span><br><span class="line">        display: inline-block;</span><br><span class="line">        line-height: 20px;</span><br><span class="line"><span class="css">        <span class="selector-tag">background</span>: <span class="selector-id">#5cc26f</span>;</span></span><br><span class="line">        font-style: normal;</span><br><span class="line">        padding: 1px 8px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.BlogAnchor</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#5cc26f</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.BlogAnchor</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">        text-decoration: none;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>目录</tag>
      </tags>
  </entry>
  <entry>
    <title>常用法律文书收集</title>
    <url>//p/71b20ea9.html</url>
    <content><![CDATA[<p> 信用卡纠纷案件审判要素表.doc  【<a href="https://view.officeapps.live.com/op/view.aspx?src=https://github.com/jooejooe/images/blob/master/files/wenshu/%E4%BF%A1%E7%94%A8%E5%8D%A1%E7%BA%A0%E7%BA%B7%E6%A1%88%E4%BB%B6%E5%AE%A1%E5%88%A4%E8%A6%81%E7%B4%A0%E8%A1%A8.doc?raw=true" target="_blank" rel="noopener">预览</a>】【<a href="https://github.com/jooejooe/images/blob/master/files/wenshu/%E4%BF%A1%E7%94%A8%E5%8D%A1%E7%BA%A0%E7%BA%B7%E6%A1%88%E4%BB%B6%E5%AE%A1%E5%88%A4%E8%A6%81%E7%B4%A0%E8%A1%A8.doc?raw=true" target="_blank" rel="noopener">下载</a>】</p>
]]></content>
      <categories>
        <category>法律知识</category>
      </categories>
      <tags>
        <tag>法院</tag>
      </tags>
  </entry>
  <entry>
    <title>要素式审核-c</title>
    <url>//p/4d915dad.html</url>
    <content><![CDATA[<p>山东省高级人民法院要素式审判方式指引（试行）</p>
<a id="more"></a>
<div class="pdfobject-container" data-target="/files/山东省高级人民法院要素式审判方式指引（试行）.pdf" data-height="800px"></div>]]></content>
      <categories>
        <category>法律知识</category>
      </categories>
      <tags>
        <tag>法院</tag>
      </tags>
  </entry>
  <entry>
    <title>济南知识产权法庭编发“著作权侵权纠纷案件审判要素表+要素式判决书样式”（范本）</title>
    <url>//p/6d6f6f8d.html</url>
    <content><![CDATA[<h2 id="济南知识产权法庭编发“著作权侵权纠纷案件审判要素表-要素式判决书样式”（范本）"><a href="#济南知识产权法庭编发“著作权侵权纠纷案件审判要素表-要素式判决书样式”（范本）" class="headerlink" title="济南知识产权法庭编发“著作权侵权纠纷案件审判要素表+要素式判决书样式”（范本）"></a>济南知识产权法庭编发“著作权侵权纠纷案件审判要素表+要素式判决书样式”（范本）</h2><p><strong>发布：**</strong>济南中院新闻中心**</p>
<p><strong>来源：济南知识产权法庭</strong></p>
<p>​    为贯彻落实最高人民法院民事诉讼程序繁简分流改革试点精神以及省法院要素式审判方式指引规定要求，进一步提升著作权侵权纠纷案件审判质效，更加合理分配司法审判资源，济南知识产权法庭依照《济南市中级人民法院关于民事诉讼程序繁简分流改革试点工作实施方案（试行）》，结合济南知识产权审判工作实际，编写了《著作权侵权纠纷案件审判要素表、要素式判决书样式》并予以印发。</p>
<p>​    《著作权侵权纠纷案件审判要素表、要素式判决书样式》为基层法院适用小额诉讼程序或者简易程序审理图片类、音乐作品类著作权侵权案件提供了规范化指引，并为审判流程和裁判文书的简化进一步细化了操作流程。</p>
<p><strong>著作权侵权纠纷案件审判要素表</strong></p>
<p><strong>
</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>提示：</strong>1.为了帮助您更好地参加诉讼，保护您的合法权利，请填写本表。2.本表所列各项内容为法院查明案件事实所需，务必如实填写。3.您在本表中所填内容属于依法向法院陈述的事实，不如实填写应承担由此产生的法律后果。4.本表有些内容可能与您的案件无关，您认为与案件无关的项目可以填“无”或不填；对于本表中勾选项可以在对应项打“√”；您认为另有重要内容未予列明的，可以在本表尾部填写。</th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>案件事实要素</strong></td>
<td><strong>原告填写</strong></td>
<td><strong>被告**</strong>/<strong>**第三人确认</strong></td>
</tr>
<tr>
<td>1.权利主体</td>
<td>原始著作权人□ 受让人□1.合同签订时间：2.转让的权利种类：3.地域范围： 被许可使用人□1.合同签订时间：2.许可使用的权利种类、是否为专有使用权：3.地域范围、期间： 其他□</td>
<td></td>
</tr>
<tr>
<td>2.权利内容</td>
<td>作品类型： 作品名称： 作品完成时间： 发表时间： 作品载体： 著作权登记证书1.登记机关：2.登记时间： 权利种类1.复制权2.发行权3.信息网络传播权4.放映权5.获得报酬权6.其他</td>
<td></td>
</tr>
<tr>
<td>3.侵权行为及取证方式</td>
<td>1. 2. 3.</td>
<td></td>
</tr>
<tr>
<td>4.被诉侵权作品与权利作品比对情况</td>
<td>构成相同□构成实质性相似□</td>
<td></td>
</tr>
<tr>
<td>5.损害赔偿</td>
<td>实际损失□1.数额：2.计算方式： 侵权获利□1.数额：2.计算方式： 参照许可使用费□1.数额：2.计算方式： 法定赔偿□1.数额：2.参考依据：</td>
<td></td>
</tr>
<tr>
<td>6.合理开支</td>
<td>公证费□：<strong><em>__</em></strong>元；律师费□：<strong><em>__</em></strong>元；调查费□：<strong><em>__</em></strong>元；其他□：<strong><em>__</em></strong>元。</td>
<td></td>
</tr>
<tr>
<td>7.是否有合法来源</td>
<td></td>
<td>是□1.来源主体：<strong><em>__</em></strong>2.来源渠道：合同□ 发票□ 进货单□ 销售单□ 出库单□ 其他□ 否□</td>
</tr>
<tr>
<td>8.当事人需要明确的其他事项</td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>填表人（签字、盖章）</strong></td>
<td><strong>原告：</strong></td>
<td><strong>被告**</strong>/<strong>**第三人：</strong></td>
</tr>
</tbody>
</table>
</div>
<p><strong>著作权侵权纠纷案件要素式判决书样式</strong></p>
<p>××××人民法院</p>
<p><strong>民 事 判 决 书</strong></p>
<p>(××××)……民初……号</p>
<p>原告：×××，男/女，××××年×月×日出生，×族，……(工作单位和职务或者职业)，住……。</p>
<p>法定代理人/指定代理人/法定代表人/主要负责人：×××，……。</p>
<p>委托诉讼代理人：×××，……。</p>
<p>被告：×××，……。</p>
<p>法定代理人/指定代理人/法定代表人/主要负责人：×××，……。</p>
<p>委托诉讼代理人：×××，……。</p>
<p>(以上写明当事人和其他诉讼参加人的姓名或者名称等基本信息)</p>
<p>原告×××与被告×××……（写明案由）一案，本院于×××年×月×日立案后，依法适用简易程序/小额诉讼程序，公开/因涉及……（写明不公开开庭的理由）不公开开庭进行了审理。原告×××、被告×××(写明当事人和其他诉讼参加人的诉讼地位和姓名或者名称)到庭参加诉讼。本案现已审理终结。</p>
<p>原告向本院提出诉讼请求：…。</p>
<p>被告辩称，…。</p>
<p>本院经审理认定事实如下：</p>
<p>一、原告权利来源情况：原告系</p>
<p>原始著作权人□</p>
<p>受让人□</p>
<p>1.合同签订时间：<strong><strong><strong>__</strong></strong></strong></p>
<p>2.转让的权利种类：<strong><strong><strong>__</strong></strong></strong></p>
<p>3.地域范围：<strong><strong><strong>__</strong></strong></strong></p>
<p>被许可使用人□</p>
<p>1.合同签订时间：<strong><strong><strong>__</strong></strong></strong></p>
<p>2.许可使用的权利种类、是否为专有使用权：<strong><strong><strong>__</strong></strong></strong></p>
<p>3.地域范围、期间：<strong><strong><strong>__</strong></strong></strong></p>
<p>二、权利内容：</p>
<p>作品类型：<strong><strong><strong>__</strong></strong></strong></p>
<p>作品名称：<strong><strong><strong>__</strong></strong></strong></p>
<p>作品完成时间、发表时间：<strong><strong><strong>__</strong></strong></strong></p>
<p>作品载体：<strong><strong><strong>__</strong></strong></strong></p>
<p>著作权登记证书</p>
<p>1.登记机关：<strong><strong><strong>__</strong></strong></strong></p>
<p>2.登记时间：<strong><strong><strong>__</strong></strong></strong></p>
<p>权利种类</p>
<p>1.复制权</p>
<p>2.发行权</p>
<p>3.信息网络传播权</p>
<p>4.放映权</p>
<p>5.获得报酬权</p>
<p>6.其他：</p>
<p>三、被告侵权行为：<strong><strong><strong><strong><strong><strong><em>__</em></strong></strong></strong></strong></strong></strong></p>
<hr>
<p>被诉侵权作品与权利作品比对情况：</p>
<p>是否构成相同：是□；否□</p>
<p>是否构成实质性相似：是□；否□</p>
<p>四、损害赔偿：</p>
<p>1.实际损失□：数额<strong><em>__</em></strong>，计算方式<strong><em>__</em></strong>；</p>
<p>2.侵权获利□：数额<strong><em>__</em></strong>，计算方式<strong><em>__</em></strong>；</p>
<p>3.参照许可使用费□：数额<strong><em>__</em></strong>，计算方式<strong><em>__</em></strong>；</p>
<p>4.法定赔偿□：数额<strong><em>__</em></strong>,参考依据<strong><em>__</em></strong>。</p>
<p>五、合理开支：公证费□<strong><em>__</em></strong>；律师费□<strong><em>__</em></strong>；调查费□<strong><em>__</em></strong>；其他□<strong><em>_</em></strong>。</p>
<p>六、是否有合法来源：否□；</p>
<p>是□1.来源主体<strong><strong><strong><em>_</em></strong></strong></strong></p>
<p>2.来源渠道:合同□发票□进货单□销售单□出库单□其他□</p>
<p>七、其他必要事项<strong><strong><strong><strong><strong><strong><em>__</em></strong></strong></strong></strong></strong></strong>。</p>
<p>以上事项中，双方有争议的事项为第×项、第×项，其他事项双方无争议。</p>
<p>综上所述，……(写明对当事人的诉讼请求及主张是否支持进行评述)。依照《中华人民共和国……法》第×条、……(写明法律文件名称及其条款项序号)规定，判决如下：</p>
<p>……(写明判决结果)。</p>
<p>如果未按本判决指定的期间履行给付金钱义务，应当依照《中华人民共和国民事诉讼法》第二百五十三条规定，加倍支付迟延履行期间的债务利息(没有给付金钱义务的，不写)。</p>
<p>案件受理费……元，由……负担(写明当事人姓名或者名称、负担金额)。</p>
<p>如不服本判决，可以在判决书送达之日起十五日内，向本院递交上诉状，并按对方当事人或代表人的人数提出副本，上诉于××××人民法院。/本判决为终审判决。（小额诉讼程序）</p>
<p>​        　　</p>
<p>审 判 员   ×××</p>
<p>××××年××月××日</p>
<p>书 记 员   ×××</p>
]]></content>
      <categories>
        <category>法律知识</category>
      </categories>
      <tags>
        <tag>法院</tag>
      </tags>
  </entry>
  <entry>
    <title>诉讼费收费标准</title>
    <url>//p/1b9b841c.html</url>
    <content><![CDATA[<p>案件受理费交纳标准：</p>
<p>　　＜1万               50元</p>
<p>　　1万至10万            ×2.5%-200</p>
<p>　　10万至20万            ×2%+300</p>
<p>　　20万至50万            ×1.5%+1300</p>
<p>　　50万至100万           ×1%+3800</p>
<p>　　100万至200万           ×0.9%+4800</p>
<p>　　200万至500万           ×0.8%+6800</p>
<p>　　500万至1000万          ×0.7%+11800</p>
<p>　　1000万至2000万          ×0.6%+21800</p>
<p>　　2000万以上            ×0.5%+41800</p>
<p>　　离婚案件不涉及财产分割的，每件交纳50元；涉及财产分割，财产总额不超过20万元的，</p>
<p>　　每件交纳300元，超过20万元的部分，按照0.5%交纳。</p>
<p>　　适用简易程序审理的案件减半交纳案件受理费。</p>
<p>　　适用普通程序审理的案件撤诉或调解结案的减半收取案件受理费。</p>
]]></content>
      <categories>
        <category>法律知识</category>
      </categories>
      <tags>
        <tag>法院</tag>
      </tags>
  </entry>
  <entry>
    <title>银行卡纠纷案件的审理流程与思路</title>
    <url>//p/cd3adfb6.html</url>
    <content><![CDATA[<p>近日， 北京西城法院甘琳法官结合审判实践和理论研究， 总结梳理了欠款类银行卡纠纷案件、<br>盗刷类银行卡纠纷案件、 维权类银行卡纠纷案件等三类银行卡纠纷案件的审理流程与思路，<br>具有一定的实践价值。<br>一、 欠款类银行卡纠纷案件的审理流程与思路<br>（一） 案件审理的时间节点管理<br>（二） 程序问题的处理<br>（三） 实体审理中的常见抗辩事由及处理思路<br>二、 盗刷类银行卡纠纷案件的审理思路<br>（一） 民刑交叉情形下的受理<br>（二） 侵权责任或违约责任的认定<br>（三） 伪卡交易情形下举证责任的分配与责任认定<br>（四） 无卡交易情形下的举证责任分配与责任认定<br>三、 维权类银行卡纠纷案件的审理思路<br>（一） 主体资格的审查<br>（二） 格式条款的效力认定<br>（三） 增值业务效力的认定<br>一、 欠款类银行卡纠纷案件的审理流程与思路<br>欠款类银行卡纠纷案件， 指以发卡行作为原告， 以持卡人作为被告， 以持卡人经催收仍欠款<br>不予偿还为基础诉讼事实， 以要求持卡人偿还信用卡透支欠款本金、 利息、 手续费、 超限费<br>及滞纳金为诉讼请求的信用卡合同纠纷案件。 当前， 欠款类银行卡纠纷已经成为困扰银行的<br>一类高发纠纷， 也成为基层法院近年来审理数量较大的一类案件。 近年来， 欠款类银行卡案<br>件数量增长迅猛， 并呈现出标的额不断增加、 公告送达比例高、 被告到庭应诉率低、 案件审<br>理成本高等特点， 特别是人口流动加剧人户分离现状， 虚假填报申领表导致冒名申卡现象突<br>出等问题的出现， 给此类案件的审理带来了一定的困难。<br>（一） 案件审理的时间节点管理<br>欠款类银行卡案件在诉讼主体、 诉讼基础事实以及诉讼请求等要素上相对固定， 案件事实清<br>楚， 法律关系明确， 但由于案件数量大， 送达困难多， 司法辅助性工作量大， 因此在审判实<br>践中应注重提高效率， 形成规范化的审理流程。 为此， 我们制定了审理此类案件的时间节点<br>管理流程图及相应的具体工作要求。<br>1、 收案后 5 天内完成：<br>初步整理卷宗， 对案件进行分类、 筛查、 标注；<br>在高院身份信息查询系统中查询并打印当事人的户籍信息；<br>向被告所有联系地址邮寄起诉书、 证据材料、 到庭传票， 完成首次邮寄送达；<br>拨打被告所有联系电话， 并做好相应电话工作记录。</p>
<p>2、 收案后 5-20 天内完成：<br>对户籍地在北京市内的被告进行上门送达；<br>在高院裁判文书数据库中搜索被告有无在先的刑事判决， 准备向仍在北京市内监狱服刑的被<br>告进行送达；<br>筛除无身份证信息及无申请表原件的案件后， 制作批量开庭公告稿, 向人民法院报刊登公告。<br>3、 开庭公告见报后至开庭前完成：<br>委托外地法院送达的全部手续；<br>拨打被告无人接听的电话；<br>核实原告提交的证据原件， 如信用卡申请表原件、 交易明细， 甄别是否存在伪冒办卡情况；<br>向被告户籍地邮寄开庭传票， 完成第二次邮寄送达工作；<br>整理卷宗内文件， 核查邮单有无漏寄情况；<br>准备批量案件的开庭笔录；<br>草拟批量案件的裁判文书。<br>4、 开庭后 7 天内完成：<br>批量案件的裁判文书校核工作；<br>系统报结工作。<br>5、 案件报结后完成：<br>向被告户籍地邮寄送达判决书；<br>制作批量宣判公告稿， 向人民法院报刊登公告；<br>裁判文书上网工作；<br>60 日内完成卷宗归档。<br>（二） 程序问题的处理<br>1、 管辖权的确定<br>《中华人民共和国民事诉讼法》 第三十四条规定： “合同或者其他财产权益纠纷的当事人可<br>以书面协议选择被告住所地、 合同履行地、 合同签订地、 原告住所地、 标的物所在地等与争<br>议有实际联系的地点的人民法院管辖， 但不得违反本法对级别管辖和专属管辖的规定。 ”《最<br>高人民法院关于适用&lt;中华人民共和国民事诉讼法&gt;的解释》 第三十条规定：“根据管辖协议，<br>起诉时能够确定管辖法院的， 从其约定； 不能确定的， 依照民事诉讼法的相关规定确定管辖。”<br>对于欠款类银行卡纠纷案件的管辖， 由于信用卡领用合约中一般均有约定， 故应按约定进行<br>管辖。 少数案件如冒名申卡案件中， 被告与银行并未成立合同关系， 但合同关系是否成立应<br>是在案件实体审理中才能确定的事实， 因此仍可按领用协议中的约定管辖协议进行管辖。<br>2、 主体资格的审查<br>各银行的审核发卡机构一般为银行的信用卡中心， 由于部分银行的信用卡中心并不具备独立<br>诉讼的主体资格， 故发卡行多以本市分行一级的银行或者总行营业部作为原告进行诉讼。 司法实践中， 发卡行作为起诉依据的信用卡申领表上大多只有被告的签字， 没有银行的盖章，<br>领用合约中也没有表明与申卡人签订合同的具体主体。由于负责审核发卡的信用卡中心系隶<br>属于分行或总行营业部的机构， 故实践中一般认可提起诉讼的分行一级的银行或者总行营业<br>部作为原告的主体资格， 但该问题还需要进一步规范。 对于被告的身份信息， 一般应将原告<br>提交的起诉状中所列被告身份信息与证据中记载的被告身份信息进行比对， 审查两者是否一<br>致； 如当事人信息中含有身份证号的， 应在身份信息查询系统中进行核对， 如在身份信息查<br>询系统中查询不到被告身份信息， 应通知原告在一定期限内补充提交正确的材料。 如果原告<br>在一定期限内无法补充提交正确的材料， 应裁定驳回原告的起诉。<br>3、 送达的效力<br>在欠款类银行卡纠纷案件中， 大量案件存在送达困难的问题。 发卡行提供的被告地址一般为<br>持卡人的户籍地或者办卡申请表中被告填写的地址， 但是由于人口流动速度加快、 人户分离<br>现象突出、 申领人虚假填写地址等原因， 银行所提供的这些地址使得直接送达和邮寄送达方<br>式失效。 为了预防信用卡业务风险， 防范持卡人躲避透支信用卡后拖欠债务， 及时通过民事<br>诉讼主张权益， 部分银行在信用卡领用合约上约定了法律文书送达地址、 送达方式及送达后<br>果。 人民法院审理这类案件能否按照上述约定的方式及约定地址进行诉讼文书的送达， 且送<br>达后即发生法律效力， 实践中面临诸多复杂情形， 各地法院做法不一。<br>对于此类案件， 我们认为， 首先应当按照原告提供的联系方式进行送达； 如果没有找到， 应<br>当按照被告的户籍地址送达； 在穷尽上述手段后， 仍然无法联系被告的， 应当告知银行， 进<br>行公告送达。 公告期满被告仍然没有应诉的， 依法进行缺席审判。<br>此类案件， 应当注意穷尽各种送达方式， 并且将各阶段的送达情况告知银行， 并制作工作笔<br>录备查。 这种方式将原告提供的联系方式作为首先送达的地址， 有保留地认可约定效力， 在<br>没有找到的情况下再采取其他手段。 司法实践中， 在决定采取公告送达前， 承办人员需要与<br>原告方进行最后一次核实， 询问其是否能够提供被送达人的其他有效联系方式， 告知其公告<br>送达的法律后果及公告费的负担等情形， 确定送达穷尽后启动公告送达。<br>（三） 实体审理中的常见抗辩事由及处理思路<br>1、 如持卡人称身份证曾丢失， 本人未填写过信用卡申请表， 信用卡申请表上持卡人签名系<br>伪造， 本人未收到过信用卡且未使用过信用卡进行过消费。 针对此情形， 需要持卡人提交身<br>份证丢失的证明， 审查申请表上填写的信息是否真实， 申请表上签名是否为本人所签。 必要<br>时需要对签名进行笔迹鉴定， 如签名确非持卡人所签， 再无其他证据证明涉案信用卡与持卡<br>人有关， 则应裁定驳回原告的起诉。<br>2、 持卡人到庭后答辩称他人基于某种原因要求持卡人协助办卡， 持卡人提供本人身份证并<br>填写信用卡申请表， 收到信用卡后交予他人或者指定邮寄地址要求发卡行将卡片直接邮寄给<br>他人， 由本人或者他人开卡， 他人持卡消费后不还款， 持卡人认为本人未实际使用信用卡故拒绝还款。 针对此情形， 因持卡人系信用卡实际申请人， 客观上为他人开卡及用卡提供了便<br>利条件， 其与实际使用人之间的信用卡借用关系不足以对抗发卡行基于信用卡领用合约对持<br>卡人的付款请求权， 依照合同相对性的基本原则， 持卡人应对涉案信用卡欠款承担清偿责任。<br>3、 持卡人到庭后答辩称虽填写了信用卡申领表， 但并未收到过信用卡， 信用卡消费与其无<br>关。 信用卡的申领、 使用流程一般为申请人从发卡行的分支机构或者代办机构处取得信用卡<br>申请表， 申请人填写信用卡申请表并向发卡行分支机构或者代办机构提交信用卡申请表， 发<br>卡行分支机构或者代办机构按照批次将信用卡申请表交由发卡行信用卡业务部门（信用卡中<br>心， 持独立营业执照） 审核， 发卡行信用卡业务部门审核申请表及申请人信用记录， 审核通<br>过后发卡行信用卡业务部门按照申请人选择的邮寄地址向持卡人送达信用卡卡片、 持卡人收<br>到卡片后使用留存的固话或者手机开卡。 针对持卡人提出未收到信用卡的情形， 一方面要求<br>发卡行就向申请人适当履行送达信用卡卡片义务提供证据， 发卡行可以向法院提交向申请人<br>送达卡片的挂号信、 特快专递的底联， 或者提交能够证明发卡行按照申请人留存的邮寄地址<br>邮寄卡片有人签收的证明， 同时按照时间或者逻辑顺序提交能够证明信用卡开卡或者信用卡<br>消费或者信用卡挂失等等与申请人有关的证明， 证明发卡行向申请人履行了送达信用卡卡片<br>的义务。<br>4、 持卡人到庭后答辩称虽填写了信用卡申领表， 也收到了信用卡， 但实际并未开卡， 信用<br>卡消费与其无关。 根据对上述 3 中信用卡申领及使用流程的描述， 针对持卡人提出信用卡收<br>到了但并未开卡的情形， 一方面要仔细核实信用卡领用合约中的有效开卡电话是否是申请人<br>提供， 是否与申请人有关， 一般情况下只要申请人在信用卡领用合约签名确认处签字确认，<br>即视为对有效开卡电话的认可。 同时要求发卡行就开卡申请是通过申请人留存的指定固话或<br>者手机提供证明， 后即使经过录音辨认实际开卡人确不是申请人本人， 但由于实际开卡人确<br>系使用了申请表中指定的固话或者手机开卡， 这实际造成了足以使发卡行相信其就是申请人<br>本人所为或者实际开卡人有代理权的表象， 根据表现代理的相关理论， 开卡的法律后果应由<br>申请人承担。<br>5、 持卡人到庭后答辩称虽填写了信用卡申领表也向发卡行递交了信用卡申领表， 但是在未<br>收到信用卡卡片前即通知发卡行信用卡客服要求停办信用卡， 持卡人与发卡行并未建立信用<br>卡合同关系。 后卡片被发卡行寄出后开卡消费， 持卡人不同意承担还款责任。 处理此种情形，<br>首先应对信用卡申领各环节中相关行为的法律性质有所认识： 发卡行向不特定的社会公众发<br>出信用卡申请表的行为视为要约邀请； 申请人接收信用卡申请表、按要求填写信用卡申请表，<br>表示接受信用卡领用合约相关条款的约束并签字确认视为要约； 要约到达受要约人时生效，<br>故申请人填写的信用卡申领表到达发卡行信用卡业务部门时生效， 在此过程中可以参照合同<br>法中关于要约撤回和要约撤销的相关规定处理； 发卡行信用卡业务部门收到信用卡申请表审<br>核予以批准视为承诺， 承诺应当以通知的方式作出， 发卡行信用卡业务部门将信用卡邮寄申<br>请人指定的地址， 申请人收到卡片即表明收到承诺的通知， 信用卡合同关系即成立。 因此，<br>要充分参照上述各行为的时间点以确认申请人与发卡行的信用卡领用关系是否成立。再此基<br>础上， 根据 3、 4 的处理思路进行进一步处理。</p>
<p>6、 持卡人到庭后答辩称信用卡领用合约中的相关条款系格式条款， 要求确认该条款无效。<br>对于格式条款的效力问题应综合分析， 应依据《中华人民共和国合同法》 第三十九、 四十条<br>以及最高人民法院《关于适用〈中华人民共和国合同法〉 若干问题的解释（二） 》 第九、 十<br>条的规定进行认定。 发卡行应对其已尽《中华人民共和国合同法》 第三十九条规定的合理的<br>提示和说明义务承担举证责任。 持卡人抄写信用卡申领表中关于“已阅读并了解免责限责条<br>款， 并同意接受上述条款内容” 等声明并签字的， 可以认定发卡行尽到合理的提示和说明义<br>务, 但持卡人有相反证据推翻的情形除外。 发卡行虽尽到合理的提示和说明义务， 但格式条<br>款属于《中华人民共和国合同法》 第四十条规定情形的， 应认定该格式条款无效。<br>7、 如果持卡人以信用卡被盗刷为由， 已经向公安机关报案， 要求法院依法中止本案的审理。<br>法院确实认为信用卡纠纷案件的审理需以刑事案件的审理结果为依据的， 应依据《中华人民<br>共和国民事诉讼法》 第一百五十条第（五） 项关于“本案必须以另一案的审理结果为依据，<br>而另一案尚未审结” 的规定中止审理； 如不需要以刑事案件的审理结果为依据的， 法院应当<br>依照《最高人民法院关于在审理经济纠纷案件中涉及经济犯罪嫌疑若干问题的规定》 中的第<br>十条的规定处理， 即“人民法院在审理经济纠纷案件中， 发现与本案有牵连， 但与本案不是<br>同一法律关系的经济犯罪嫌疑线索、 材料， 应将犯罪嫌疑线索、 材料移送有关公安机关或检<br>察机关查处， 经济纠纷案件继续审理。 ”<br>8、 如持卡人称其持有的信用卡透支消费确系其本人所为， 但由于其信用卡诈骗的行为已经<br>被公诉机关追究刑事责任， 持卡人已被判处过有期徒刑并判决退还赃款， 且赃款已经退回发<br>卡行， 故不同意支付透支消费产生的利息、 滞纳金及超限费等费用。 一方面， 持卡人恶意透<br>支构成犯罪的， 发卡行主张信用卡合同有效， 法院应予支持； 持卡人因信用卡诈骗的行为被<br>追究刑责不能对抗发卡行向其主张的民事权利， 发卡行作为债权人仍可向持卡人主张给付透<br>支款本息； 另一方面， 法院在查明赃款确已退回发卡行的前提下， 可在判决时在本金部分予<br>以扣除。<br>9、 如持卡人称发卡行提交的交易明细记录或清单为发卡行自行打印后加盖印章的证据， 不<br>认可交易明细记录或清单的证明效力。 根据《银行卡业务管理办法》 第三十九条规定， “发<br>卡银行依据密码等电子信息为持卡人办理的存取款、转账结算等各类交易所产生的电子信息<br>记录， 均为该项交易的有效凭据。 发卡行可凭交易明细记录或清单作为记账凭证。 ” 因此，<br>发卡行向法院提交的交易明细记录或清单是证明持卡人拖欠银行卡相关款项的证据， 也符合<br>法定的证据形式， 应当认定其证明效力。 持卡人若有异议， 应当提交相反的证据予以证明，<br>否则应承担举证不能的法律后果。<br>10、 如果持卡人称其最后一次透支还款后， 发卡行长期未向其主张权利已经超过 2 年诉讼时<br>效， 要求法院驳回发卡行的诉讼请求的， 一般可以参照以下情形处理： 一是发卡行在持卡人<br>关联账户直接扣划欠款本息的， 属于《最高人民法院关于审理民事案件适用诉讼时效制度若<br>干问题的规定》 第十条第（三） 项规定的诉讼时效中断事由的， 具有诉讼时效中断的效力。<br>二是持卡人关联账户中无余额可扣， 发卡行采取按约定在账户中增加透支额计息的方式主张<br>权利， 记载该内容的对账单寄送持卡人的， 诉讼时效期间中断。 三是发卡行按照持卡人在银<br>行卡领用合约上留下的电话、 通信地址催收债权， 持卡人未通知发卡行电话、 通信地址变更<br>导致上述催收通知没有实际到达持卡人的， 应认定催收行为具有诉讼时效中断的效力。 四是<br>发卡行将银行卡债权打包后委托专门公司、 律师事务所等单位催收的， 受托人以发卡行的名<br>义或者持卡人知道或者应当知道其是为发卡行催收的， 催收行为具有诉讼时效中断的效力。<br>二、 盗刷类银行卡纠纷案件的审理思路<br>盗刷类银行卡纠纷案件主要指因不法分子盗刷银行卡的行为而引发的持卡人要求发卡<br>行承担给付借记卡内被盗刷资金本息， 或者返还被发卡行扣划信用卡本息责任， 或者抗辩其<br>不应偿还被盗刷信用卡本息的银行卡纠纷案件。 盗刷类银行卡纠纷案件主要分为两类， 一类<br>为有卡片介质存在的银行卡盗刷案件， 如伪卡交易案件。 另一类为无卡片介质存在的银行卡<br>盗刷案件， 如涉及网上支付、 手机支付、 第三方支付的银行卡盗刷案件。 近两年， 因银行卡<br>盗刷而引发的银行卡纠纷案件的收案数量增长迅速， 由于缺乏统一的司法政策指导， 各地法<br>院在举证责任分配、 归责原则适用、 裁判尺度上亦不一致， 给审理此类案件带来了较大难度。<br>（一） 民刑交叉情形下的受理<br>在盗刷类银行卡纠纷案件中， 实施盗刷行为的犯罪嫌疑人应当是第一责任人， 但在司法实践<br>中， 由于犯罪嫌疑人逃亡下落不明， 难以向其主张权利， 故持卡人往往以发卡行、 特约商户、<br>收单行等作为被告提起诉讼， 请求其承担给付被盗刷款项本息损失的责任。 在银行卡纠纷案<br>件中， 同一主体之间， 因不同的法律事实分别违反了民商事、 刑事法律的规定， 民商事案件<br>和刑事案件应当分别受理和审理。<br>在盗刷类银行卡纠纷案件中， 由于发卡行与持卡人之间因申领银行卡行为而建立了民商事法<br>律关系， 故无论持卡人是基于合同法律关系还是侵权法律关系诉请发卡行承担卡内资金损失<br>责任的， 由于持卡人与发卡行之间存在着民商事法律关系， 则该案件均应作为民商事案件受<br>理， 而不能因为涉及到刑事犯罪而裁定不予受理， 或者受理后裁定驳回起诉。 如案件不需要<br>以刑事案件的审理结果为依据的， 人民法院应将刑事犯罪嫌疑材料移交公安、检察机关处理，<br>民商事纠纷案件继续审理。当事人一方以追赃程序未完成为由主张民商事纠纷案件不应受理<br>或者受理后应中止审理的， 人民法院应不予支持。<br>（二） 侵权责任或违约责任的认定<br>在盗刷类银行卡纠纷案件中， 不仅当事人起诉的法律依据不一致， 在理论和实务层面也都存<br>在不同的观点。<br>第一种观点认为， 由于申领和发放银行卡， 持卡人与发卡行之间形成了银行卡合同法律关系。<br>因此， 在持卡人或者发卡行基于银行卡合同而起诉对方当事人时， 当事人之间构成银行卡合<br>同法律关系。<br>第二种观点认为， 《商业银行法》 第 6 条规定： “商业银行应当保障存款人的合法权益不受<br>任何单位和个人的侵犯。 ” 《侵权责任法》 第 37 条规定： “宾馆、 商场、 银行、 车站、 娱<br>乐场所等公共场所的管理人或者群众性活动的组织者， 未尽到安全保障义务， 造成他人损害<br>的， 应当承担侵权责任。 因第三人的行为造成他人损害的， 由第三人承担侵权责任； 管理人<br>或者组织者未尽到安全保障义务的， 承担相应的补充责任。 ” 根据上述规定， 发卡行负有保<br>护持卡人卡内资金安全以及用卡环境安全的安全保障义务。持卡人以发卡行违反安全保障义<br>务造成卡内资金损失为由诉请判令发卡行承担侵权责任的， 当事人之间形成侵权法律关系。<br>第三种观点则认为， 在持卡人起诉发卡行的银行卡盗刷案件中， 存在违约与侵权的竞合。<br>笔者认为， 持卡人起诉发卡行， 请求发卡行承担银行卡被盗刷的责任， 宜认定为违约责任。<br>首先， 从立法渊源上看， 《侵权责任法》 第 37 条来源于最高人民法院《关于审理人身损害<br>赔偿案件适用法律若干问题的解释》 第 6 条“从事住宿、 餐饮、 娱乐等经营活动或者其他社<br>会活动的自然人、 法人、 其他组织， 未尽合理限度范围内的安全保障义务致使他人遭受人身<br>损害， 赔偿权利人请求其承担相应赔偿责任的， 人民法院应予支持” ， 故第 37 条宜理解为<br>人身权， 而非财产权。<br>其次， 第 37 条是一种补充责任， 承担补充责任应当有法律的明确规定， 不宜随意扩大解释。<br>条文明确将“银行” 与“宾馆、 商场、 银行、 车站、 娱乐场所等公共场所” 并列在一起， 作<br>为“管理人” 、 “群众性活动的组织者” 的定语， 应当说这种责任并非是在平等主体之间因<br>正常经营或商业行为应当承担的责任。<br>第三， 侵权责任法规定补充责任的目的在于双方之间没有合同关系， 或者合同中并没有对此<br>类责任作出明确的约定， 从公平正义上考虑， 在产生损害时应当承担一种补充责任。 而发卡<br>行与持卡人之间显然存在银行卡合同关系， 发卡行有义务保障持卡人账户内的资金安全， 故<br>不再适用此类侵权责任。<br>第四， 违约责任只需要持卡人证明发卡行违约即可， 并不需要证明发卡行的过错， 而侵权责<br>任需要持卡人证明发卡行的过错。 在持卡人本身举证能力较弱的情况下， 采用侵权责任不利<br>于对诉讼能力较弱的持卡人的保护。<br>（三） 伪卡交易情形下举证责任的分配与责任认定<br>举证责任分配， 实际上是在诉讼当事人之间分配事实的真伪得不到证明时所产生的败诉风<br>险。 因此， 如何确定举证责任， 是关系到伪卡交易案件中责任主体的认定的一个关键问题。<br>在司法实务中， 关于伪卡交易情形下， 发卡行的责任认定问题， 主要有三种处理思路： 第一<br>种思路是判决持卡人承担 100%的伪卡交易损失的责任， 这种思路将举证责任分配给持卡人，<br>由持卡人举证证明发卡行具有过错； 第二种思路是判决发卡行承担 100%的卡内资金损失的<br>责任， 这种思路将举证责任分配给发卡行， 由发卡行举证证明持卡人具有过错； 第三种思路<br>是按照过错比例判令发卡行、 持卡人分担卡内资金损失的责任。<br>笔者认为， 伪卡交易是指他人盗用银行卡信息和密码， 通过伪造或者变造银行卡卡片进行消<br>费、 取现、 转账的行为。<br>以下几方面事实是判断是否存在伪卡交易的重点：<br>一是确定争议的交易为哪几笔及争议交易发生的时间和地点；<br>二是确定争议的交易系伪卡所为；<br>三是发卡行无证据证明持卡人对伪卡交易具有过错。<br>在伪卡交易案件中， 应当在确定法律关系的基础上， 综合考虑发卡行与持卡人的经济地位、<br>承担风险的能力和举证能力进行举证责任的分配。 在银行卡盗刷案件中， 持卡人应当对伪卡<br>交易导致其银行卡账户内资金减少或者透支额度增加的事实承担初步举证责任。持卡人提供<br>了其持有的真卡、 在涉案时间内的用卡记录、 报警记录、 挂失记录或者刑事判决等证据材料<br>的几项或者全部， 可以判断存在伪卡交易的， 应当认定其尽到了初步举证责任。 发卡行、 收<br>单机构、 特约商户应对持卡人未尽妥善保管银行卡、 密码义务的事实， 承担举证责任。 如果<br>发卡行、 收单机构、 特约商户不能提供上述证据， 应当承担举证不能的法律后果。<br>一般情况下， 具备下列情形之一， 可以认定属于伪卡交易：<br>（一） 争议交易发生时、 发生地的监控录像显示持卡交易人并非持卡人本人；<br>（二） 存在不法分子安装摄像头等设备窃取银行卡信息、 密码等行为；<br>（三） 监控录像显示交易中的银行卡的样式、 颜色、 标记等与真实银行卡有较大差异；<br>（四） 结合交易发生地和持卡人持有的银行卡所在地、 交易时间等时空距离判断， 持卡人难<br>以使用同一张银行卡往返两地操作；<br>（五） 生效判决认定案涉交易系罪犯所为伪卡交易。 以上五种情况基本上可以作为判断存在<br>伪卡交易的情形。<br>（四） 无卡交易情形下的举证责任分配与责任认定<br>无卡交易情形下的银行卡盗刷纠纷， 主要指通过网上支付、 手机支付、 第三方支付等交易方<br>式导致持卡人银行卡账户内的资金被盗刷的案件。 在无卡交易的情形下， 由于持卡人账户内<br>的资金转移并未以银行卡卡片作为介质， 故此类案件在举证责任的分配和责任的认定上与伪<br>卡交易的案件存在一定的区别。<br>发卡行应当根据银行卡的种类、 交易类型、 支付金额等因素， 采用具有安全性的持卡人身份<br>认证方式。 身份认证方式是否具有安全性， 可综合其是否符合《电子签名法》 等法律、 法规<br>和业务规则的规定、是否达到行为当时通用技术水平下保障网上交易安全的技术标准等因素<br>进行综合判断。因身份认证不具有安全性而导致银行卡被盗刷的， 发卡行应当承担法律责任。<br>持卡人与发卡行签订银行卡合同时， 发卡行应将银行卡是否具有网上支付功能、 开通该功能<br>的方式和使用该功能的法律后果等情况告知持卡人。 发卡行未尽告知义务， 或者虽尽告知义<br>务， 但持卡人未同意， 发卡行单方开通该功能导致银行卡被盗刷的， 应承担相应的法律责任。<br>三、 维权类银行卡纠纷案件的审理思路<br>维权类银行卡纠纷案件主要指持卡人因发卡行收取费用、 开通业务、 提供服务等产生争<br>议而起诉发卡行， 要求维护自身合法权益的银行卡纠纷案件。 当前， 维权类银行卡纠纷案件<br>主要包括持卡人对银行卡合同中的格式条款有争议、 发卡行擅自为持卡人开通的增值业务、<br>持卡人对存入银行的欠款数额有争议、继承人要求支取被继承人的银行存款等多种类型的案<br>件。<br>（一） 主体资格的审查<br>在维权类银行卡纠纷案件中， 应注意与原告形成银行卡合同关系的主体是总行、 分行还是支<br>行。 由于自然人作为原告的诉讼能力相对较弱， 经常会出现被告主体错误或部分被告与案件<br>无关的情况， 此时应充分行使释明权， 告知其适格的被告。 如原告坚持由错误的被告承担责<br>任， 只要其与案件有利害关系， 由于有明确的被告， 也应当进行实体审理后驳回原告的诉讼<br>请求。<br>（二） 格式条款的效力认定<br>维权类银行卡案件往往涉及到格式条款的问题。 银行为持卡人提供相关金融服务时， 合同条<br>款由银行单方拟定， 为格式条款。 银行开展的业务有的较为复杂， 合同的格式条款中多有一<br>些专业术语和免责、 限责条款， 对于缺乏专业知识的持卡人而言， 其与发卡行在信息的掌握<br>上存在着不对称性， 其注意能力和交涉能力也处于劣势， 很难准确理解条款涵义和了解其<br>法律后果， 如果任由发卡行根据持卡人并不理解、 未真正同意的格式条款内容确定当事人之<br>间的权利和义务， 任意免责、 限责， 则对持卡人有失公平， 也有违民商法的诚实信用原则。<br>我国《合同法》 第 39 条规定了格式条款提供方的说明义务。 即： “采用格式条款订立合同<br>的， 提供格式条款的一方应当遵循公平原则确定当事人之间的权利和义务， 并采取合理的方<br>式提请对方注意免除或者限制其责任的条款， 按照对方的要求， 对该条款予以说明” 。 关于<br>说明义务的履行标准和程度， 最高人民法院《关于适用〈中华人民共和国合同法〉 若干问题<br>的解释（二） 》 （以下简称《合同法解释（二） 》 ） 第 6 条进行了规定， 即“采用足以引起<br>对方注意的文字、 符号、 字体等特别标识” 。<br>实践中， 对于格式条款争议， 发卡行应证明对上述条款履行说明义务， 并经相对人同意。 一<br>般来说， 银行会提供相对人声明已阅读全部材料， 充分了解并清楚知晓该业务的相关信息的<br>签字确认单。 在银行能够提供确认单， 且合同条款没有显失公平的情况下， 可以认定相应条<br>款的效力。<br>（三） 增值业务效力的认定<br>近年来， 各银行普遍针对银行卡开发出较多增值业务， 如短信提醒、 分期付款、 现金转存等<br>基本增值业务、 还有透支转账分期还款、 存贷两用、 提高临时额度并将大额消费自动转分期<br>等更为复杂的增值业务， 甚至还包括与商户合作开发的与银行自身业务无关的增值服务。<br>由于该类案件涉及的并非一般的银行卡业务， 故在审理时应当针对个案重点审查相关的法律<br>关系是否存在。<br>例如， 持卡人与发卡行基于信用卡的发卡建立了法律关系， 在申领协议中也有关于分期付款<br>的约定， 但发卡行开展了一项新的业务， 即在一定期限内提高信用卡的额度， 但单笔消费超<br>过一定数额即自动转为分期付款。这项业务并非双方基于信用卡发卡而产生的法律关系的内<br>容， 应审查双方是否有变更或增加合同内容的真实的意思表示。</p>
]]></content>
      <categories>
        <category>法律知识</category>
      </categories>
      <tags>
        <tag>法院</tag>
        <tag>信用卡纠纷</tag>
      </tags>
  </entry>
  <entry>
    <title>要素式审核-最高人民法院关于民商事案件繁简分流和调解速裁操作规程</title>
    <url>//p/27f07296.html</url>
    <content><![CDATA[<p>最高人民法院关于民商事案件繁简分流和调解速裁操作规程</p>
<a id="more"></a>
<div class="pdfobject-container" data-target="/files/最高人民法院关于民商事案件繁简分流和调解速裁操作规程.pdf" data-height="800px"></div>
]]></content>
      <categories>
        <category>法律知识</category>
      </categories>
      <tags>
        <tag>法院</tag>
      </tags>
  </entry>
  <entry>
    <title>Java开发手册(泰山版)</title>
    <url>//p/14cca2b5.html</url>
    <content><![CDATA[<p>Java开发手册(泰山版)</p>
<a id="more"></a>
<div class="pdfobject-container" data-target="/files/Java开发手册(泰山版).pdf" data-height="700px"></div>]]></content>
      <categories>
        <category>开发技术</category>
      </categories>
      <tags>
        <tag>java开发手册</tag>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows下安装及使用NVM</title>
    <url>//p/c2331b8d.html</url>
    <content><![CDATA[<h2 id="Windows下安装及使用NVM"><a href="#Windows下安装及使用NVM" class="headerlink" title="Windows下安装及使用NVM"></a>Windows下安装及使用NVM</h2><p>​    所谓nvm就是一个可以让你在同一台机器上安装和切换不同版本node的工具。这里是一篇安装及使用教程。</p>
<h3 id="第一步：下载nvm"><a href="#第一步：下载nvm" class="headerlink" title="第一步：下载nvm"></a>第一步：下载nvm</h3><p>可以到github上下载最新版本<a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noopener">https://github.com/coreybutler/nvm-windows/releases</a></p>
<p>nvm-noinstall.zip： 这个是绿色免安装版本，但是使用之前需要配置<br>nvm-setup.zip：这是一个安装包，下载之后点击安装，无需配置就可以使用，方便。<br>Source code(zip)：zip压缩的源码<br>Sourc code(tar.gz)：tar.gz的源码，一般用于*nix系统</p>
<h3 id="第二部：安装"><a href="#第二部：安装" class="headerlink" title="第二部：安装"></a>第二部：安装</h3><p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200428124858.png" alt="这里写图片描述"></p>
<p>之后，按照提示完成安装即可，安装完成后可以检测一下是否安装成功<br>在命令行输入nvm，如果出现nvm版本号和一系列帮助指令，则说明nvm安装成功；否则，可能会提示nvm: command not found</p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200428124854.jfif" alt="这里写图片描述"></p>
<h3 id="第三步：修改settings-txt"><a href="#第三步：修改settings-txt" class="headerlink" title="第三步：修改settings.txt"></a>第三步：修改settings.txt</h3><p>在你安装的目录下找到settings.txt文件，打开后加上<br>node_mirror: <a href="https://npm.taobao.org/mirrors/node/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/node/</a><br>npm_mirror: <a href="https://npm.taobao.org/mirrors/npm/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/npm/</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200428124847.png" alt="这里写图片描述"></p>
<p>这一步主要是将npm镜像改为淘宝的镜像，可以提高下载速度。</p>
<h3 id="第四步：使用"><a href="#第四步：使用" class="headerlink" title="第四步：使用"></a>第四步：使用</h3><p>nvm arch [32|64]： 显示node是运行在32位还是64位模式。指定32或64来覆盖默认体系结构。<br>-nvm install <version> [arch]：该可以是node.js版本或最新稳定版本latest。（可选[arch]）指定安装32位或64位版本（默认为系统arch）。设置[arch]为all以安装32和64位版本。在命令后面添加–insecure，可以绕过远端下载服务器的SSL验证。<br>nvm list [available]：列出已经安装的node.js版本。可选的available，显示可下载版本的部分列表。这个命令可以简写为nvm ls [available]。<br>nvm on： 启用node.js版本管理。<br>nvm off： 禁用node.js版本管理(不卸载任何东西)<br>nvm proxy [url]： 设置用于下载的代理。留[url]空白，以查看当前的代理。设置[url]为none删除代理。<br>nvm node_mirror [url]：设置node镜像，默认为<a href="https://nodejs.org/dist/.。可以设置为淘宝的镜像https://npm.taobao.org/mirrors/node/" target="_blank" rel="noopener">https://nodejs.org/dist/.。可以设置为淘宝的镜像https://npm.taobao.org/mirrors/node/</a><br>nvm npm_mirror [url]：设置npm镜像，默认为<a href="https://github.com/npm/npm/archive/。可以设置为淘宝的镜像https://npm.taobao.org/mirrors/npm/" target="_blank" rel="noopener">https://github.com/npm/npm/archive/。可以设置为淘宝的镜像https://npm.taobao.org/mirrors/npm/</a><br>nvm uninstall <version>： 卸载指定版本的nodejs。<br>nvm use [version] [arch]： 切换到使用指定的nodejs版本。可以指定32/64位[arch]。<br>-nvm use <arch>：将继续使用所选版本，但根据提供的值切换到32/64位模式<br>nvm root [path]： 设置 nvm 存储node.js不同版本的目录 ,如果未设置，将使用当前目录。<br>-nvm version： 显示当前运行的nvm版本，可以简写为nvm v<br>首先，使用nvm list查看目前已经安装的版本</p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200428124808.png" alt="这里写图片描述"></p>
<p>nvm list available 显示可下载版本的部分列表</p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200428124827.png" alt="这里写图片描述"></p>
<p>nvm install 版本号 安装指定的版本的nodejs</p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200428124833.png" alt="这里写图片描述"></p>
<p>nvm use 版本号 使用指定版本的nodejs</p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200428124840.png" alt="这里写图片描述"></p>
]]></content>
      <categories>
        <category>开发经验</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA撤销commit</title>
    <url>//p/934109a7.html</url>
    <content><![CDATA[<p>日常工作中会遇到 commit 到本地仓库的代码，因为一些原因，需要撤销后在提交到本地，或者需要整合多次 commit，然后 push 到远程仓库。下面是 IDEA 支持的快捷方式。<br> <strong>Undo Commit</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200403162635.png" alt="20200403035359132"></p>
<p>可以在 Version Control 查看到刚刚撤销的内容</p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200403162740.png" alt="20200403035409033">此时，就可以从新 commit 代码了</p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA中Git的更新、提交、还原方法</title>
    <url>//p/503970b4.html</url>
    <content><![CDATA[<p>第一步：在提交项目之前必须先对项目进行更新，此项特别重要，如果不进行更新，别人有项目提交到服务器上，那么你的项目将会提交不上去，使用git解决冲突会比较麻烦，<strong>即使你解决了冲突，但是有时候不注意会冲掉别人写的代码</strong>，不像svn使用那么简单，所以提交自己项目前必须进行更新（<strong>特别重要</strong>）；如图1：选择pull进行更新代码操作；</p>
<a id="more"></a>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200403164225.png" alt="图1"></p>
<p>第二步：更新后的结果如图2、3；其中图2：表示从服务器上更新下来的代码；图3：表示服务器上没有需要更新的代码，当服务器上没有需要更新到本地的代码时，则可以放心的进行提交代码的操作；</p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200403164420.png" alt="图2"></p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200403164601.png" alt="图3"></p>
<p>第三步：1.<strong>当确定第二步操作完之后</strong>，此时可以进行提交代码的操作，图4中表示中红色的项目表示新创建的项目{注：如果是蓝色，表示修改过的项目}（红色和蓝色都表示待提交项目），如果是红色的，则选择图5：add,如果项目是蓝色，则选择图5.1 ：commit file;<br><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200403164937.png" alt="图4"><br><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200403165258.png" alt="图5"><br>2.当add操作完成之后项目颜色会变成绿色，如图6，红色表示为进行add操作；<br><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200403165545.png" alt="图6"><br>3.进行commit Directory操作 如图7：<br><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200403165631.png" alt="图7"><br>4.当出现如图8的窗口时，绿色和蓝色表示待提交项目，在这里可以进行相应的勾选，下面的commit message区域填写，模块名称或者提交代码的相应信息，下面的下拉菜单选择commit and push,如红色8区域；<br><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200403165754.png" alt="图8"><br>5.如图9：当出现下面窗口时，选择红色区域9部分的push按钮，进行提交项目操作，至此项目提交所以操作完成，需要等几秒钟会有相应提交成功或者是提交失败的提示，如果提交失败则表示，你本地项目没有进行更新，和服务器上的项目有冲突，需要解决冲突，然后才能提交(注：当pull失败时，说明服务器上的代码和本地代码有冲突，这时则需要把本地有冲突的代码备份，然后还原，再pull，这时pull成功后，再把自己备份的代码部分，拷入相应的代码中，这时候再进行push就可以了)。<br><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200403165906.png" alt="图9"><br>第四还原操作：如图选择10区域按钮：revert进行还原操作；<br><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200403165906.png" alt="图10"></p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx常用配置</title>
    <url>//p/30985643.html</url>
    <content><![CDATA[<h1 id="Nginx常用配置"><a href="#Nginx常用配置" class="headerlink" title="Nginx常用配置"></a>Nginx常用配置</h1><h2 id="常用代理Server配置"><a href="#常用代理Server配置" class="headerlink" title="常用代理Server配置"></a>常用代理Server配置</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;    &#x2F;&#x2F;监听的本地端口</span><br><span class="line">    server_name  localhost;    </span><br><span class="line">    </span><br><span class="line">                </span><br><span class="line">    location &#x2F;api1&#x2F; &#123;</span><br><span class="line">        proxy_pass  http:&#x2F;&#x2F;localhost:8080; </span><br><span class="line">    &#125;</span><br><span class="line">    # http:&#x2F;&#x2F;localhost&#x2F;api1&#x2F;xxx -&gt; http:&#x2F;&#x2F;localhost:8080&#x2F;api1&#x2F;xxx;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    location &#x2F;api2&#x2F; &#123;</span><br><span class="line">        proxy_pass  http:&#x2F;&#x2F;localhost:8080&#x2F;;</span><br><span class="line">    &#125;</span><br><span class="line">    # http:&#x2F;&#x2F;localhost&#x2F;api2&#x2F;xxx -&gt; http:&#x2F;&#x2F;localhost:8080&#x2F;xxx;                    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    location &#x2F;api3 &#123;</span><br><span class="line">        proxy_pass  http:&#x2F;&#x2F;localhost:8080;</span><br><span class="line">    &#125;</span><br><span class="line">    # http:&#x2F;&#x2F;localhost&#x2F;api3&#x2F;xxx -&gt; http:&#x2F;&#x2F;localhost:8080&#x2F;api3&#x2F;xxx;   </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    location &#x2F;api4 &#123;</span><br><span class="line">        proxy_pass  http:&#x2F;&#x2F;localhost:8080&#x2F;;</span><br><span class="line">    &#125;</span><br><span class="line">    # http:&#x2F;&#x2F;localhost&#x2F;api4&#x2F;xxx -&gt; http:&#x2F;&#x2F;localhost:8080&#x2F;&#x2F;xxx; </span><br><span class="line">    # 请注意这里的双斜线,好好分析一下</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    location &#x2F;api5&#x2F; &#123;</span><br><span class="line">        proxy_pass  http:&#x2F;&#x2F;localhost:8080&#x2F;haha;</span><br><span class="line">    &#125;</span><br><span class="line">    # http:&#x2F;&#x2F;localhost&#x2F;api5&#x2F;xxx -&gt; http:&#x2F;&#x2F;localhost:8080&#x2F;api4&#x2F;hahaxxx;</span><br><span class="line">    # 请注意这里的haha和xxx之间没有斜杠</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="携带Cookie配置"><a href="#携带Cookie配置" class="headerlink" title="携带Cookie配置"></a>携带Cookie配置</h2><p>常用于cas单点登录跳转</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">unstream 10api &#123;</span><br><span class="line">    server 192.168.1.10:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server&#123;</span><br><span class="line">    location ^~ &#x2F;prod-api&#x2F; &#123;</span><br><span class="line">                proxy_cookie_domain 10api $host;</span><br><span class="line">                </span><br><span class="line">                proxy_cookie_path &#x2F;strategy &#x2F;prod-api;</span><br><span class="line">                #注意这里的路径 是两个不同的路径,中间有空格,把前者路径的cookie设定到后者</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>PowerDesigner设计Name和Comment替换</title>
    <url>//p/cab30bdb.html</url>
    <content><![CDATA[<h1 id="PowerDesigner设计Name和Comment-替换"><a href="#PowerDesigner设计Name和Comment-替换" class="headerlink" title="PowerDesigner设计Name和Comment 替换"></a>PowerDesigner设计Name和Comment 替换</h1><p>comment 是注释。name 是字段描述 </p>
<p> 在 PowerDesigner中操作如下</p>
<p>PowerDesigner—&gt;Tools—&gt;Execute Commands—&gt;Edit/Run Scripts 下执行就OK了</p>
<a id="more"></a>
<h2 id="把comment-覆盖name"><a href="#把comment-覆盖name" class="headerlink" title="把comment 覆盖name"></a>把comment 覆盖name</h2><p>方法如下：</p>
<figure class="highlight vbscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Option</span>   <span class="keyword">Explicit</span> </span><br><span class="line">ValidationMode   =   <span class="literal">True</span> </span><br><span class="line">InteractiveMode   =   im_Batch</span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span>   mdl   <span class="comment">'   the   current   model</span></span><br><span class="line"></span><br><span class="line"><span class="comment">'   get   the   current   active   model </span></span><br><span class="line"><span class="keyword">Set</span>   mdl   =   ActiveModel </span><br><span class="line"><span class="keyword">If</span>   (mdl   <span class="keyword">Is</span>   <span class="literal">Nothing</span>)   <span class="keyword">Then</span> </span><br><span class="line">      <span class="built_in">MsgBox</span>   <span class="string">"There   is   no   current   Model "</span> </span><br><span class="line"><span class="keyword">ElseIf</span>   <span class="keyword">Not</span>   mdl.IsKindOf(PdPDM.cls_Model)   <span class="keyword">Then</span> </span><br><span class="line">      <span class="built_in">MsgBox</span>   <span class="string">"The   current   model   is   not   an   Physical   Data   model. "</span> </span><br><span class="line"><span class="keyword">Else</span> </span><br><span class="line">      ProcessFolder   mdl </span><br><span class="line"><span class="keyword">End</span>   <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span>   <span class="keyword">sub</span>   ProcessFolder(folder) </span><br><span class="line"><span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line">      <span class="keyword">Dim</span>   Tab   <span class="comment">'running     table </span></span><br><span class="line">      <span class="keyword">for</span>   <span class="keyword">each</span>   Tab   <span class="keyword">in</span>   folder.tables </span><br><span class="line">            <span class="keyword">if</span>   <span class="keyword">not</span>   tab.isShortcut   <span class="keyword">then</span> </span><br><span class="line">                  tab.name   =   tab.comment</span><br><span class="line">                  <span class="keyword">Dim</span>   col   <span class="comment">'   running   column </span></span><br><span class="line">                  <span class="keyword">for</span>   <span class="keyword">each</span>   col   <span class="keyword">in</span>   tab.columns </span><br><span class="line">                  <span class="keyword">if</span> col.comment=<span class="string">""</span> <span class="keyword">then</span></span><br><span class="line">                  <span class="keyword">else</span></span><br><span class="line">                        col.name=   col.comment </span><br><span class="line">                  <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line">                  <span class="keyword">next</span> </span><br><span class="line">            <span class="keyword">end</span>   <span class="keyword">if</span> </span><br><span class="line">      <span class="keyword">next</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">Dim</span>   view   <span class="comment">'running   view </span></span><br><span class="line">      <span class="keyword">for</span>   <span class="keyword">each</span>   view   <span class="keyword">in</span>   folder.Views </span><br><span class="line">            <span class="keyword">if</span>   <span class="keyword">not</span>   view.isShortcut   <span class="keyword">then</span> </span><br><span class="line">                  view.name   =   view.comment </span><br><span class="line">            <span class="keyword">end</span>   <span class="keyword">if</span> </span><br><span class="line">      <span class="keyword">next</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">'   go   into   the   sub-packages </span></span><br><span class="line">      <span class="keyword">Dim</span>   f   <span class="comment">'   running   folder </span></span><br><span class="line">      <span class="keyword">For</span>   <span class="keyword">Each</span>   f   <span class="keyword">In</span>   folder.Packages </span><br><span class="line">            <span class="keyword">if</span>   <span class="keyword">not</span>   f.IsShortcut   <span class="keyword">then</span> </span><br><span class="line">                  ProcessFolder   f </span><br><span class="line">            <span class="keyword">end</span>   <span class="keyword">if</span> </span><br><span class="line">      <span class="keyword">Next</span> </span><br><span class="line"><span class="keyword">end</span>   <span class="keyword">sub</span></span><br></pre></td></tr></table></figure>
<h2 id="将name覆盖comment"><a href="#将name覆盖comment" class="headerlink" title="将name覆盖comment"></a>将name覆盖comment</h2><p> 方法如下</p>
<figure class="highlight vbscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Option</span>   <span class="keyword">Explicit</span> </span><br><span class="line">ValidationMode   =   <span class="literal">True</span> </span><br><span class="line">InteractiveMode   =   im_Batch</span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span>   mdl   <span class="comment">'   the   current   model</span></span><br><span class="line"></span><br><span class="line"><span class="comment">'   get   the   current   active   model </span></span><br><span class="line"><span class="keyword">Set</span>   mdl   =   ActiveModel </span><br><span class="line"><span class="keyword">If</span>   (mdl   <span class="keyword">Is</span>   <span class="literal">Nothing</span>)   <span class="keyword">Then</span> </span><br><span class="line">      <span class="built_in">MsgBox</span>   <span class="string">"There   is   no   current   Model "</span> </span><br><span class="line"><span class="keyword">ElseIf</span>   <span class="keyword">Not</span>   mdl.IsKindOf(PdPDM.cls_Model)   <span class="keyword">Then</span> </span><br><span class="line">      <span class="built_in">MsgBox</span>   <span class="string">"The   current   model   is   not   an   Physical   Data   model. "</span> </span><br><span class="line"><span class="keyword">Else</span> </span><br><span class="line">      ProcessFolder   mdl </span><br><span class="line"><span class="keyword">End</span>   <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="comment">'   This   routine   copy   name   into   comment   for   each   table,   each   column   and   each   view </span></span><br><span class="line"><span class="comment">'   of   the   current   folder </span></span><br><span class="line"><span class="keyword">Private</span>   <span class="keyword">sub</span>   ProcessFolder(folder) </span><br><span class="line">      <span class="keyword">Dim</span>   Tab   <span class="comment">'running     table </span></span><br><span class="line">      <span class="keyword">for</span>   <span class="keyword">each</span>   Tab   <span class="keyword">in</span>   folder.tables </span><br><span class="line">            <span class="keyword">if</span>   <span class="keyword">not</span>   tab.isShortcut   <span class="keyword">then</span> </span><br><span class="line">                  tab.comment   =   tab.name </span><br><span class="line">                  <span class="keyword">Dim</span>   col   <span class="comment">'   running   column </span></span><br><span class="line">                  <span class="keyword">for</span>   <span class="keyword">each</span>   col   <span class="keyword">in</span>   tab.columns </span><br><span class="line">                        col.comment=   col.name </span><br><span class="line">                  <span class="keyword">next</span> </span><br><span class="line">            <span class="keyword">end</span>   <span class="keyword">if</span> </span><br><span class="line">      <span class="keyword">next</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">Dim</span>   view   <span class="comment">'running   view </span></span><br><span class="line">      <span class="keyword">for</span>   <span class="keyword">each</span>   view   <span class="keyword">in</span>   folder.Views </span><br><span class="line">            <span class="keyword">if</span>   <span class="keyword">not</span>   view.isShortcut   <span class="keyword">then</span> </span><br><span class="line">                  view.comment   =   view.name </span><br><span class="line">            <span class="keyword">end</span>   <span class="keyword">if</span> </span><br><span class="line">      <span class="keyword">next</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">'   go   into   the   sub-packages </span></span><br><span class="line">      <span class="keyword">Dim</span>   f   <span class="comment">'   running   folder </span></span><br><span class="line">      <span class="keyword">For</span>   <span class="keyword">Each</span>   f   <span class="keyword">In</span>   folder.Packages </span><br><span class="line">            <span class="keyword">if</span>   <span class="keyword">not</span>   f.IsShortcut   <span class="keyword">then</span> </span><br><span class="line">                  ProcessFolder   f </span><br><span class="line">            <span class="keyword">end</span>   <span class="keyword">if</span> </span><br><span class="line">      <span class="keyword">Next</span> </span><br><span class="line"><span class="keyword">end</span>   <span class="keyword">sub</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>PD</tag>
        <tag>PowerDesigner</tag>
      </tags>
  </entry>
  <entry>
    <title>gitlab添加问题模板</title>
    <url>//p/7930ee41.html</url>
    <content><![CDATA[<h2 id="gitlab-添加问题-任务模板"><a href="#gitlab-添加问题-任务模板" class="headerlink" title="gitlab 添加问题/任务模板"></a>gitlab 添加问题/任务模板</h2><h3 id="操作步骤："><a href="#操作步骤：" class="headerlink" title="操作步骤："></a>操作步骤：</h3><ul>
<li><p>在项目中找到文件夹 <code>.gitlab</code>（和 <code>.git</code> 是在同一目录），创建文件夹 <code>issue_templates</code></p>
</li>
<li><p>在文件夹 <code>issue_templates</code>下添加一个<code>.md</code>的文件，如<code>bug.md</code></p>
</li>
<li><p>将添加的文件推送到服务器分支上，合并</p>
</li>
<li><p>最后新建一个问题就可以看到标题左边就有一个模板的下拉框，里面就有一个选项 <code>bug</code><br>这样就可以了</p>
</li>
</ul>
<a id="more"></a>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/image-20200410173602213.png" alt="image-20200410173602213" style="zoom:80%;" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/image-20200410173843646.png" alt="image-20200410173843646" style="zoom:80%;" /></p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>一种基于平均思想的任务分配算法</title>
    <url>//p/c3e6b6ee.html</url>
    <content><![CDATA[<p>​    假设现在有n个任务需要分配给m个审核员去完成，但是每个审核员手头上还有未完成的任务，且未完成的任务数不同。那么如何均匀的把这些任务分配给各个审核员呢?这里我提出了一种基于平均思想的任务分配算法（我称之为标杆算法）。</p>
<a id="more"></a>
<p>​    算法的主要思想是：首先找出所有审核员中手头未完成任务数最大的审核员，然后其它审核员以该审核员的未完成任务数为标杆，计算自己可容纳的任务数，最后所有审核员可容纳的任务数之和即为总的可容纳任务数(ava_task)。<br>​    这里有两种情况，第一种情况是：总的可容纳任务数小于或等于n个待分配的任务数，此时所有审核员以最大未完成任务数(max_task)为标杆，接收待分配的任务。如果刚好分配完，那么算法结束；如果还有剩下的任务未分配，那将剩下的任务抽取m个任务分配给每一个审核员，依次类推，直到剩下的未分配任务数小于m为止，然后再将这小于m的任务随机分配给相应数量的审核员。第二种情况是：总的可容纳任务数大于n个待分配的任务数，此时降低一个单位的标杆(max_task-1)，然后循环计算可容纳的任务数，直到退出循环(循环终止条件为：ava_task - task_num &lt;= lower_List.size()，lower_List.size()表示的是低于当前标杆的审核员数)。<br>​    接下来，我们将通过一个简单的例子来说明算法的流程，由于第一种情况比较简单，因此，该例子是基于第二种情况的,，如图1所示。</p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200421185038.jfif" alt="图1"></p>
<p>​    假设有20个任务需要分配给8个审核员(对应8个条形图，实线条形图里的数字代表该审核员手头未完成的任务数)。首先找出这8个审核员中未完成任务数的最大值max_task=7，然后各审核员以max_task为标杆计算各自可容纳的任务数(对应虚线条形图里的数字)，总的可容纳任务数为所有审核员可容纳的任务数之和，即ava_task=6+3+4+2+5+0+5+6=31，由图1可知，lower_List.size()=7，由于31-20&gt;7，因此可降低一个单位的标杆，即max_task=max_task-1=6，如图2所示。<br><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200421185013.jfif" alt="图2"></p>
<p>​    那么，ava_task=5+2+3+1+4+0+4+5=24，lower_List.size()=7，由于24-20&lt;7，因此循环终止。由于可容纳的任务数仍然大于待分配的任务数，因此需要再降低一个单位的标杆(一定要考虑这种情况)，max_task=max_task-1=5，此时ava_task=4+1+2+0+3+0+3+4=17，lower_List.size()=6，剩余待分配任务数为20-17=3，然后将这3个任务随机分配给低于当前标杆的6个审核员中的3个，每个审核员分配一个。当然算法中还考虑了很多种情况，具体请参见如下代码。由于任务一般按审核员ID来分配，且ID一般为字符串。为了存储方便，我定义了一个二维字符串类型的数组rev_task[i][j]来存储数据，i表示第i个审核员，rev_task[i][0]存放的是第i个审核员的ID，rev_task[i][1]存放的是第i个审核员当前未完成的任务数，rev_task[i][2]存放的是第i个审核员应当被分配的任务数。</p>
<p><strong>算法工具类-AlgorithmUtils.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yushen.allocationAlgorithm;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AlgorithmUtils</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">taskAllocation</span><span class="params">(<span class="keyword">int</span> task_num, <span class="keyword">int</span> rev_num, String[][] rev_task)</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">        Random rd = <span class="keyword">new</span> Random();</span><br><span class="line">        List&lt;Integer&gt; rdList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> temp;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//获得审核人员中的最大未完成任务数</span></span><br><span class="line">        <span class="keyword">int</span> max_task = Integer.parseInt(rev_task[<span class="number">0</span>][<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; rev_num; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(max_task &lt; Integer.parseInt(rev_task[i][<span class="number">1</span>]))</span><br><span class="line">                max_task = Integer.parseInt(rev_task[i][<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//以最大待审核任务数为标杆，判断第一轮可容纳的任务数</span></span><br><span class="line">        <span class="keyword">int</span> ava_task = <span class="number">0</span>;</span><br><span class="line">        List&lt;Integer&gt; lower_List = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;rev_num;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>((max_task-Integer.parseInt(rev_task[i][<span class="number">1</span>])) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                ava_task += (max_task-Integer.parseInt(rev_task[i][<span class="number">1</span>]));</span><br><span class="line">                lower_List.add(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">int</span> task_rest;</span><br><span class="line">        <span class="keyword">int</span> task_avg;</span><br><span class="line">        <span class="comment">//第一种情况：第一轮可容纳的任务数小于待分配的任务数</span></span><br><span class="line">        <span class="keyword">if</span>(ava_task - task_num &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rev_num; i++) &#123;</span><br><span class="line">                rev_task[i][<span class="number">2</span>] = String.valueOf(max_task-Integer.parseInt(rev_task[i][<span class="number">1</span>]));</span><br><span class="line">            &#125;</span><br><span class="line">            task_rest = task_num-ava_task;</span><br><span class="line">            task_avg = task_rest/rev_num;</span><br><span class="line">            <span class="keyword">if</span>(task_rest != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">while</span>(task_avg &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rev_num; i++) &#123;</span><br><span class="line">                        rev_task[i][<span class="number">2</span>] = String.valueOf(Integer.parseInt(rev_task[i][<span class="number">2</span>])+task_avg);</span><br><span class="line">                    &#125;</span><br><span class="line">                    task_rest -= rev_num*task_avg;</span><br><span class="line">                    task_avg = task_rest/rev_num;</span><br><span class="line">                &#125;</span><br><span class="line">                rdList.removeAll(rdList);</span><br><span class="line">                <span class="keyword">while</span>(rdList.size() &lt; (task_rest+<span class="number">1</span>))&#123;</span><br><span class="line">                    temp = rd.nextInt(rev_num);</span><br><span class="line">                    <span class="keyword">if</span>(!rdList.contains(temp))&#123;</span><br><span class="line">                        rdList.add(temp);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; task_rest; i++) &#123;</span><br><span class="line">                    rev_task[rdList.get(i)][<span class="number">2</span>] = String.valueOf(Integer.parseInt(rev_task[rdList.get(i)][<span class="number">2</span>])+<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;<span class="comment">//第二种情况：第一轮可容纳的任务数大于待分配的任务数，此时降低一个单位的标杆(max_task-1)，然后循环计算可容纳的任务数，直到退出循环</span></span><br><span class="line">            <span class="keyword">while</span>(ava_task - task_num &gt; lower_List.size()) &#123;</span><br><span class="line">                max_task--;</span><br><span class="line">                ava_task = <span class="number">0</span>;</span><br><span class="line">                lower_List.removeAll(lower_List);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;rev_num;i++)&#123;</span><br><span class="line">                    rev_task[i][<span class="number">2</span>] = <span class="string">"0"</span>;</span><br><span class="line">                    <span class="keyword">if</span>((max_task-Integer.parseInt(rev_task[i][<span class="number">1</span>])) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                        rev_task[i][<span class="number">2</span>] = String.valueOf(max_task-Integer.parseInt(rev_task[i][<span class="number">1</span>]));</span><br><span class="line">                        ava_task += Integer.parseInt(rev_task[i][<span class="number">2</span>]);</span><br><span class="line">                        lower_List.add(i);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(ava_task - task_num &gt; <span class="number">0</span>) &#123;<span class="comment">//如果可容纳的任务数大于待分配的任务数，那么需要再再降低一个单位的标杆</span></span><br><span class="line">                max_task--;</span><br><span class="line">                ava_task = <span class="number">0</span>;</span><br><span class="line">                lower_List.removeAll(lower_List);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;rev_num;i++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>((max_task-Integer.parseInt(rev_task[i][<span class="number">1</span>])) &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">                        rev_task[i][<span class="number">2</span>] = String.valueOf(max_task-Integer.parseInt(rev_task[i][<span class="number">1</span>]));</span><br><span class="line">                        ava_task += Integer.parseInt(rev_task[i][<span class="number">2</span>]);</span><br><span class="line">                        lower_List.add(i);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                task_rest = task_num - ava_task;</span><br><span class="line">                rdList.removeAll(rdList);</span><br><span class="line">                <span class="keyword">while</span>(rdList.size() &lt; (task_rest+<span class="number">1</span>))&#123;</span><br><span class="line">                    temp = rd.nextInt(rev_num);</span><br><span class="line">                    <span class="keyword">if</span>((!rdList.contains(temp))&amp;&amp;(lower_List.contains(temp)))&#123;</span><br><span class="line">                        rdList.add(temp);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; task_rest; i++) &#123;</span><br><span class="line">                    rev_task[rdList.get(i)][<span class="number">2</span>] = String.valueOf(Integer.parseInt(rev_task[rdList.get(i)][<span class="number">2</span>])+<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                task_rest = task_num-ava_task;</span><br><span class="line">                <span class="keyword">if</span>(task_rest != <span class="number">0</span>) &#123;</span><br><span class="line">                    rdList.removeAll(rdList);</span><br><span class="line">                    <span class="keyword">while</span>(rdList.size() &lt; (task_rest+<span class="number">1</span>))&#123;</span><br><span class="line">                        temp = rd.nextInt(rev_num);</span><br><span class="line">                        <span class="keyword">if</span>((!rdList.contains(temp))&amp;&amp;(lower_List.contains(temp)))&#123;</span><br><span class="line">                            rdList.add(temp);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; task_rest; i++) &#123;</span><br><span class="line">                        rev_task[rdList.get(i)][<span class="number">2</span>] = String.valueOf(Integer.parseInt(rev_task[rdList.get(i)][<span class="number">2</span>])+<span class="number">1</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//记录被分配的任务数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;rev_num;i++)&#123;</span><br><span class="line">            rev_task[i][<span class="number">1</span>] = String.valueOf(Integer.parseInt(rev_task[i][<span class="number">1</span>])+Integer.parseInt(rev_task[i][<span class="number">2</span>]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>算法测试类-TestAlgorithm.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yushen.allocationAlgorithm;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestAlgorithm</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		</span><br><span class="line">	    Scanner sc=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">	    System.out.println(<span class="string">"请输入任务数："</span>);</span><br><span class="line">	    <span class="keyword">int</span> task_num = sc.nextInt();</span><br><span class="line">	    System.out.println(<span class="string">"请输入审核人员的当前未完成任务数组，整数数字输入时用英文逗号隔开："</span>);</span><br><span class="line">	    String inputString=sc.next().toString();</span><br><span class="line">	    String stringArray[]=inputString.split(<span class="string">","</span>);</span><br><span class="line">	    </span><br><span class="line">	    <span class="keyword">int</span> rev_num = stringArray.length;<span class="comment">//审核人员总数</span></span><br><span class="line">	    String[][] rev_task =<span class="keyword">new</span> String[rev_num][<span class="number">3</span>];</span><br><span class="line">	    Random rd = <span class="keyword">new</span> Random();</span><br><span class="line">	    List&lt;Integer&gt; rdList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">	    rdList.removeAll(rdList);</span><br><span class="line">	    <span class="keyword">int</span> temp;</span><br><span class="line">	    <span class="keyword">while</span>(rdList.size() &lt; (rev_num+<span class="number">1</span>))&#123;</span><br><span class="line">	    	temp = rd.nextInt(<span class="number">100</span>);</span><br><span class="line">                <span class="keyword">if</span>(!rdList.contains(temp))&#123;</span><br><span class="line">		    rdList.add(temp);</span><br><span class="line">                &#125;  </span><br><span class="line">            &#125;</span><br><span class="line">	    </span><br><span class="line">	    System.out.println(<span class="string">"算法前的任务分配："</span>);</span><br><span class="line">	    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;rev_num;i++)&#123;</span><br><span class="line">	    	rev_task[i][<span class="number">0</span>] = String.valueOf(rdList.get(i) + <span class="number">1</span>);</span><br><span class="line">	    	rev_task[i][<span class="number">1</span>]= stringArray[i];</span><br><span class="line">	    	rev_task[i][<span class="number">2</span>] = <span class="string">"0"</span>;</span><br><span class="line">	    	System.out.print(rev_task[i][<span class="number">0</span>]+<span class="string">","</span>+rev_task[i][<span class="number">1</span>]+<span class="string">" "</span>);</span><br><span class="line">	    &#125;</span><br><span class="line">	    System.out.println();</span><br><span class="line">	     </span><br><span class="line">            AlgorithmUtils.taskAllocation(task_num, rev_num, rev_task);<span class="comment">//调用算法工具类</span></span><br><span class="line">            System.out.println(<span class="string">"算法后的任务分配："</span>);    </span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;rev_num;i++)&#123;    </span><br><span class="line">                System.out.print(rev_task[i][<span class="number">0</span>]+<span class="string">","</span>+rev_task[i][<span class="number">1</span>]+<span class="string">" "</span>);  </span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>运行结果：</strong><br>请输入任务数：<br>20<br>请输入审核人员的当前未完成任务数组，整数数字输入时用英文逗号隔开：<br>1,4,3,5,2,7,2,1<br>算法前的任务分配：<br>72,1 63,4 73,3 49,5 74,2 43,7 100,2 20,1<br>算法后的任务分配：<br>72,5 63,5 73,5 49,6 74,5 43,7 100,6 20,6<br>由运行结果可知，20个任务均衡的分配给了每个审核人员，达到了平均分配的目的！</p>
<p>原文链接：<a href="https://blog.csdn.net/y1250056491/article/details/77652739" target="_blank" rel="noopener">https://blog.csdn.net/y1250056491/article/details/77652739</a></p>
]]></content>
      <categories>
        <category>开发经验</category>
      </categories>
      <tags>
        <tag>开发经验</tag>
      </tags>
  </entry>
  <entry>
    <title>在powerdesigner中执行SQL.通过SQL生成模型图</title>
    <url>//p/be84d7b.html</url>
    <content><![CDATA[<h1 id="在powerdesigner中执行SQL-通过SQL生成模型图"><a href="#在powerdesigner中执行SQL-通过SQL生成模型图" class="headerlink" title="在powerdesigner中执行SQL.通过SQL生成模型图"></a>在powerdesigner中执行SQL.通过SQL生成模型图</h1><p> 通过hbm2dll生成了数据库脚本之后.想在powerdesigner中生成相应的模型图</p>
<p>方法:  在powerdesigner中.选择<strong>file</strong>—&gt;<strong>reverse engine</strong>—&gt;<strong>database</strong>—-&gt;选择相应的数据库版本,再把SQL导入执行即可.</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>PD</tag>
        <tag>PowerDesigner</tag>
      </tags>
  </entry>
  <entry>
    <title>使用gitlab实现项目协作</title>
    <url>//p/1845ee0e.html</url>
    <content><![CDATA[<h1 id="使用gitlab实现项目协作"><a href="#使用gitlab实现项目协作" class="headerlink" title="使用gitlab实现项目协作"></a>使用gitlab实现项目协作</h1><h2 id="issue"><a href="#issue" class="headerlink" title="issue"></a>issue</h2><p>issue是添加到项目中的、需要解决和改进的内容。issue可以是bug、任务或者是需要讨论的需求。issues是支持搜索和过滤的。</p>
<p>一、创建issue</p>
<p>​        新建issue时必须给issue设置一个或多个分类（即Labels），还可以指定由谁来处理该issue（即Assignee），设置处理该issue的截止日期（Due date）以及issue归属的里程碑（Milestone）。</p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200410163511.jpg" alt="images/create issue.jpg"></p>
<p>二、 issues列表</p>
<p>​        issues List为当期project下的所有issues,项目组成员在处理issue时需要做到以下几点：</p>
<ul>
<li>项目组成员要关注分配给自己的、状态为“Open”的issues。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200410163535.png" alt="images/image-20200210100911642"></p>
<ul>
<li>当issue已经处理完成，issue的处理者要及时地把issue的状态修改为关闭。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200410163803.png" alt="images/image-20200210102010576"></p>
<h2 id="Labels"><a href="#Labels" class="headerlink" title="Labels"></a>Labels</h2><p>标签允许我们使用描述性标题（如bug、需求）对问题进行分类，每个标签也有可定制的颜色，可以让我们快速动态地筛选和管理问题。</p>
<p>一、新建label</p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200410163545.png" alt="images/image-20200210105850287"></p>
<p>二、 Labels列表</p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200410163611.png" alt="images/image-20200210110113601"></p>
<h2 id="MileStones"><a href="#MileStones" class="headerlink" title="MileStones"></a>MileStones</h2><p>GitLab中的里程碑（MileStone）是一种跟踪问题的方法，以便在特定时间段内实现既定的目标。里程碑允许我们把安排问题到一个阶段，它具有可选的开始日期和可选的截止日期。</p>
<p>一、创建MileStone</p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200410163623.png" alt="images/image-20200210111225816"></p>
<p>二、MileStone list</p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200410163638.png" alt="images/image-20200210111540891"></p>
<h2 id="Board"><a href="#Board" class="headerlink" title="Board"></a>Board</h2><p>gitLab工单看板（board）可以帮助我们组工作和排列工作的优先级,免费版gitLab只能创建一个board。</p>
<p>一、添加list到board</p>
<p>​       添加list时会要求我们先选择label，选择完labels成功创建list后，board会出现以label名称命名的list。该list下会列出有该label标签的所有issues。</p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200410163648.png" alt="images/image-20200210120159151"></p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200410163701.png" alt="images/image-20200210121515856"></p>
<p>一般情况下，我们会新增“待办”和”处理中“两个list来辅助项目任务的管理，团队成员间可以按照以下方式协作：</p>
<ul>
<li>项目经理将默认“open”列中的任务选择性地拖拽到“待办”列中。</li>
<li>项目成员需要关注“待办”列中的issues,已经开始着手处理的issues,需要从“待办”列拖拽到“处理中”列。</li>
<li>项目成员“处理”列中的某项任务以完成，需要及时地将issue拖拽到“closed”列中。</li>
<li>项目经理可以去检查“closed”列中的任务，若需要重新处理，可以将该任务再次拖拽到“处理中”列，此时需要在issue中添加comment描述，以便问题处理者能够知道任务完成的不足或者优化的具体要求。</li>
</ul>
<h2 id="Merge-Request"><a href="#Merge-Request" class="headerlink" title="Merge Request"></a>Merge Request</h2><p>master分支是受保护的，原则上是不允许直接在master上提交代码。所以我们需要用merge request来实现分支管理。上面提到，开发过程的每一个任务都以issue去记录，所以可以用以下方式去创建Merge Request：</p>
<ol>
<li>任务的接收者在master分支上对某个issue创建本地issue_xxx分支</li>
<li>完成任务后推送代码到issue_xxx分支</li>
<li>项目经理对代码进行Code Review，如果没发现问题 ，执行merge操作，经分支合并到主分支上；如果有发现问题 ，任务处理者继续在该分支上修改代码并重新push</li>
</ol>
<p>一、Create merge request</p>
<p>​        执行完上面的1、2后出现下图所示内容，点击按钮填写内容即可创建merge request：</p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200410163715.png" alt="images/image-20200210152355513"></p>
<p>二、 Code Review</p>
<p>​        在Merge Requests列表页面选择进入要审核的request进行代码审核：</p>
<ul>
<li>审核不通过并添加描述</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200410163724.png" alt=""></p>
<ul>
<li><p>审核通过并合并分支</p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/20200410163735.png" alt="images/image-20200210153721528"></p>
</li>
</ul>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>几种常见的消息中间件对比</title>
    <url>//p/5d4e7479.html</url>
    <content><![CDATA[<h1 id="常见消息中间件介绍"><a href="#常见消息中间件介绍" class="headerlink" title="常见消息中间件介绍"></a>常见消息中间件介绍</h1><p>当前使用较多的消息队列有RabbitMQ、RocketMQ、ActiveMQ、Kafka、ZeroMQ、MetaMQ等，而部分数据库如Redis、MySQL以及phxsql也可实现消息队列的功能。</p>
<a id="more"></a>
<h2 id="消息队列概述"><a href="#消息队列概述" class="headerlink" title="消息队列概述"></a>消息队列概述</h2><p>消息队列是指利用高效可靠的消息传递机制进行与平台无关的数据交流，并基于数据通信来进行分布式系统的集成。</p>
<h2 id="RabbitMQ"><a href="#RabbitMQ" class="headerlink" title="RabbitMQ"></a>RabbitMQ</h2><p>RabbitMQ于2007年发布，是一个在AMQP(高级消息队列协议)基础上完成的，可复用的企业消息系统，是当前最主流的消息中间件之一。</p>
<h3 id="主要特性"><a href="#主要特性" class="headerlink" title="主要特性"></a>主要特性</h3><ol>
<li>可靠性：提供了多种技术可以让你在性能和可靠性之间进行权衡。这些技术包括持久性机制、投递确认、发布者证实和高可用性机制；</li>
<li>灵活的路由：消息在到达队列前是通过交换机进行路由的。RabbitMQ为典型的路由逻辑提供了多种内置交换机类型。如果你有更复杂的路由需求，可以将这些交换机组合起来使用，你甚至可以实现自己的交换机类型，并且当做RabbitMQ的插件来使用；</li>
<li>消息集群：在相同局域网中的多个RabbitMQ服务器可以聚合在一起，作为一个独立的逻辑代理来使用；</li>
<li>队列高可用：队列可以在集群中的机器上进行镜像，以确保在硬件问题下还保证消息安全；</li>
<li>支持多种协议：支持多种消息队列协议；</li>
<li>支持多种语言：用Erlang语言编写，支持只要是你能想到的所有编程语言；</li>
<li>管理界面：RabbitMQ有一个易用的用户界面，使得用户可以监控和管理消息Broker的许多方面；</li>
<li>跟踪机制：如果消息异常，RabbitMQ 提供消息跟踪机制，使用者可以找出发生了什么；</li>
<li>插件机制：提供了许多插件，来从多方面进行扩展，也可以编写自己的插件。</li>
</ol>
<h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ol>
<li>由于Erlang语言的特性，消息队列性能较好，支持高并发；</li>
<li>健壮、稳定、易用、跨平台、支持多种语言、文档齐全；</li>
<li>有消息确认机制和持久化机制，可靠性高；</li>
<li>高度可定制的路由；</li>
<li>管理界面较丰富，在互联网公司也有较大规模的应用，社区活跃度高。</li>
</ol>
<h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ol>
<li>尽管结合 Erlang 语言本身的并发优势，性能较好，但是不利于做二次开发和维护；</li>
<li>实现了代理架构，意味着消息在发送到客户端之前可以在中央节点上排队。此特性使得RabbitMQ易于使用和部署，但是使得其运行速度较慢，因为中央节点 增加了延迟，消息封装后也比较大；需要学习比较复杂的接口和协议，学习和维护成本较高。</li>
</ol>
<h2 id="RocketMQ"><a href="#RocketMQ" class="headerlink" title="RocketMQ"></a>RocketMQ</h2><p>RocketMQ出自阿里的开源产品，用Java语言实现，在设计时参考了Kafka，并做出了自己的一些改进，消息可靠性上比Kafka更好。RocketMQ在阿里内部被广泛应用在订单，交易，充值，流计算，消息推送，日志流式处理，binglog分发等场景。</p>
<h3 id="主要特性-1"><a href="#主要特性-1" class="headerlink" title="主要特性"></a>主要特性</h3><ol>
<li>基于 队列模型：具有高性能、高可靠、高实时、分布式等特点；</li>
<li>Producer、Consumer、队列都支持分布式；</li>
<li>Producer向一些队列轮流发送消息，队列集合称为Topic。Consumer如果做广播消费，则一个Consumer实例消费这个Topic对应的所有队列；如果做集群消费，则多个Consumer 实例平均消费这个Topic对应的队列集合；</li>
<li>能够保证严格的消息顺序；</li>
<li>提供丰富的消息拉取模式；</li>
<li>高效的订阅者水平扩展能力；</li>
<li>实时的消息订阅机制；</li>
<li>亿级消息堆积 能力；</li>
<li>较少的外部依赖。</li>
</ol>
<h3 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h3><ol>
<li>单机支持1万以上持久化队列；</li>
<li>RocketMQ的所有消息都是持久化的，先写入系统PAGECACHE，然后刷盘，可以保证内存与磁盘都有一份数据，而访问时，直接从内存读取。</li>
<li>模型简单，接口易用（JMS的接口很多场合并不太实用）；</li>
<li>性能非常好，可以允许大量堆积消息在Broker中；</li>
<li>支持多种消费模式，包括集群消费、广播消费等；</li>
<li>各个环节分布式扩展设计，支持主从和高可用；</li>
<li>开发度较活跃，版本更新很快。</li>
</ol>
<h3 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h3><ol>
<li>支持的 客户端语言不多，目前是Java及C++，其中C++还不成熟；</li>
<li>RocketMQ社区关注度及成熟度也不及前两者；</li>
<li>没有Web管理界面，提供了一个 CLI (命令行界面) 管理工具带来查询、管理和诊断各种问题；</li>
<li>没有在MQ核心里实现JMS等接口；</li>
</ol>
<h2 id="ActiveMQ"><a href="#ActiveMQ" class="headerlink" title="ActiveMQ"></a>ActiveMQ</h2><p>ActiveMQ是由Apache出品，ActiveMQ是一个完全支持JMS1.1和J2EE 1.4规范的JMS Provider实现。它非常快速，支持多种语言的客户端和协议，而且可以非常容易的嵌入到企业的应用环境中，并有许多高级功能。</p>
<h3 id="主要特性-2"><a href="#主要特性-2" class="headerlink" title="主要特性"></a>主要特性</h3><ol>
<li>服从JMS规范：JMS 规范提供了良好的标准和保证，包括：同步 或 异步 的消息分发，一次和仅一次的消息分发，消息接收和订阅等等。遵从JMS规范的好处在于，不论使用什么JMS实现提供者，这些基础特性都是可用的；</li>
<li>连接灵活性：ActiveMQ提供了广泛的连接协议，支持的协议有：HTTP/S，IP多播，SSL，TCP，UDP等等。对众多协议的支持让ActiveMQ拥有了很好的灵活性；</li>
<li>支持的协议种类多：OpenWire、STOMP、REST、XMPP、AMQP；</li>
<li>持久化插件和安全插件：ActiveMQ提供了多种持久化选择。而且，ActiveMQ的安全性也可以完全依据用户需求进行自定义鉴权和授权；</li>
<li>支持的客户端语言种类多：除了Java之外，还有：C/C++，.NET，Perl，PHP，Python，Ruby；</li>
<li>代理集群：多个ActiveMQ代理可以组成一个集群来提供服务；</li>
<li>异常简单的管理：ActiveMQ是以开发者思维被设计的。所以，它并不需要专门的管理员，因为它提供了简单又使用的管理特性。有很多中方法可以监控ActiveMQ不同层面的数据，包括使用在JConsole或者在ActiveMQ的WebConsole中使用JMX。通过处理JMX的告警消息，通过使用命令行脚本，甚至可以通过监控各种类型的日志。</li>
</ol>
<h3 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h3><ol>
<li>跨平台(JAVA编写与平台无关，ActiveMQ几乎可以运行在任何的JVM上)；</li>
<li>可以用JDBC：可以将数据持久化到数据库。虽然使用JDBC会降低ActiveMQ的性能，但是数据库一直都是开发人员最熟悉的存储介质；</li>
<li>支持JMS规范：支持JMS规范提供的统一接口;</li>
<li>支持自动重连和错误重试机制；</li>
<li>有安全机制：支持基于shiro，jaas等多种安全配置机制，可以对Queue/Topic进行认证和授权；</li>
<li>监控完善：拥有完善的监控，包括WebConsole，JMX，Shell命令行，Jolokia的RESTful API；</li>
<li>界面友善：提供的WebConsole可以满足大部分情况，还有很多第三方的组件可以使用，比如hawtio；</li>
</ol>
<h3 id="缺点-2"><a href="#缺点-2" class="headerlink" title="缺点"></a>缺点</h3><ol>
<li>社区活跃度不及RabbitMQ高；</li>
<li>根据其他用户反馈，会出莫名其妙的问题，会丢失消息；</li>
<li>目前重心放到activemq6.0产品Apollo，对5.x的维护较少；</li>
<li>不适合用于上千个队列的应用场景；</li>
</ol>
<h2 id="Kafka"><a href="#Kafka" class="headerlink" title="Kafka"></a>Kafka</h2><p>Apache Kafka是一个分布式消息发布订阅系统。它最初由LinkedIn公司基于独特的设计实现为一个分布式的日志提交系统(a distributed commit log)，之后成为Apache项目的一部分。Kafka性能高效、可扩展良好并且可持久化。它的分区特性，可复制和可容错都是其不错的特性。</p>
<h3 id="主要特性-3"><a href="#主要特性-3" class="headerlink" title="主要特性"></a>主要特性</h3><ol>
<li>快速持久化：可以在O(1)的系统开销下进行消息持久化；</li>
<li>高吞吐：在一台普通的服务器上既可以达到10W/s的吞吐速率；</li>
<li>完全的分布式系统：Broker、Producer和Consumer都原生自动支持分布式，自动实现负载均衡；</li>
<li>支持同步和异步复制两种高可用机制；</li>
<li>支持数据批量发送和拉取；</li>
<li>零拷贝技术(zero-copy)：减少IO操作步骤，提高系统吞吐量；</li>
<li>数据迁移、扩容对用户透明；</li>
<li>无需停机即可扩展机器；</li>
<li>其他特性：丰富的消息拉取模型、高效订阅者水平扩展、实时的消息订阅、亿级的消息堆积能力、定期删除机制；</li>
</ol>
<h3 id="优点-3"><a href="#优点-3" class="headerlink" title="优点"></a>优点</h3><ol>
<li>客户端语言丰富：支持Java、.Net、PHP、Ruby、Python、Go等多种语言；</li>
<li>高性能：单机写入TPS约在100万条/秒，消息大小10个字节；</li>
<li>提供完全分布式架构，并有replica机制，拥有较高的可用性和可靠性，理论上支持消息无限堆积；</li>
<li>支持批量操作；</li>
<li>消费者采用Pull方式获取消息。消息有序，通过控制能够保证所有消息被消费且仅被消费一次；</li>
<li>有优秀的第三方KafkaWeb管理界面Kafka-Manager；</li>
<li>在日志领域比较成熟，被多家公司和多个开源项目使用。</li>
</ol>
<h3 id="缺点-3"><a href="#缺点-3" class="headerlink" title="缺点"></a>缺点</h3><ol>
<li>Kafka单机超过64个队列/分区时，Load时会发生明显的飙高现象。队列越多，负载越高，发送消息响应时间变长；</li>
<li>使用短轮询方式，实时性取决于轮询间隔时间；</li>
<li>消费失败不支持重试；</li>
<li>支持消息顺序，但是一台代理宕机后，就会产生消息乱序；</li>
<li>社区更新较慢。</li>
</ol>
<h1 id="常见消息中间就对比分析图"><a href="#常见消息中间就对比分析图" class="headerlink" title="常见消息中间就对比分析图"></a>常见消息中间就对比分析图</h1><p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/30dda6833f20181b27f3a08ba34f4db881d.jpg" alt="img"></p>
<h1 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h1><h2 id="从公司基础建设力量角度"><a href="#从公司基础建设力量角度" class="headerlink" title="从公司基础建设力量角度"></a>从公司基础建设力量角度</h2><ol>
<li>中小型软件公司，建议选RabbitMQ，一方面，erlang语言天生具备高并发的特性，而且他的管理界面用起来十分方便。他的弊端也在这里，虽然RabbitMQ是开源的，然而国内有几个能定制化开发erlang的程序员呢？所幸，RabbitMQ的社区十分活跃，可以解决开发过程中遇到的bug，这点对于中小型公司来说十分重要。不考虑RocketMQ和kafka的原因是，一方面中小型软件公司不如互联网公司，数据量没那么大，选消息中间件，应首选功能比较完备的，所以kafka排除。不考虑RocketMQ的原因是，RocketMQ是阿里出品，如果阿里放弃维护RocketMQ，中小型公司一般抽不出人来进行RocketMQ的定制化开发，因此不推荐。</li>
<li>大型软件公司，根据具体使用在RocketMQ和kafka之间二选一。一方面，大型软件公司，具备足够的资金搭建分布式环境，也具备足够大的数据量。针对RocketMQ,大型软件公司也可以抽出人手对RocketMQ进行定制化开发，毕竟国内有能力改JAVA源码的人，还是相当多的。至于kafka，根据业务场景选择，如果有日志采集功能，肯定是首选kafka了。</li>
</ol>
<h2 id="从业务场景角度出发"><a href="#从业务场景角度出发" class="headerlink" title="从业务场景角度出发"></a>从业务场景角度出发</h2><ol>
<li>RocketMQ定位于非日志的可靠消息传输（日志场景也OK），目前RocketMQ在阿里集团被广泛应用在订单，交易，充值，流计算，消息推送，日志流式处理，binglog分发等场景。</li>
<li>Kafka是LinkedIn开源的分布式发布-订阅消息系统，目前归属于Apache定级项目。Kafka主要特点是基于Pull的模式来处理消息消费，追求高吞吐量，一开始的目的就是用于日志收集和传输。0.8版本开始支持复制，不支持事务，对消息的重复、丢失、错误没有严格要求，适合产生大量数据的互联网服务的数据收集业务。</li>
<li>RabbitMQ是使用Erlang语言开发的开源消息队列系统，基于AMQP协议来实现。AMQP的主要特征是面向消息、队列、路由（包括点对点和发布/订阅）、可靠性、安全。AMQP协议更多用在企业系统内，对数据一致性、稳定性和可靠性要求很高的场景，对性能和吞吐量的要求还在其次。</li>
</ol>
]]></content>
      <categories>
        <category>消息中间件</category>
      </categories>
      <tags>
        <tag>RabbitMQ</tag>
        <tag>RocketMQ</tag>
        <tag>ActiveMQ</tag>
        <tag>Kafka</tag>
        <tag>消息中间件</tag>
      </tags>
  </entry>
  <entry>
    <title>网站备案指的是域名备案？ 还是指的服务器备案呢？</title>
    <url>//p/32883715.html</url>
    <content><![CDATA[<p>​    一般在建网站的时候很多人对于怎么备案，给域名备案还是服务器备案比较迷糊，下面为大家详细讲解一下，希望各位个人站长或者企业建站可以很准确的搞好备案。</p>
<p>​    备案是工信部要求的，主要是为了规范网络安全化，维护网站经营者的合法权益，保障网民的合法利益。凡是使用国内空间的网站域名都需要备案。</p>
<p>​    域名如果绑定指向到国内网站空间就要备案。也就是说如果你这个域名只是纯粹注册下来，用作投资或者暂时不用，是无需备案的。域名指向到国外网站空间，也是无需备案的。由于域名备案基本取决于网站空间的情况，所以备案也是主机提供商提供的，不是域名注册商。 备案是针对空间的，但是备案号是挂在域名上的，可以说备案如果没有空间或者没有域名都备案不了。备案首先是要由空间商审核，审核完才能递交到通管局，审核成功后，备案号是挂在域名上。备案与否是根据空间判断的，空间要求备案就备案，不要求就不用。网站空间怎么备案呢?只要联系当时购买的空间商就可以了，正规的空间商都会提供免费的备案帮助。只要按照空间商的要求准备备案资料就可以了。</p>
<p>​    备案之后，可以使用国内空间，内地用户打开的速度会大大快于其他空间，保障了排名和转化率。百度，Google，等搜索引擎，对同类型网站的搜录，往往是已备案的多于未备案的。因为没有备案被封过的网站不在少数，其中不备案的很多都是违法网站，一般正规网站备案之后，如果出了问题容易解决，而没有备案的，如果存在违法信息，被发现了，就会直接撤销。另外，如果你的网站涉及违法内容，将可以直接调查到你本人，如果你的网站被攻击或遭受利益上的损失，你可以凭备案许可进行报案。</p>
<p>​    网站备案到底是给域名备案还是给空间备案?备案说到底是给域名备案，但备案的话离不开域名和国内空间，两者缺一不可。备案的最终结果是让域名有备案号，有了备案号的域名才能访问国内空间。</p>
]]></content>
      <categories>
        <category>开发经验</category>
      </categories>
      <tags>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>成为一流软件开发者的34条建议</title>
    <url>//p/32d2b524.html</url>
    <content><![CDATA[<h1 id="成为一流软件开发者的34条建议"><a href="#成为一流软件开发者的34条建议" class="headerlink" title="成为一流软件开发者的34条建议"></a>成为一流软件开发者的34条建议</h1><p>我们列出了一张包含 34 条建议的清单，来帮助你成为一流的软件开发者，在技术行业中打造出成功的职业生涯。</p>
<p>这些建议中，有一些是特别针对增强编程技能的，其他的一些建议则是软件开发职业生涯中的软技能，还有些甚至能够帮助你成为一个更好的人。</p>
<p><strong>1. 规划方法 &amp; 在编码前先写伪代码</strong></p>
<p>当你试图构建一个项目或者完成一个任务时，如果没有规划就直接开始编写代码，可能会浪费大量时间，还会经历很多不同程度的挫折。</p>
<p>在开始编码前，花一点时间写下要实现的功能或者待解决问题的大致结构。这会让实际的编码过程更加顺畅，防止潜在的缺陷发生。向队友或者同事主动寻求反馈或者其他想法，这会让你更好地向他们解释你所处理的事情。</p>
<p>作为一名软件开发者，很容易陷入编码的细节中，导致只见树木不见森林（正如这条著名谚语所说的那样）。做好规划并预先编写伪代码能让你同时看到两者，也许，你还能听到森林里鸟儿的鸣叫声呢！</p>
<p><strong>2. 总是寻找新东西来学习</strong></p>
<p>这可能是老调重弹，但事实就是这样。软件行业变化非常迅速。如果你想一直待在程序员这个圈子里，你就不得不持续学习新的东西。</p>
<p>你持续学习得越多，你就越会觉得这是很自然的一件事，你会觉得学习是一种享受，而且当你不去学习时，反倒会觉得自己停滞不前。阅读一些科技博客或者新闻网站，花一点时间来研究你感兴趣的事情，或者那些会影响到软件行业未来的事情。</p>
<p><strong>3. 不要尝试去学习所有的东西</strong></p>
<p>尽管不断地学习新东西很重要，但是你每天的时间有限，所以在安排时间时，需要有选择性地学习。</p>
<p>你不必对所有的事情都做出响应。Verge 的报告说，你学到的 95% 的内容都将在未来几个月内消失。当你用在学习或者研究新技术上的时间有限时，就应当注意这点。</p>
<p><strong>4. 了解怎样学习</strong></p>
<p>每个人都通过不同的学习方法来达到最好的学习效果。有些人喜欢阅读书籍，有些人则喜欢看视频教程。如果你能找到适用于你自己的学习方法，并使用它，那就可以让你很轻松地学习到新东西。</p>
<p>除了独特的学习方法，还有一些可以优化学习过程的基本方法。这里是 Coursera 网站上的免费在线课程（<a href="https://www.coursera.org/learn/learning-how-to-learn" target="_blank" rel="noopener"> https://www.coursera.org/learn/learning-how-to-learn </a>），覆盖了艺术、音乐、文学、数学、科学、运动和很多其他学科专家所采用的学习方法。</p>
<p><strong>5. 缓缓前行，不要破坏东西</strong></p>
<p>“快速前行，打破常规”，在科技行业，这句谚语已经作为一条真理存在很久了。这句谚语是用来鼓励开发者快速地部署代码和技术想法的，同时还能安心地觉得这只是一些代码，当任何错误或者 bug 自己暴露出来的时候，都可以被轻松解决。</p>
<p>但是软件和数字产品不再是被公司美化的营销部门，也不再是偏安一隅的经济单位。它现在已经成为了所有东西之上的一层。软件和数 10 亿人的生活息息相关，代码不再是完全无害的。Bug 和设计问题都会对人们产生负面的影响。</p>
<p>所以我们应该缓缓前行，并且保证不会破坏任何东西。你所写的代码会对其他人的生活产生真实的影响，所以应当确保写出质量好的代码。</p>
<p><strong>6. 善于阅读其他人的代码</strong></p>
<p>阅读其他人的代码是一项不太容易掌握的技能。当你开始成为一名优秀的程序员时，你就会习惯于你自己的代码风格。而当你尝试阅读别人的代码时，你就会逐渐迷失了。幸运的是，你阅读别人的代码越多，你就会发现这越容易，而且你将愿意经常阅读别人的代码，但是，寻找不同的阅读方法（<a href="https://selftaughtcoders.com/how-to-quickly-and-effectively-read-other-peoples-code/" target="_blank" rel="noopener"> https://selftaughtcoders.com/how-to-quickly-and-effectively-read-other-peoples-code/ </a>）也会起到帮助，那会让阅读别人代码的过程变得更加轻松。</p>
<p><strong>7. 感到自豪，让工作变得有价值</strong></p>
<p>不管你的工作是大还是小，都要为此感到自豪。你写的每一行代码都应当足够好，好到你自己也感觉良好的程度。这些代码不仅要能正常运行，而且要能让你感到自豪。你不可能创建出完美的代码，也没有人能够做到这样，因为创建完美的软件是不可能的。但是创建出让你感觉良好的代码，一定会让你不断地做出好的工作成绩。</p>
<p><strong>8. 对你造成的错误保持开放负责的态度</strong></p>
<p>有时候你可能把事情弄砸了，可能在你的职业生涯中，还会出现好几次这样的情况。不管是做错了什么，我们每个人都发生过这样的状况。当错误发生时，保持开放的心态，担负起责任，不要责怪其他人。</p>
<p>用这样的态度处理这些错误，你就会在你的队友和同事中间建立起信任和尊重。</p>
<p><strong>9. 工作时尽量减少分心</strong></p>
<p>由于你是人类（对所有读到这篇文章的机器人发出警告），在你累到筋疲力尽之前，你这一天当中产出效率最高的工作时间是有限的。所以你需要优化那些产出效率高的时间来完成工作。</p>
<p>每个人的情况是不同的，但是请尝试不同的方法，看看哪种方法对你最有效。关闭任何手机提醒（电子邮件，短信等等），可能会有帮助；或者每天只检查电子邮件 1~2 次；并且只有在你工作完回到家时，再去登陆社交网络。</p>
<p><strong>10. 善于使用 Google</strong></p>
<p>作为一名程序员，你可能会不断地碰到大大小小的问题。这些问题绝大部分也被其他的开发者遇到过，所以你可以在各种网站上看到他们的解决方案。</p>
<p>要善于寻找这些疑问 / 问题的解决方案。学习如何高效地搜索 Google 能够为你的开发节省大量时间。我们得承认一个事实，StackOverflow 将成为你新的救世主。</p>
<p><strong>11. 不要害怕寻求帮助</strong></p>
<p>但是当你自己不能解决某些问题的时候，你不应该害怕寻求帮助。有时候你可能会卡在一个问题上，并且花了大量的时间来搜索解决方案。</p>
<p>寻求支持并不丢脸。你的部分或所有同事都会得到更高的工资，这是有原因的，因为他们更有经验。大部分时候他们都是乐于帮助你的，并且还会抓住机会给你讲解一些编程知识。</p>
<p><strong>12. 不要拿自己和其他人去做比较</strong></p>
<p>在你的职业生涯和生活中，你会不停地拿自己和其他人做比较。你可能会自然地这样做，因为这会帮助你弄清楚你位于世界的哪个位置，帮你找到人生方向。</p>
<p>但有时候进步的最好方式是拿你和你的昨天或者你的过去进行比较。用这种方法思考肯定能让你不断地进步，减少受挫感，明确你的预期目标。</p>
<p><strong>13. 测试你的代码</strong></p>
<p>如果你测试了你的代码，软件的最终交付版本将会更加稳定和可预测。学习不同的测试类型（单元测试、集成测试等等），并且要很勤快地使用它们，因为这真的很重要。你预先做的测试越多，你今后的工作就会越轻松，你晚上睡觉也会更踏实。</p>
<p><strong>14. 学习如何调试</strong></p>
<p>你编写的代码并不总是会按照你所预期的那样精确运行，不过没关系，这很正常。但是，你需要掌握相关技能，找到问题的原因，并且做出必要的修复。</p>
<p>在定位 bug 时，需要弄清楚哪些调试技术是最适合你的。找一些有用的工具，这会让调试过程更加轻松。</p>
<p><strong>15. 要知道自己的身价</strong></p>
<p>去做一些调研，弄清楚你所在行业其他人的薪水如何，他们给公司带来了怎样的价值。了解这些东西会给你目前的工作带来一些认识，并且帮助你理解你的价值所在。</p>
<p>这个调研不仅可以用于薪水方面，还可以用于了解你给公司或者团队提供了哪些价值。</p>
<p><strong>16. 不要为了扩展而编写代码，除非这是必要的</strong></p>
<p>在构建和编写代码时，需要记住，将来有一天你可能需要扩展代码。但是不要在编码的第一天就去考虑扩展性，没必要这样，而且这肯定会让你淹没其中，并且拖慢开发速度。</p>
<p>准备好适应未来的增长，并且准备好创建相应的策略。但不要让你的代码库和团队陷入不断扩展代码的困境，除非这是必要的。如果你给火箭添加太多的重物，它可能都不能飞离地面。</p>
<p><strong>17. 在你知道代码是如何运行之后，可以复制粘贴</strong></p>
<p>诚恳地讲，每个人以前都有过复制粘贴代码的经历。不管这段代码是来自 StackOverflow，还是其他随便哪里的编程博客，这都没问题，只要你在复制粘贴前理解这段代码是做什么的。</p>
<p>对你要粘贴的代码，你需要知道自己在做什么，并且小心谨慎。记住，缓缓前行，不要破坏东西。</p>
<p><strong>18. 让周围人感到愉快，对他人友善</strong></p>
<p>当你身边围绕着很多人都愿意帮助你或者支持你的时候，生活会变得很轻松。但如果人们都不喜欢你，那生活就不可能很轻松了。</p>
<p>所以对人要友善（尽你所能），大部分时间里都要让周围的人感觉愉快。如果你能做到这一点，人们就会很喜欢你，如果人们很喜欢你，他们就愿意帮助你，你也会交到更多朋友。</p>
<p><strong>19. 为了提高产出，休息一会儿</strong></p>
<p>在整个工作日中保持 100% 的产出效率，这几乎是不可能的，如果你尝试这样做，那将会使你精疲力尽。设置一个计时器，让它提醒你站起来走一走，或者给你的咖啡续个杯。像番茄工作法这样的系统就可以在休息和提高效率方面起到很大的作用了（如果你想尝试一下，可以使用我们做的番茄工作法计时器（<a href="https://coderrocketfuel.com/tools/pomodoro-timer" target="_blank" rel="noopener"> https://coderrocketfuel.com/tools/pomodoro-timer </a>））。</p>
<p>此外大量的研究表明，适当休息是任何工作和学习过程的一个关键组成部分。休息能够很大程度上帮助学生更有效地学习东西，让他们的注意力保持更长的时间。</p>
<p><strong>20. 少说多听</strong></p>
<p>不管你是想赢得一场辩论，变得更讨人喜欢，还是说服某人，倾听都是一个获得重要信息的很关键的方式，他会让你显得更值得信任和尊重。</p>
<p>你很可能是与一些真正聪明的人一起工作，他们中的一些人甚至比你更聪明。于是他们可能有一些编程或者生活上的知识能够传授给你，如果你说太多话，可能就会错过这样的机会。</p>
<p><strong>21. 去做那些让你害怕的项目</strong></p>
<p>无论是在你的职业生涯中，还是在编程技能方面，不断扩展你的舒适区都是相当重要的。去做一些让你有点害怕的项目，扩展你的舒适区，这会让你变成一个更好的开发者，你的职业生涯也会进步得更快。</p>
<p>你需要经历一些痛苦和恐惧，这样才能成长。要做到这样，你需要去寻找一些能扩展你舒适区的事情去做。</p>
<p><strong>22. 给函数和变量提供描述性的命名</strong></p>
<p>你会希望你的代码尽可能容易理解。让别人更容易阅读你的代码的方式之一，就是给你的函数和变量起一个能描述他们做什么和代表什么的好名字。</p>
<p>例如有一个函数名叫 aDopeFunctionIMade，这就不是一个好名字，而另一个函数名 calculateCartTotal，它就是一个很好的名字。</p>
<p><strong>23. 编写描述性好的代码注释</strong></p>
<p>另外一种能让你的代码更容易阅读的方式就是给代码添加注释，注释能够解释你的代码为什么要这样做，以及你的代码都做了什么。编写注释并不难，只需要花点精力把注释包含到代码里去就可以啦。</p>
<p>这个方法和上面那个写出具有描述性的函数和变量名字的方法通常是同时使用的。</p>
<p><strong>24. 习惯于有建设性的批评</strong></p>
<p>在工作中，你可能从不会享受于接受批评。但为了变得更好，你需要习惯于接受批评，不要对这些批评产生情绪。</p>
<p>如果你的代码写得很糟糕，你难道不希望有其他人给你指出来吗？相反的一种方式就是别人看到了问题代码也不会告诉你，这将更糟糕。如果你欣然接受批评，你会因此而受到别人的尊敬，你自己也能够改进你的技能。</p>
<p><strong>25. 找到你的立足点</strong></p>
<p>在科技行业，你可能会在很多不同的领域都做得很成功。找到你最感兴趣或者最擅长的领域，在这个领域成为一个专家。在你的立足点上成为一个专家，会给你带来影响力，把你从一件商品变为你的公司或者你所在行业的必需品。但是这个说起来容易，做起来难，你可能需要花些时间才能弄清楚你的立足点在哪里。</p>
<p><strong>26. 学一点商业方面的知识</strong></p>
<p>花点时间去了解你所在公司或者团队的一些业务方面的知识。销售人员整天都在做些什么，他们为何有价值？会计或者市场营销人员的情况又如何？</p>
<p>你不必成为这些领域的专家。但是理解一些业务情况，将会让你对工作有更好的理解，并且能帮助你为公司和团队的整体目标创造更多价值。</p>
<p><strong>27. 在传授别人知识和与他人分享的过程中学习</strong></p>
<p>protégé效应是一种心理现象，说的是向别人传授或假装传授信息时能够让你更好地（相比不使用这种方法时）学习这些信息。这一点适用于很多领域，但编程领域尤其如此。</p>
<p>你可以向队友或者同事传授一些知识，或者可以开始维护个人编程博客，编写教程，向他人传授编程的概念。把你传授的知识汇总起来，以让其他人也能够学习到，这将极大地提高你自己对这些主题的理解。</p>
<p><strong>28. 花点时间好好写写文档</strong></p>
<p>这是很多程序员忽略的一点。但是好的文档能帮助你和其他人抓住你的代码或者项目的精髓。</p>
<p>如果你写出的文档组织很有条理，综合性强，可读性强，那么你的代码或者项目就更容易使用，人们也就会更愿意来使用它。</p>
<p><strong>29. 尽可能避免不必要的会议</strong></p>
<p>尽管公司会议在传达思想，建立项目目标方面极其有帮助，但如果你不好好管理会议进度，这也可能会成为不可思议的时间吞噬器。在你工作的地方总有一些人喜欢发起会议，而不去想他们是否真的需要这些会议。</p>
<p>你需要学习一些委婉拒绝他们的技巧，而同时又和他们保持良好的工作关系。或者你可能需要学习向人们说“不”的艺术，并且欣然接受说“不“而带来的结果。</p>
<p><strong>30. 掌控你自己的工具箱</strong></p>
<p>任何精通这一行的人都有一个工具箱，里面装满了工具，他们对这些工具的里里外外都了如指掌，他们通过使用这些工具来完成工作。他们非常了解其中每一件工具，并把他们当做自己能力的延伸。</p>
<p>作为一名程序员，你应当构建自己的工具袋。精通你所选的文本编辑器，以最大化你的产出，或者找一个你喜欢使用的测试框架。你需要了解哪些工具是服务于什么样的目的的。并且要知道每一件工具为何会比另外一件工具更适用于某个场景。</p>
<p><strong>31. 每隔一段时间就去尝试一种新的语言</strong></p>
<p>不要做过头，但也要每隔一段时间就去尝试一种新的语言。使用一种新的语言，将会让你或多或少从不同的角度去思考问题，思考问题的方式会和你正在使用的语言不太一样。</p>
<p>这些新的思考途径，将帮助你在使用当前的和 / 或今后的语言时，全面提高解决问题的能力。</p>
<p><strong>32. 努力保持身体健康</strong></p>
<p>编程是一项需要长时间坐在位子上的职业。你会很多天都坐在桌子前（顺便说一下，可以考虑入手一张站式桌子），看着电脑屏幕。久而久之，如果你不努力保持健康的话，这样的工作方式就会给你的身体带来负面影响。</p>
<p>每周计划锻炼 2~3 天，每天保证 8 个小时的睡眠，并且计划一些外出活动，这些活动不要涉及到编程。这会帮助你过上更健康的生活，这将渗透到你的编程生涯中。</p>
<p><strong>33. 建立能让你沉迷的东西</strong></p>
<p>不是每天的工作都会给你走在阳光里的感觉。但如果你把工作时间花在你觉得有影响力或者很酷的事情上，你将会经历很多美好的日子，而不是糟糕的日子。</p>
<p>你在业余时间或者工作时间中创造的酷酷的东西越多，你在自己的领域得到的认可也就越多，机会也就越多。</p>
<p><strong>34. 绝不放弃</strong></p>
<p>生活很艰难，编程也很艰难。可能会有很多次，你都会产生强烈的、要退出的想法。当那些时刻发生时，你要意识到每个人都会经历这些。如果你想作为一名程序员在你的职业生涯中保持成长，你就需要从这些困境里获取力量。</p>
<p>但是请记住，转变方向和放弃是不同的。如果你做的东西运行不起来或者你感觉哪里不对劲时，而你又需要去尝试一些新的想法或者策略时，那就换到其他的新方向吧，但绝不要放弃。</p>
<h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>好，就是这些了，34 条建议，用来帮助你成为一个优秀的软件开发者。希望其中的一条或多条能与你产生共鸣，或者在你的编码和 / 或职业生涯中帮助到你。</p>
<p><strong>原文链接</strong>：<br><a href="https://coderrocketfuel.com/article/34-tips-to-become-a-first-rate-software-developer" target="_blank" rel="noopener">34 Tips To Become a First-Rate Software Developer</a></p>
]]></content>
      <categories>
        <category>开发经验</category>
      </categories>
      <tags>
        <tag>开发经验</tag>
      </tags>
  </entry>
  <entry>
    <title>查看当前npm源</title>
    <url>//p/9fa7683d.html</url>
    <content><![CDATA[<h2 id="查看当前npm源"><a href="#查看当前npm源" class="headerlink" title="查看当前npm源"></a>查看当前npm源</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm config get registry</span><br><span class="line">&gt;http:&#x2F;&#x2F;registry.npmjs.org&#x2F;</span><br></pre></td></tr></table></figure>
<h2 id="修改npm源（设置为淘宝npm源）"><a href="#修改npm源（设置为淘宝npm源）" class="headerlink" title="修改npm源（设置为淘宝npm源）"></a>修改npm源（设置为淘宝npm源）</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>开发经验</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>老大说：谁要再用double定义商品金额，就自己收拾东西走!</title>
    <url>//p/23a9bdeb.html</url>
    <content><![CDATA[<p>以下文章来源于CodeSheep ，作者hansonwong99</p>
<h2 id="老大说：谁要再用double定义商品金额，就自己收拾东西走"><a href="#老大说：谁要再用double定义商品金额，就自己收拾东西走" class="headerlink" title="老大说：谁要再用double定义商品金额，就自己收拾东西走!"></a>老大说：谁要再用double定义商品金额，就自己收拾东西走!</h2><h2 id="先看现象"><a href="#先看现象" class="headerlink" title="先看现象"></a>先看现象</h2><p>涉及诸如<code>float</code>或者<code>double</code>这两种浮点型数据的处理时，偶尔总会有一些<strong>怪怪的现象</strong>，不知道大家注意过没，举几个常见的栗子：</p>
<a id="more"></a>
<p><strong>典型现象（一）：条件判断超预期</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">System.out.println( 1f &#x3D;&#x3D; 0.9999999f );   &#x2F;&#x2F; 打印：false</span><br><span class="line">System.out.println( 1f &#x3D;&#x3D; 0.99999999f );  &#x2F;&#x2F; 打印：true    纳尼？</span><br></pre></td></tr></table></figure>
<p><strong>典型现象（二）：数据转换超预期</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">float f &#x3D; 1.1f;</span><br><span class="line">double d &#x3D; (double) f;</span><br><span class="line">System.out.println(f);  &#x2F;&#x2F; 打印：1.1</span><br><span class="line">System.out.println(d);  &#x2F;&#x2F; 打印：1.100000023841858  纳尼？</span><br></pre></td></tr></table></figure>
<p><strong>典型现象（三）：基本运算超预期</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">System.out.println( 0.2 + 0.7 );  </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 打印：0.8999999999999999   纳尼？</span><br></pre></td></tr></table></figure>
<p><strong>典型现象（四）：数据自增超预期</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">float f1 &#x3D; 8455263f;</span><br><span class="line">for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">    System.out.println(f1);</span><br><span class="line">    f1++;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; 打印：8455263.0</span><br><span class="line">&#x2F;&#x2F; 打印：8455264.0</span><br><span class="line">&#x2F;&#x2F; 打印：8455265.0</span><br><span class="line">&#x2F;&#x2F; 打印：8455266.0</span><br><span class="line">&#x2F;&#x2F; 打印：8455267.0</span><br><span class="line">&#x2F;&#x2F; 打印：8455268.0</span><br><span class="line">&#x2F;&#x2F; 打印：8455269.0</span><br><span class="line">&#x2F;&#x2F; 打印：8455270.0</span><br><span class="line">&#x2F;&#x2F; 打印：8455271.0</span><br><span class="line">&#x2F;&#x2F; 打印：8455272.0</span><br><span class="line"></span><br><span class="line">float f2 &#x3D; 84552631f;</span><br><span class="line">for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">    System.out.println(f2);</span><br><span class="line">    f2++;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;    打印：8.4552632E7   纳尼？不是 +1了吗？</span><br><span class="line">&#x2F;&#x2F;    打印：8.4552632E7   纳尼？不是 +1了吗？</span><br><span class="line">&#x2F;&#x2F;    打印：8.4552632E7   纳尼？不是 +1了吗？</span><br><span class="line">&#x2F;&#x2F;    打印：8.4552632E7   纳尼？不是 +1了吗？</span><br><span class="line">&#x2F;&#x2F;    打印：8.4552632E7   纳尼？不是 +1了吗？</span><br><span class="line">&#x2F;&#x2F;    打印：8.4552632E7   纳尼？不是 +1了吗？</span><br><span class="line">&#x2F;&#x2F;    打印：8.4552632E7   纳尼？不是 +1了吗？</span><br><span class="line">&#x2F;&#x2F;    打印：8.4552632E7   纳尼？不是 +1了吗？</span><br><span class="line">&#x2F;&#x2F;    打印：8.4552632E7   纳尼？不是 +1了吗？</span><br><span class="line">&#x2F;&#x2F;    打印：8.4552632E7   纳尼？不是 +1了吗？</span><br></pre></td></tr></table></figure>
<p>看到没，这些简单场景下的使用情况都很难满足我们的需求，所以说用浮点数（包括<code>double</code>和<code>float</code>）处理问题有非常多<strong>隐晦的坑</strong>在等着咱们！</p>
<p>怪不得技术总监发狠话：谁要是敢在处理诸如 <strong>商品金额</strong>、<strong>订单交易</strong>、以及<strong>货币计算</strong>时用浮点型数据（<code>double</code>/<code>float</code>），直接让我们走人！</p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/640-1587350432768.png" alt="img"></p>
<hr>
<h2 id="原因出在哪里？"><a href="#原因出在哪里？" class="headerlink" title="原因出在哪里？"></a>原因出在哪里？</h2><p>我们就以第一个典型现象为例来分析一下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">System.out.println( 1f &#x3D;&#x3D; 0.99999999f );</span><br></pre></td></tr></table></figure>
<p>直接用代码去比较<code>1</code>和<code>0.99999999</code>，居然打印出<code>true</code>！</p>
<p>这说明了什么？这说明了计算机压根<strong>区分不出来</strong>这两个数。这是为什么呢？</p>
<p>我们不妨来简单思考一下：</p>
<blockquote>
<p>我们知道输入的这两个浮点数只是我们人类肉眼所看到的具体数值，是我们通常所理解的十进制数，但是计算机底层在计算时可不是按照十进制来计算的，学过基本计组原理的都知道，计算机底层最终都是基于像<code>010100100100110011011</code>这种<code>0</code>、<code>1</code>二进制来完成的。</p>
</blockquote>
<p>所以为了搞懂实际情况，我们应该将这两个十进制浮点数<strong>转化到二进制空间</strong>来看一看。</p>
<p><strong>十进制浮点数转二进制</strong> 怎么转、怎么计算，我想这应该属于基础计算机进制转换常识，在 <strong>《计算机组成原理》</strong> 类似的课上肯定学过了，咱就不在此赘述了，直接给出结果（把它转换到<code>IEEE 754 Single precision 32-bit</code>，也就<code>float</code>类型对应的精度）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.0（十进制）</span><br><span class="line">    ↓</span><br><span class="line">00111111 10000000 00000000 00000000（二进制）</span><br><span class="line">    ↓</span><br><span class="line">0x3F800000（十六进制）</span><br><span class="line">0.99999999（十进制）</span><br><span class="line">    ↓</span><br><span class="line">00111111 10000000 00000000 00000000（二进制）</span><br><span class="line">    ↓</span><br><span class="line">0x3F800000（十六进制）</span><br></pre></td></tr></table></figure>
<p><strong>果不其然</strong>，这两个十进制浮点数的底层二进制表示是一毛一样的，怪不得<code>==</code>的判断结果返回<code>true</code>！</p>
<p>但是<code>1f == 0.9999999f</code>返回的结果是符合预期的，打印<code>false</code>，我们也把它们转换到二进制模式下看看情况：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.0（十进制）</span><br><span class="line">    ↓</span><br><span class="line">00111111 10000000 00000000 00000000（二进制）</span><br><span class="line">    ↓</span><br><span class="line">0x3F800000（十六进制）</span><br><span class="line">0.9999999（十进制）</span><br><span class="line">    ↓</span><br><span class="line">00111111 01111111 11111111 11111110（二进制）</span><br><span class="line">    ↓</span><br><span class="line">0x3F7FFFFE（十六进制）</span><br></pre></td></tr></table></figure>
<p>哦，很明显，它俩的二进制数字表示确实不一样，这是理所应当的结果。</p>
<p>那么为什么<code>0.99999999</code>的底层二进制表示竟然是：<code>00111111 10000000 00000000 00000000</code>呢？</p>
<p>这不明明是浮点数<code>1.0</code>的二进制表示吗？</p>
<p>这就要谈一下浮点数的精度问题了。</p>
<hr>
<h2 id="浮点数的精度问题！"><a href="#浮点数的精度问题！" class="headerlink" title="浮点数的精度问题！"></a>浮点数的精度问题！</h2><p>学过 <strong>《计算机组成原理》</strong> 这门课的小伙伴应该都知道，浮点数在计算机中的存储方式遵循<strong>IEEE 754 浮点数计数标准</strong>，可以用科学计数法表示为：</p>
<p>只要给出：<strong>符号（S）</strong>、<strong>阶码部分（E）</strong>、<strong>尾数部分（M）</strong> 这三个维度的信息，一个浮点数的表示就完全确定下来了，所以<code>float</code>和<code>double</code>这两种浮点数在内存中的存储结构如下所示：</p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/641.png" alt="img"></p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/640.png" alt="img"></p>
<p><strong>1、符号部分（S）</strong></p>
<p><code>0</code>-正 <code>1</code>-负</p>
<p><strong>2、阶码部分（E）（指数部分）</strong>：</p>
<ul>
<li>对于<code>float</code>型浮点数，指数部分<code>8</code>位，考虑可正可负，因此可以表示的指数范围为<code>-127 ~ 128</code></li>
<li>对于<code>double</code>型浮点数，指数部分<code>11</code>位，考虑可正可负，因此可以表示的指数范围为<code>-1023 ~ 1024</code></li>
</ul>
<p><strong>3、尾数部分（M）</strong>：</p>
<p>浮点数的精度是由尾数的位数来决定的：</p>
<ul>
<li>对于<code>float</code>型浮点数，尾数部分<code>23</code>位，换算成十进制就是 <code>2^23=8388608</code>，所以十进制精度只有<code>6 ~ 7</code>位；</li>
<li>对于<code>double</code>型浮点数，尾数部分<code>52</code>位，换算成十进制就是 <code>2^52 = 4503599627370496</code>，所以十进制精度只有<code>15 ~ 16</code>位</li>
</ul>
<p>所以对于上面的数值<code>0.99999999f</code>，很明显已经超过了<code>float</code>型浮点数据的精度范围，出问题也是在所难免的。</p>
<hr>
<h2 id="精度问题如何解决"><a href="#精度问题如何解决" class="headerlink" title="精度问题如何解决"></a>精度问题如何解决</h2><p>所以如果涉及<strong>商品金额</strong>、<strong>交易值</strong>、<strong>货币计算</strong>等这种对精度要求很高的场景该怎么办呢？</p>
<p><strong>方法一：用字符串或者数组解决多位数问题</strong></p>
<p>校招刷过算法题的小伙伴们应该都知道，用字符串或者数组表示大数是一个典型的解题思路。</p>
<p>比如经典面试题：<strong>编写两个任意位数大数的加法、减法、乘法等运算</strong>。</p>
<p>这时候我们我们可以用字符串或者数组来表示这种大数，然后按照四则运算的规则来手动模拟出具体计算过程，中间还需要考虑各种诸如：<strong>进位</strong>、<strong>借位</strong>、<strong>符号</strong>等等问题的处理，确实十分复杂，本文不做赘述。</p>
<p><strong>方法二：Java的大数类是个好东西</strong></p>
<p>JDK早已为我们考虑到了浮点数的计算精度问题，因此提供了专用于高精度数值计算的<strong>大数类</strong>来方便我们使用。</p>
<p>Java的大数类位于<code>java.math</code>包下：</p>
<p><img src="https://cdn.jsdelivr.net/gh/jooejooe/images/image/640-1587350432792.png" alt="img" style="zoom:50%;" /></p>
<p>可以看到，常用的<code>BigInteger</code> 和 <code>BigDecimal</code>就是处理高精度数值计算的利器。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BigDecimal num3 &#x3D; new BigDecimal( Double.toString( 1.0f ) );</span><br><span class="line">BigDecimal num4 &#x3D; new BigDecimal( Double.toString( 0.99999999f ) );</span><br><span class="line">System.out.println( num3 &#x3D;&#x3D; num4 );  &#x2F;&#x2F; 打印 false</span><br><span class="line"></span><br><span class="line">BigDecimal num1 &#x3D; new BigDecimal( Double.toString( 0.2 ) );</span><br><span class="line">BigDecimal num2 &#x3D; new BigDecimal( Double.toString( 0.7 ) );</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 加</span><br><span class="line">System.out.println( num1.add( num2 ) );  &#x2F;&#x2F; 打印：0.9</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 减</span><br><span class="line">System.out.println( num2.subtract( num1 ) );  &#x2F;&#x2F; 打印：0.5</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 乘</span><br><span class="line">System.out.println( num1.multiply( num2 ) );  &#x2F;&#x2F; 打印：0.14</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 除</span><br><span class="line">System.out.println( num2.divide( num1 ) );  &#x2F;&#x2F; 打印：3.5</span><br></pre></td></tr></table></figure>
<p>当然了，像<code>BigInteger</code> 和 <code>BigDecimal</code>这种大数类的运算效率肯定是不如原生类型效率高，代价还是比较昂贵的，是否选用需要根据实际场景来评估。</p>
]]></content>
      <categories>
        <category>开发经验</category>
      </categories>
      <tags>
        <tag>开发经验</tag>
      </tags>
  </entry>
  <entry>
    <title>提问的智慧</title>
    <url>//p/fb3832f5.html</url>
    <content><![CDATA[<h1 id="提问的智慧"><a href="#提问的智慧" class="headerlink" title="提问的智慧"></a>提问的智慧</h1><p><a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/pulls" target="_blank" rel="noopener"><img src="images/PRs-welcome-brightgreen.svg" alt="PRs Welcome"></a></p>
<p><strong>How To Ask Questions The Smart Way</strong></p>
<p>Copyright © 2001,2006,2014 Eric S. Raymond, Rick Moen</p>
<p>本指南英文版版权为 Eric S. Raymond, Rick Moen 所有。</p>
<p>原文网址：<a href="http://www.catb.org/~esr/faqs/smart-questions.html" target="_blank" rel="noopener">http://www.catb.org/~esr/faqs/smart-questions.html</a></p>
<p>Copyleft 2001 by D.H.Grand(nOBODY/Ginux), 2010 by Gasolin, 2015 by Ryan Wu</p>
<p>本中文指南是基于原文 3.10 版以及 2010 年由 <a href="https://github.com/gasolin" target="_blank" rel="noopener">Gasolin</a> 所翻译版本的最新翻译；</p>
<p>协助指出翻译问题，<strong>请<a href="https://github.com/ryanhanwu/smartquestions/issues/new" target="_blank" rel="noopener">发 Issue</a>，或直接<a href="https://github.com/ryanhanwu/smartquestions/compare/" target="_blank" rel="noopener">发 Pull Request</a> 给我。</strong></p>
<p>本文另有<a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/master/README.md" target="_blank" rel="noopener">繁體中文版</a>。</p>
<h2 id="原文版本历史"><a href="#原文版本历史" class="headerlink" title="原文版本历史"></a><a href="https://github.com/ryanhanwu/smartquestions/blob/master/history.md" target="_blank" rel="noopener">原文版本历史</a></h2><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul>
<li><a href="#声明">声明</a></li>
<li><a href="#简介">简介</a></li>
<li><a href="#在提问之前">在提问之前</a></li>
<li><a href="#当你提问时">当你提问时</a><ul>
<li><a href="#慎选提问的论坛">慎选提问的论坛</a></li>
<li><a href="#stack-overflow">Stack Overflow</a></li>
<li><a href="#网站和-irc-论坛">网站和 IRC 论坛</a></li>
<li><a href="#第二步使用项目邮件列表">第二步，使用项目邮件列表</a></li>
<li><a href="#使用有意义且描述明确的标题">使用有意义且描述明确的标题</a></li>
<li><a href="#使问题容易回复">使问题容易回复</a></li>
<li><a href="#用清晰正确精准并合法语法的语句">用清晰、正确、精准并合法语法的语句</a></li>
<li><a href="#使用易于读取且标准的文件格式发送问题">使用易于读取且标准的文件格式发送问题</a></li>
<li><a href="#精确地描述问题并言之有物">精确地描述问题并言之有物</a></li>
<li><a href="#话不在多而在精">话不在多而在精</a></li>
<li><a href="#别动辄声称找到-bug">别动辄声称找到 Bug</a></li>
<li><a href="#低声下气不能代替你的功课">低声下气不能代替你的功课</a></li>
<li><a href="#描述问题症状而非你的猜测">描述问题症状而非你的猜测</a></li>
<li><a href="#按发生时间先后列出问题症状">按发生时间先后列出问题症状</a></li>
<li><a href="#描述目标而不是过程">描述目标而不是过程</a></li>
<li><a href="#别要求使用私人电邮回复">别要求使用私人电邮回复</a></li>
<li><a href="#清楚明确的表达你的问题以及需求">清楚明确的表达你的问题以及需求</a></li>
<li><a href="#询问有关代码的问题时">询问有关代码的问题时</a></li>
<li><a href="#别把自己家庭作业的问题贴上来">别把自己家庭作业的问题贴上来</a></li>
<li><a href="#去掉无意义的提问句">去掉无意义的提问句</a></li>
<li><a href="#即使你很急也不要在标题写紧急">即使你很急也不要在标题写紧急</a></li>
<li><a href="#礼多人不怪而且有时还很有帮助">礼多人不怪，而且有时还很有帮助</a></li>
<li><a href="#问题解决后加个简短的补充说明">问题解决后，加个简短的补充说明</a></li>
</ul>
</li>
<li><a href="#如何解读答案">如何解读答案</a><ul>
<li><a href="#rtfm-和-stfw如何知道你已完全搞砸了">RTFM 和 STFW：如何知道你已完全搞砸了</a></li>
<li><a href="#如果还是搞不懂">如果还是搞不懂</a></li>
<li><a href="#处理无礼的回应">处理无礼的回应</a></li>
</ul>
</li>
<li><a href="#如何避免扮演失败者">如何避免扮演失败者</a></li>
<li><a href="#不该问的问题">不该问的问题</a></li>
<li><a href="#好问题与蠢问题">好问题与蠢问题</a></li>
<li><a href="#如果得不到回答">如果得不到回答</a></li>
<li><a href="#如何更好地回答问题">如何更好地回答问题</a></li>
<li><a href="#相关资源">相关资源</a></li>
<li><a href="#鸣谢">鸣谢</a></li>
</ul>
<h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><p>许多项目在他们的使用协助/说明网页中链接了本指南，这么做很好，我们也鼓励大家都这么做。但如果你是负责管理这个项目网页的人，请在超链接附近的显著位置上注明：</p>
<p><strong>本指南不提供此项目的实际支持服务！</strong></p>
<p>我们已经深刻领教到少了上述声明所带来的痛苦。因为少了这点声明，我们不停地被一些白痴纠缠。这些白痴认为既然我们发布了这本指南，那么我们就有责任解决世上所有的技术问题。</p>
<p>如果你是因为需要某些协助而正在阅读这本指南，并且最后离开是因为发现从本指南作者们身上得不到直接的协助，那么你就是我们所说的那些白痴之一。别问我们问题，我们只会忽略你。我们在这本指南中是教你如何从那些真正懂得你所遇到软件或硬件问题的人取得协助，而 99% 的情况下那不会是我们。除非你确定本指南的作者之一刚好是你所遇到的问题领域的专家，否则请不要打扰我们，这样大家都会开心一点。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在<a href="http://www.catb.org/~esr/faqs/hacker-howto.html" target="_blank" rel="noopener">黑客</a>的世界里，当你拋出一个技术问题时，最终是否能得到有用的回答，往往取决于你所提问和追问的方式。本指南将教你如何正确的提问以获得你满意的答案。</p>
<p>不只是黑客，现在开源（Open Source）软件已经相当盛行，你常常也可以由其他有经验的使用者身上得到好答案，这是件<strong>好事</strong>；使用者比起黑客来，往往对那些新手常遇到的问题更宽容一些。然而，将有经验的使用者视为黑客，并采用本指南所提的方法与他们沟通，同样也是能从他们身上得到满意回答的最有效方式。</p>
<p>首先你应该明白，黑客们喜爱有挑战性的问题，或者能激发他们思维的好问题。如果我们并非如此，那我们也不会成为你想询问的对象。如果你给了我们一个值得反复咀嚼玩味的好问题，我们自会对你感激不尽。好问题是激励，是厚礼。好问题可以提高我们的理解力，而且通常会暴露我们以前从没意识到或者思考过的问题。对黑客而言，”好问题！”是诚挚的大力称赞。</p>
<p>尽管如此，黑客们有着蔑视或傲慢面对简单问题的坏名声，这有时让我们看起来对新手、无知者似乎较有敌意，但其实不是那样的。</p>
<p>我们不讳言我们对那些不愿思考、或者在发问前不做他们该做的事的人的蔑视。那些人是时间杀手 —— 他们只想索取，从不付出，消耗我们可用在更有趣的问题或更值得回答的人身上的时间。我们称这样的人为 <code>失败者（撸瑟）</code> （由于历史原因，我们有时把它拼作 <code>lusers</code>）。</p>
<p>我们意识到许多人只是想使用我们写的软件，他们对学习技术细节没有兴趣。对大多数人而言，电脑只是种工具，是种达到目的的手段而已。他们有自己的生活并且有更要紧的事要做。我们了解这点，也从不指望每个人都对这些让我们着迷的技术问题感兴趣。尽管如此，我们回答问题的风格是指向那些真正对此有兴趣并愿意主动参与解决问题的人，这一点不会变，也不该变。如果连这都变了，我们就是在降低做自己最擅长的事情上的效率。</p>
<p>我们（在很大程度上）是自愿的，从繁忙的生活中抽出时间来解答疑惑，而且时常被提问淹没。所以我们无情的滤掉一些话题，特别是拋弃那些看起来像失败者的家伙，以便更高效的利用时间来回答<code>赢家（winner）</code>的问题。</p>
<p>如果你厌恶我们的态度，高高在上，或过于傲慢，不妨也设身处地想想。我们并没有要求你向我们屈服 —— 事实上，我们大多数人非常乐意与你平等地交流，只要你付出小小努力来满足基本要求，我们就会欢迎你加入我们的文化。但让我们帮助那些不愿意帮助自己的人是没有效率的。无知没有关系，但装白痴就是不行。</p>
<p>所以，你不必在技术上很在行才能吸引我们的注意，但你必须表现出能引导你变得在行的特质 — 机敏、有想法、善于观察、乐于主动参与解决问题。如果你做不到这些使你与众不同的事情，我们建议你花点钱找家商业公司签个技术支持服务合同，而不是要求黑客个人无偿地帮助你。</p>
<p>如果你决定向我们求助，当然你也不希望被视为失败者，更不愿成为失败者中的一员。能立刻得到快速并有效答案的最好方法，就是像赢家那样提问 — 聪明、自信、有解决问题的思路，只是偶尔在特定的问题上需要获得一点帮助。</p>
<p>（欢迎对本指南提出改进意见。你可以 email 你的建议至 <a href="esr@thyrsus.com">esr@thyrsus.com</a> 或 <a href="respond-auto@linuxmafia.com">respond-auto@linuxmafia.com</a>。然而请注意，本文并非<a href="http://www.ietf.org/rfc/rfc1855.txt" target="_blank" rel="noopener">网络礼节</a>的通用指南，而我们通常会拒绝无助于在技术论坛得到有用答案的建议）。</p>
<h2 id="在提问之前"><a href="#在提问之前" class="headerlink" title="在提问之前"></a>在提问之前</h2><p>在你准备要通过电子邮件、新闻群组或者聊天室提出技术问题前，请先做到以下事情：</p>
<ol>
<li>尝试在你准备提问的论坛的旧文章中搜索答案。</li>
<li>尝试上网搜索以找到答案。</li>
<li>尝试阅读手册以找到答案。</li>
<li>尝试阅读常见问题文件（FAQ）以找到答案。</li>
<li>尝试自己检查或试验以找到答案。</li>
<li>向你身边的强者朋友打听以找到答案。</li>
<li>如果你是程序开发者，请尝试阅读源代码以找到答案。</li>
</ol>
<p>当你提出问题的时候，请先表明你已经做了上述的努力；这将有助于树立你并不是一个不劳而获且浪费别人的时间的提问者。如果你能一并表达在做了上述努力的过程中所<strong>学到</strong>的东西会更好，因为我们更乐于回答那些表现出能从答案中学习的人的问题。</p>
<p>运用某些策略，比如先用 Google 搜索你所遇到的各种错误信息（既搜索 <a href="http://groups.google.com/" target="_blank" rel="noopener">Google 论坛</a>，也搜索网页），这样很可能直接就找到了能解决问题的文件或邮件列表线索。即使没有结果，在邮件列表或新闻组寻求帮助时加上一句 <code>我在 Google 中搜过下列句子但没有找到什么有用的东西</code> 也是件好事，即使它只是表明了搜索引擎不能提供哪些帮助。这么做（加上搜索过的字串）也让遇到相似问题的其他人能被搜索引擎引导到你的提问来。</p>
<p>别着急，不要指望几秒钟的 Google 搜索就能解决一个复杂的问题。在向专家求助之前，再阅读一下常见问题文件（FAQ）、放轻松、坐舒服一些，再花点时间思考一下这个问题。相信我们，他们能从你的提问看出你做了多少阅读与思考，如果你是有备而来，将更有可能得到解答。不要将所有问题一股脑拋出，只因你的第一次搜索没有找到答案（或者找到太多答案）。</p>
<p>准备好你的问题，再将问题仔细的思考过一遍，因为草率的发问只能得到草率的回答，或者根本得不到任何答案。越是能表现出在寻求帮助前你为解决问题所付出的努力，你越有可能得到实质性的帮助。</p>
<p>小心别问错了问题。如果你的问题基于错误的假设，某个普通黑客（J. Random Hacker）多半会一边在心里想着<code>蠢问题…</code>， 一边用无意义的字面解释来答复你，希望着你会从问题的回答（而非你想得到的答案）中汲取教训。</p>
<p>绝不要自以为<strong>够格</strong>得到答案，你没有；你并没有。毕竟你没有为这种服务支付任何报酬。你将会是自己去<strong>挣到</strong>一个答案，靠提出有内涵的、有趣的、有思维激励作用的问题 —— 一个有潜力能贡献社区经验的问题，而不仅仅是被动的从他人处索取知识。</p>
<p>另一方面，表明你愿意在找答案的过程中做点什么是一个非常好的开端。<code>谁能给点提示？</code>、<code>我的这个例子里缺了什么？</code>以及<code>我应该检查什么地方</code>比<code>请把我需要的确切的过程贴出来</code>更容易得到答复。因为你表现出只要有人能指个正确方向，你就有完成它的能力和决心。</p>
<h2 id="当你提问时"><a href="#当你提问时" class="headerlink" title="当你提问时"></a>当你提问时</h2><h3 id="慎选提问的论坛"><a href="#慎选提问的论坛" class="headerlink" title="慎选提问的论坛"></a>慎选提问的论坛</h3><p>小心选择你要提问的场合。如果你做了下述的事情，你很可能被忽略掉或者被看作失败者：</p>
<ul>
<li>在与主题不合的论坛上贴出你的问题。</li>
<li>在探讨进阶技术问题的论坛张贴非常初级的问题；反之亦然。</li>
<li>在太多的不同新闻群组上重复转贴同样的问题（cross-post）。</li>
<li>向既非熟人也没有义务解决你问题的人发送私人电邮。</li>
</ul>
<p>黑客会剔除掉那些搞错场合的问题，以保护他们沟通的渠道不被无关的东西淹没。你不会想让这种事发生在自己身上的。</p>
<p>因此，第一步是找到对的论坛。再说一次，Google 和其它搜索引擎还是你的朋友，用它们来找到与你遭遇到困难的软硬件问题最相关的网站。通常那儿都有常见问题（FAQ）、邮件列表及相关说明文件的链接。如果你的努力（包括<strong>阅读</strong> FAQ）都没有结果，网站上也许还有报告 Bug（Bug-reporting）的流程或链接，如果是这样，链过去看看。</p>
<p>向陌生的人或论坛发送邮件最可能是风险最大的事情。举例来说，别假设一个提供丰富内容的网页的作者会想充当你的免费顾问。不要对你的问题是否会受到欢迎做太乐观的估计 — 如果你不确定，那就向别处发送，或者压根别发。</p>
<p>在选择论坛、新闻群组或邮件列表时，别太相信名字，先看看 FAQ 或者许可书以弄清楚你的问题是否切题。发文前先翻翻已有的话题，这样可以让你感受一下那里的文化。事实上，事先在新闻组或邮件列表的历史记录中搜索与你问题相关的关键词是个极好的主意，也许这样就找到答案了。即使没有，也能帮助你归纳出更好的问题。</p>
<p>别像机关枪似的一次”扫射”所有的帮助渠道，这就像大喊大叫一样会使人不快。要一个一个地来。</p>
<p>搞清楚你的主题！最典型的错误之一是在某种致力于跨平台可移植的语言、套件或工具的论坛中提关于 Unix 或 Windows 操作系统程序界面的问题。如果你不明白为什么这是大错，最好在搞清楚这之间差异之前什么也别问。</p>
<p>一般来说，在仔细挑选的公共论坛中提问，会比在私有论坛中提同样的问题更容易得到有用的回答。有几个理由可以支持这点，一是看潜在的回复者有多少，二是看观众有多少。黑客较愿意回答那些能帮助到许多人的问题。</p>
<p>可以理解的是，老练的黑客和一些热门软件的作者正在接受过多的错发信息。就像那根最后压垮骆驼背的稻草一样，你的加入也有可能使情况走向极端 —— 已经好几次了，一些热门软件的作者从自己软件的支持中抽身出来，因为伴随而来涌入其私人邮箱的无用邮件变得无法忍受。</p>
<h3 id="Stack-Overflow"><a href="#Stack-Overflow" class="headerlink" title="Stack Overflow"></a>Stack Overflow</h3><p>搜索，<strong>然后</strong> 在 Stack Exchange 问。</p>
<p>近年来，Stack Exchange community 社区已经成为回答技术及其他问题的主要渠道，尤其是那些开放源码的项目。</p>
<p>因为 Google 索引是即时的，在看 Stack Exchange 之前先在 Google 搜索。有很高的机率某人已经问了一个类似的问题，而且 Stack Exchange 网站们往往会是搜索结果中最前面几个。如果你在 Google 上没有找到任何答案，你再到特定相关主题的网站去找。用标签（Tag）搜索能让你更缩小你的搜索结果。</p>
<p>Stack Exchange 已经成长到<a href="http://stackexchange.com/sites" target="_blank" rel="noopener">超过一百个网站</a>，以下是最常用的几个站：</p>
<ul>
<li>Super User 是问一些通用的电脑问题，如果你的问题跟代码或是写程序无关，只是一些网络连线之类的，请到这里。</li>
<li>Stack Overflow 是问写程序有关的问题。</li>
<li>Server Fault 是问服务器和网管相关的问题。</li>
</ul>
<h3 id="网站和-IRC-论坛"><a href="#网站和-IRC-论坛" class="headerlink" title="网站和 IRC 论坛"></a>网站和 IRC 论坛</h3><p>本地的使用者群组（user group），或者你所用的 Linux 发行版本也许正在宣传他们的网页论坛或 IRC 频道，并提供新手帮助（在一些非英语国家，新手论坛很可能还是邮件列表）， 这些地方是开始提问的好首选，特别是当你觉得遇到的也许只是相对简单或者很普通的问题时。有广告赞助的 IRC 频道是公开欢迎提问的地方，通常可以即时得到回应。</p>
<p>事实上，如果程序出的问题只发生在特定 Linux 发行版提供的版本（这很常见），最好先去该发行版的论坛或邮件列表中提问，再到程序本身的论坛或邮件列表提问。（否则）该项目的黑客可能仅仅回复 “用<strong>我们的</strong>版本”。</p>
<p>在任何论坛发文以前，先确认一下有没有搜索功能。如果有，就试着搜索一下问题的几个关键词，也许这会有帮助。如果在此之前你已做过通用的网页搜索（你也该这样做），还是再搜索一下论坛，搜索引擎有可能没来得及索引此论坛的全部内容。</p>
<p>通过论坛或 IRC 频道来提供使用者支持服务有增长的趋势，电子邮件则大多为项目开发者间的交流而保留。所以最好先在论坛或 IRC 中寻求与该项目相关的协助。</p>
<p>在使用 IRC 的时候，首先最好不要发布很长的问题描述，有些人称之为频道洪水。最好通过一句话的问题描述来开始聊天。</p>
<h3 id="第二步，使用项目邮件列表"><a href="#第二步，使用项目邮件列表" class="headerlink" title="第二步，使用项目邮件列表"></a>第二步，使用项目邮件列表</h3><p>当某个项目提供开发者邮件列表时，要向列表而不是其中的个别成员提问，即使你确信他能最好地回答你的问题。查一查项目的文件和首页，找到项目的邮件列表并使用它。有几个很好的理由支持我们采用这种办法：</p>
<ul>
<li>任何好到需要向个别开发者提出的问题，也将对整个项目群组有益。反之，如果你认为自己的问题对整个项目群组来说太愚蠢，也不能成为骚扰个别开发者的理由。</li>
<li>向列表提问可以分散开发者的负担，个别开发者（尤其是项目领导人）也许太忙以至于没法回答你的问题。</li>
<li>大多数邮件列表都会被存档，那些被存档的内容将被搜索引擎索引。如果你向列表提问并得到解答，将来其它人可以通过网页搜索找到你的问题和答案，也就不用再次发问了。</li>
<li>如果某些问题经常被问到，开发者可以利用此信息来改进说明文件或软件本身，以使其更清楚。如果只是私下提问，就没有人能看到最常见问题的完整场景。</li>
</ul>
<p>如果一个项目既有”使用者” 也有”开发者”（或”黑客”）邮件列表或论坛，而你又不会动到那些源代码，那么就向”使用者”列表或论坛提问。不要假设自己会在开发者列表中受到欢迎，那些人多半会将你的提问视为干扰他们开发的噪音。</p>
<p>然而，如果你<strong>确信</strong>你的问题很特别，而且在”使用者” 列表或论坛中几天都没有回复，可以试试前往”开发者”列表或论坛发问。建议你在张贴前最好先暗地里观察几天以了解那里的行事方式（事实上这是参与任何私有或半私有列表的好主意）</p>
<p>如果你找不到一个项目的邮件列表，而只能查到项目维护者的电子邮件地址，尽管向他发信。即使是在这种情况下，也别假设（项目）邮件列表不存在。在你的电子邮件中，请陈述你已经试过但没有找到合适的邮件列表，也提及你不反对将自己的邮件转发给他人（许多人认为，即使没什么秘密，私人电子邮件也不应该被公开。通过允许将你的电子邮件转发他人，你给了相应人员处置你邮件的选择）。</p>
<h3 id="使用有意义且描述明确的标题"><a href="#使用有意义且描述明确的标题" class="headerlink" title="使用有意义且描述明确的标题"></a>使用有意义且描述明确的标题</h3><p>在邮件列表、新闻群组或论坛中，大约 50 字以内的标题是抓住资深专家注意力的好机会。别用喋喋不休的<code>帮帮忙</code>、<code>跪求</code>、<code>急</code>（更别说<code>救命啊！！！！</code>这样让人反感的话，用这种标题会被条件反射式地忽略）来浪费这个机会。不要妄想用你的痛苦程度来打动我们，而应该是在这点空间中使用极简单扼要的描述方式来提出问题。</p>
<p>一个好标题范例是<code>目标 —— 差异</code>式的描述，许多技术支持组织就是这样做的。在<code>目标</code>部分指出是哪一个或哪一组东西有问题，在<code>差异</code>部分则描述与期望的行为不一致的地方。</p>
<blockquote>
<p>蠢问题：救命啊！我的笔记本电脑不能正常显示了！</p>
<p>聪明问题：X.org 6.8.1 的鼠标光标会变形，某牌显卡 MV1005 芯片组。</p>
<p>更聪明问题：X.org 6.8.1 的鼠标光标，在某牌显卡 MV1005 芯片组环境下 - 会变形。</p>
</blockquote>
<p>编写<code>目标 —— 差异</code> 式描述的过程有助于你组织对问题的细致思考。是什么被影响了？ 仅仅是鼠标光标或者还有其它图形？只在 X.org 的 X 版中出现？或只是出现在 6.8.1 版中？ 是针对某牌显卡芯片组？或者只是其中的 MV1005 型号？ 一个黑客只需瞄一眼就能够立即明白你的环境<strong>和</strong>你遇到的问题。</p>
<p>总而言之，请想像一下你正在一个只显示标题的存档讨论串（Thread）索引中查寻。让你的标题更好地反映问题，可使下一个搜索类似问题的人能够关注这个讨论串，而不用再次提问相同的问题。</p>
<p>如果你想在回复中提出问题，记得要修改内容标题，以表明你是在问一个问题， 一个看起来像 <code>Re: 测试</code> 或者 <code>Re: 新 bug</code> 的标题很难引起足够重视。另外，在不影响连贯性之下，适当引用并删减前文的内容，能给新来的读者留下线索。</p>
<p>对于讨论串，不要直接点击回复来开始一个全新的讨论串，这将限制你的观众。因为有些邮件阅读程序，比如 mutt ，允许使用者按讨论串排序并通过折叠讨论串来隐藏消息，这样做的人永远看不到你发的消息。</p>
<p>仅仅改变标题还不够。mutt 和其它一些邮件阅读程序还会检查邮件标题以外的其它信息，以便为其指定讨论串。所以宁可发一个全新的邮件。</p>
<p>在网页论坛上，好的提问方式稍有不同，因为讨论串与特定的信息紧密结合，并且通常在讨论串外就看不到里面的内容，故通过回复提问，而非改变标题是可接受的。不是所有论坛都允许在回复中出现分离的标题，而且这样做了基本上没有人会去看。不过，通过回复提问，这本身就是暧昧的做法，因为它们只会被正在查看该标题的人读到。所以，除非你<strong>只想</strong>在该讨论串当前活跃的人群中提问，不然还是另起炉灶比较好。</p>
<h3 id="使问题容易回复"><a href="#使问题容易回复" class="headerlink" title="使问题容易回复"></a>使问题容易回复</h3><p>以<code>请将你的回复发送到……</code>来结束你的问题多半会使你得不到回答。如果你觉得花几秒钟在邮件客户端设置一下回复地址都麻烦，我们也觉得花几秒钟思考你的问题更麻烦。如果你的邮件程序不支持这样做，<a href="http://linuxmafia.com/faq/Mail/muas.html" target="_blank" rel="noopener">换个好点的</a>；如果是操作系统不支持这种邮件程序，也换个好点的。</p>
<p>在论坛，要求通过电子邮件回复是非常无礼的，除非你认为回复的信息可能比较敏感（有人会为了某些未知的原因，只让你而不是整个论坛知道答案）。如果你只是想在有人回复讨论串时得到电子邮件提醒，可以要求网页论坛发送给你。几乎所有论坛都支持诸如<code>追踪此讨论串</code>、<code>有回复时发送邮件提醒</code>等功能。</p>
<h3 id="用清晰、正确、精准并语法正确的语句"><a href="#用清晰、正确、精准并语法正确的语句" class="headerlink" title="用清晰、正确、精准并语法正确的语句"></a>用清晰、正确、精准并语法正确的语句</h3><p>我们从经验中发现，粗心的提问者通常也会粗心的写程序与思考（我敢打包票）。回答粗心大意者的问题很不值得，我们宁愿把时间耗在别处。</p>
<p>正确的拼写、标点符号和大小写是很重要的。一般来说，如果你觉得这样做很麻烦，不想在乎这些，那我们也觉得麻烦，不想在乎你的提问。花点额外的精力斟酌一下字句，用不着太僵硬与正式 —— 事实上，黑客文化很看重能准确地使用非正式、俚语和幽默的语句。但它<strong>必须很</strong>准确，而且有迹象表明你是在思考和关注问题。</p>
<p>正确地拼写、使用标点和大小写，不要将<code>its</code>混淆为<code>it&#39;s</code>，<code>loose</code>搞成<code>lose</code>或者将<code>discrete</code>弄成<code>discreet</code>。不要<strong>全部用大写</strong>，这会被视为无礼的大声嚷嚷（全部小写也好不到哪去，因为不易阅读。<a href="http://en.wikipedia.org/wiki/Alan_Cox" target="_blank" rel="noopener">Alan Cox</a> 也许可以这样做，但你不行）。</p>
<p>更白话的说，如果你写得像是个半文盲[译注：<a href="http://zh.wikipedia.org/wiki/小白" target="_blank" rel="noopener">小白</a>]，那多半得不到理睬。也不要使用即时通信中的简写或<a href="http://zh.wikipedia.org/wiki/火星文" target="_blank" rel="noopener">火星文</a>，如将<code>的</code>简化为<code>d</code>会使你看起来像一个为了少打几个键而省字的小白。更糟的是，如果像个小孩似地鬼画符那绝对是在找死，可以肯定没人会理你（或者最多是给你一大堆指责与挖苦）。</p>
<p>如果在使用非母语的论坛提问，你可以犯点拼写和语法上的小错，但决不能在思考上马虎（没错，我们通常能弄清两者的分别）。同时，除非你知道回复者使用的语言，否则请使用英语书写。繁忙的黑客一般会直接删除用他们看不懂语言写的消息。在网络上英语是通用语言，用英语书写可以将你的问题在尚未被阅读就被直接删除的可能性降到最低。</p>
<p>如果英文是你的外语（Second language），提示潜在回复者你有潜在的语言困难是很好的：<br>[译注：以下附上原文以供使用]</p>
<blockquote>
<p>English is not my native language; please excuse typing errors.</p>
</blockquote>
<ul>
<li>英文不是我的母语，请原谅我的错字或语法。</li>
</ul>
<blockquote>
<p>If you speak $LANGUAGE, please email/PM me;<br>I may need assistance translating my question.</p>
</blockquote>
<ul>
<li>如果你说<strong>某语言</strong>，请寄信/私讯给我；我需要有人协助我翻译我的问题。</li>
</ul>
<blockquote>
<p>I am familiar with the technical terms,<br>but some slang expressions and idioms are difficult for me.</p>
</blockquote>
<ul>
<li>我对技术名词很熟悉，但对于俗语或是特别用法比较不甚了解。</li>
</ul>
<blockquote>
<p>I’ve posted my question in $LANGUAGE and English.<br>I’ll be glad to translate responses, if you only use one or the other.</p>
</blockquote>
<ul>
<li>我把我的问题用<strong>某语言</strong>和英文写出来，如果你只用一种语言回答，我会乐意将其翻译成另一种。</li>
</ul>
<h3 id="使用易于读取且标准的文件格式发送问题"><a href="#使用易于读取且标准的文件格式发送问题" class="headerlink" title="使用易于读取且标准的文件格式发送问题"></a>使用易于读取且标准的文件格式发送问题</h3><p>如果你人为地将问题搞得难以阅读，它多半会被忽略，人们更愿读易懂的问题，所以：</p>
<ul>
<li>使用纯文字而不是 HTML (<a href="http://archive.birdhouse.org/etc/evilmail.html" target="_blank" rel="noopener">关闭 HTML</a> 并不难）。</li>
<li>使用 MIME 附件通常是可以的，前提是真正有内容（譬如附带的源代码或 patch），而不仅仅是邮件程序生成的模板（譬如只是信件内容的拷贝）。</li>
<li>不要发送一段文字只是一行句子但自动换行后会变成多行的邮件（这使得回复部分内容非常困难）。设想你的读者是在 80 个字符宽的终端机上阅读邮件，最好设置你的换行分割点小于 80 字。</li>
<li>但是，对一些特殊的文件<strong>不要</strong>设置固定宽度（譬如日志档案拷贝或会话记录）。数据应该原样包含，让回复者有信心他们看到的是和你看到的一样的东西。</li>
<li>在英语论坛中，不要使用<code>Quoted-Printable</code> MIME 编码发送消息。这种编码对于张贴非 ASCII 语言可能是必须的，但很多邮件程序并不支持这种编码。当它们处理换行时，那些文本中四处散布的<code>=20</code>符号既难看也分散注意力，甚至有可能破坏内容的语意。</li>
<li>绝对，<strong>永远</strong>不要指望黑客们阅读使用封闭格式编写的文档，像微软公司的 Word 或 Excel 文件等。大多数黑客对此的反应就像有人将还在冒热气的猪粪倒在你家门口时你的反应一样。即便他们能够处理，他们也很厌恶这么做。</li>
<li>如果你从使用 Windows 的电脑发送电子邮件，关闭微软愚蠢的<code>智能引号</code>功能 （从[选项] &gt; [校订] &gt; [自动校正选项]，勾选掉<code>智能引号</code>单选框），以免在你的邮件中到处散布垃圾字符。</li>
<li>在论坛，勿滥用<code>表情符号</code>和<code>HTML</code>功能（当它们提供时）。一两个表情符号通常没有问题，但花哨的彩色文本倾向于使人认为你是个无能之辈。过滥地使用表情符号、色彩和字体会使你看来像个傻笑的小姑娘。这通常不是个好主意，除非你只是对性而不是对答案感兴趣。</li>
</ul>
<p>如果你使用图形用户界面的邮件程序（如微软公司的 Outlook 或者其它类似的），注意它们的默认设置不一定满足这些要求。大多数这类程序有基于选单的<code>查看源代码</code>命令，用它来检查发送文件夹中的邮件，以确保发送的是纯文本文件同时没有一些奇怪的字符。</p>
<h3 id="精确地描述问题并言之有物"><a href="#精确地描述问题并言之有物" class="headerlink" title="精确地描述问题并言之有物"></a>精确地描述问题并言之有物</h3><ul>
<li>仔细、清楚地描述你的问题或 Bug 的症状。</li>
<li>描述问题发生的环境（机器配置、操作系统、应用程序、以及相关的信息），提供经销商的发行版和版本号（如：<code>Fedora Core 4</code>、<code>Slackware 9.1</code>等）。</li>
<li>描述在提问前你是怎样去研究和理解这个问题的。</li>
<li>描述在提问前为确定问题而采取的诊断步骤。</li>
<li>描述最近做过什么可能相关的硬件或软件变更。</li>
<li>尽可能的提供一个可以<code>重现这个问题的可控环境</code>的方法。</li>
</ul>
<p>尽量去揣测一个黑客会怎样反问你，在你提问之前预先将黑客们可能遇到的问题回答一遍。</p>
<p>以上几点中，当你报告的是你认为可能在代码中的问题时，给黑客一个可以重现你的问题的环境尤其重要。当你这么做时，你得到有效的回答的机会和速度都会大大的提升。</p>
<p><a href="http://www.chiark.greenend.org.uk/~sgtatham/" target="_blank" rel="noopener">Simon Tatham</a> 写过一篇名为《<a href="http://www.chiark.greenend.org.uk/~sgtatham/bugs-cn.html" target="_blank" rel="noopener">如何有效的报告 Bug</a>》的出色文章。强力推荐你也读一读。</p>
<h3 id="话不在多而在精"><a href="#话不在多而在精" class="headerlink" title="话不在多而在精"></a>话不在多而在精</h3><p>你需要提供精确有内容的信息。这并不是要求你简单的把成堆的出错代码或者资料完全转录到你的提问中。如果你有庞大而复杂的测试样例能重现程序挂掉的情境，尽量将它剪裁得越小越好。</p>
<p>这样做的用处至少有三点。<br>第一，表现出你为简化问题付出了努力，这可以使你得到回答的机会增加；<br>第二，简化问题使你更有可能得到<strong>有用</strong>的答案；<br>第三，在精炼你的 bug 报告的过程中，你很可能就自己找到了解决方法或权宜之计。</p>
<h3 id="别动辄声称找到-Bug"><a href="#别动辄声称找到-Bug" class="headerlink" title="别动辄声称找到 Bug"></a>别动辄声称找到 Bug</h3><p>当你在使用软件中遇到问题，除非你非常、<strong>非常</strong>的有根据，不要动辄声称找到了 Bug。提示：除非你能提供解决问题的源代码补丁，或者提供回归测试来表明前一版本中行为不正确，否则你都多半不够完全确信。这同样适用在网页和文件，如果你（声称）发现了文件的<code>Bug</code>，你应该能提供相应位置的修正或替代文件。</p>
<p>请记得，还有许多其它使用者没遇到你发现的问题，否则你在阅读文件或搜索网页时就应该发现了（你在抱怨前<a href="#在提问之前">已经做了这些，是吧</a>？）。这也意味着很有可能是你弄错了而不是软件本身有问题。</p>
<p>编写软件的人总是非常辛苦地使它尽可能完美。如果你声称找到了 Bug，也就是在质疑他们的能力，即使你是对的，也有可能会冒犯到其中某部分人。当你在标题中嚷嚷着有<code>Bug</code>时，这尤其严重。</p>
<p>提问时，即使你私下非常确信已经发现一个真正的 Bug，最好写得像是<strong>你</strong>做错了什么。如果真的有 Bug，你会在回复中看到这点。这样做的话，如果真有 Bug，维护者就会向你道歉，这总比你惹恼别人然后欠别人一个道歉要好一点。</p>
<h3 id="低声下气不能代替你的功课"><a href="#低声下气不能代替你的功课" class="headerlink" title="低声下气不能代替你的功课"></a>低声下气不能代替你的功课</h3><p>有些人明白他们不该粗鲁或傲慢的提问并要求得到答复，但他们选择另一个极端 —— 低声下气：<code>我知道我只是个可悲的新手，一个撸瑟，但...</code>。这既使人困扰，也没有用，尤其是伴随着与实际问题含糊不清的描述时更令人反感。</p>
<p>别用原始灵长类动物的把戏来浪费你我的时间。取而代之的是，尽可能清楚地描述背景条件和你的问题情况。这比低声下气更好地定位了你的位置。</p>
<p>有时网页论坛会设有专为新手提问的版面，如果你真的认为遇到了初学者的问题，到那去就是了，但一样别那么低声下气。</p>
<h3 id="描述问题症状而非你的猜测"><a href="#描述问题症状而非你的猜测" class="headerlink" title="描述问题症状而非你的猜测"></a>描述问题症状而非你的猜测</h3><p>告诉黑客们你认为问题是怎样造成的并没什么帮助。（如果你的推断如此有效，还用向别人求助吗？），因此要确信你原原本本告诉了他们问题的症状，而不是你的解释和理论；让黑客们来推测和诊断。如果你认为陈述自己的猜测很重要，清楚地说明这只是你的猜测，并描述为什么它们不起作用。</p>
<p><strong>蠢问题</strong></p>
<blockquote>
<p>我在编译内核时接连遇到 SIG11 错误，<br>我怀疑某条飞线搭在主板的走线上了，这种情况应该怎样检查最好？</p>
</blockquote>
<p><strong>聪明问题</strong></p>
<blockquote>
<p>我的组装电脑是 FIC-PA2007 主机板搭载 AMD K6/233 CPU（威盛 Apollo VP2 芯片组），<br>256MB Corsair PC133 SDRAM 内存，在编译内核时，从开机 20 分钟以后就频频产生 SIG11 错误，<br>但是在头 20 分钟内从没发生过相同的问题。重新启动也没有用，但是关机一晚上就又能工作 20 分钟。<br>所有内存都换过了，没有效果。相关部分的标准编译记录如下…。</p>
</blockquote>
<p>由于以上这点似乎让许多人觉得难以配合，这里有句话可以提醒你：<code>所有的诊断专家都来自密苏里州。</code> 美国国务院的官方座右铭则是：<code>让我看看</code>（出自国会议员 Willard D. Vandiver 在 1899 年时的讲话：<code>我来自一个出产玉米，棉花，牛蒡和民主党人的国家，滔滔雄辩既不能说服我，也不会让我满意。我来自密苏里州，你必须让我看看。</code>） 针对诊断者而言，这并不是一种怀疑，而只是一种真实而有用的需求，以便让他们看到的是与你看到的原始证据尽可能一致的东西，而不是你的猜测与归纳的结论。所以，大方的展示给我们看吧！</p>
<h3 id="按发生时间先后列出问题症状"><a href="#按发生时间先后列出问题症状" class="headerlink" title="按发生时间先后列出问题症状"></a>按发生时间先后列出问题症状</h3><p>问题发生前的一系列操作，往往就是对找出问题最有帮助的线索。因此，你的说明里应该包含你的操作步骤，以及机器和软件的反应，直到问题发生。在命令行处理的情况下，提供一段操作记录（例如运行脚本工具所生成的），并引用相关的若干行（如 20 行）记录会非常有帮助。</p>
<p>如果挂掉的程序有诊断选项（如 -v 的详述开关），试着选择这些能在记录中增加调试信息的选项。记住，<code>多</code>不等于<code>好</code>。试着选取适当的调试级别以便提供有用的信息而不是让读者淹没在垃圾中。</p>
<p>如果你的说明很长（如超过四个段落），在开头简述问题，接下来再按时间顺序详述会有所帮助。这样黑客们在读你的记录时就知道该注意哪些内容了。</p>
<h3 id="描述目标而不是过程"><a href="#描述目标而不是过程" class="headerlink" title="描述目标而不是过程"></a>描述目标而不是过程</h3><p>如果你想弄清楚如何做某事（而不是报告一个 Bug），在开头就描述你的目标，然后才陈述重现你所卡住的特定步骤。</p>
<p>经常寻求技术帮助的人在心中有个更高层次的目标，而他们在自以为能达到目标的特定道路上被卡住了，然后跑来问该怎么走，但没有意识到这条路本身就有问题。结果要费很大的劲才能搞定。</p>
<p><strong>蠢问题</strong></p>
<blockquote>
<p>我怎样才能从某绘图程序的颜色选择器中取得十六进制的的 RGB 值？</p>
</blockquote>
<p><strong>聪明问题</strong></p>
<blockquote>
<p>我正试着用替换一幅图片的色码（color table）成自己选定的色码，我现在知道的唯一方法是编辑每个色码区块（table slot），<br>但却无法从某绘图程序的颜色选择器取得十六进制的的 RGB 值。</p>
</blockquote>
<p>第二种提问法比较聪明，你可能得到像是<code>建议采用另一个更合适的工具</code>的回复。</p>
<h3 id="别要求使用私人电邮回复"><a href="#别要求使用私人电邮回复" class="headerlink" title="别要求使用私人电邮回复"></a>别要求使用私人电邮回复</h3><p>黑客们认为问题的解决过程应该公开、透明，此过程中如果更有经验的人注意到不完整或者不当之处，最初的回复才能够、也应该被纠正。同时，作为提供帮助者可以得到一些奖励，奖励就是他的能力和学识被其他同行看到。</p>
<p>当你要求私下回复时，这个过程和奖励都被中止。别这样做，让<strong>回复者</strong>来决定是否私下回答 —— 如果他真这么做了，通常是因为他认为问题编写太差或者太肤浅，以至于对其它人没有兴趣。</p>
<p>这条规则存在一条有限的例外，如果你确信提问可能会引来大量雷同的回复时，那么这个神奇的提问句会是<code>向我发电邮，我将为论坛归纳这些回复</code>。试着将邮件列表或新闻群组从洪水般的雷同回复中解救出来是非常有礼貌的 —— 但你必须信守诺言。</p>
<h3 id="清楚明确的表达你的问题以及需求"><a href="#清楚明确的表达你的问题以及需求" class="headerlink" title="清楚明确的表达你的问题以及需求"></a>清楚明确的表达你的问题以及需求</h3><p>漫无边际的提问是近乎无休无止的时间黑洞。最有可能给你有用答案的人通常也正是最忙的人（他们忙是因为要亲自完成大部分工作）。这样的人对无节制的时间黑洞相当厌恶，所以他们也倾向于厌恶那些漫无边际的提问。</p>
<p>如果你明确表述需要回答者做什么（如提供指点、发送一段代码、检查你的补丁、或是其他等等），就最有可能得到有用的答案。因为这会定出一个时间和精力的上限，便于回答者能集中精力来帮你。这么做很棒。</p>
<p>要理解专家们所处的世界，请把专业技能想像为充裕的资源，而回复的时间则是稀缺的资源。你要求他们奉献的时间越少，你越有可能从真正专业而且很忙的专家那里得到解答。</p>
<p>所以，界定一下你的问题，使专家花在辨识你的问题和回答所需要付出的时间减到最少，这技巧对你有用答案相当有帮助 —— 但这技巧通常和简化问题有所区别。因此，问<code>我想更好的理解 X，可否指点一下哪有好一点说明？</code>通常比问<code>你能解释一下 X 吗？</code>更好。如果你的代码不能运作，通常请别人看看哪里有问题，比要求别人替你改正要明智得多。</p>
<h3 id="询问有关代码的问题时"><a href="#询问有关代码的问题时" class="headerlink" title="询问有关代码的问题时"></a>询问有关代码的问题时</h3><p>别要求他人帮你调试有问题的代码，不提示一下应该从何入手。张贴几百行的代码，然后说一声：<code>它不能工作</code>会让你完全被忽略。只贴几十行代码，然后说一句：<code>在第七行以后，我期待它显示 &lt;x&gt;，但实际出现的是 &lt;y&gt;</code>比较有可能让你得到回应。</p>
<p>最有效描述程序问题的方法是提供最精简的 Bug 展示测试用例（bug-demonstrating test case）。什么是最精简的测试用例？那是问题的缩影；一小个程序片段能<strong>刚好</strong>展示出程序的异常行为，而不包含其他令人分散注意力的内容。怎么制作最精简的测试用例？如果你知道哪一行或哪一段代码会造成异常的行为，复制下来并加入足够重现这个状况的代码（例如，足以让这段代码能被编译/直译/被应用程序处理）。如果你无法将问题缩减到一个特定区块，就复制一份代码并移除不影响产生问题行为的部分。总之，测试用例越小越好（查看<a href="#话不在多而在精">话不在多而在精</a>一节）。</p>
<p>一般而言，要得到一段相当精简的测试用例并不太容易，但永远先尝试这样做的是种好习惯。这种方式可以帮助你了解如何自行解决这个问题 —— 而且即使你的尝试不成功，黑客们也会看到你在尝试取得答案的过程中付出了努力，这可以让他们更愿意与你合作。</p>
<p>如果你只是想让别人帮忙审查（Review）一下代码，在信的开头就要说出来，并且一定要提到你认为哪一部分特别需要关注以及为什么。</p>
<h3 id="别把自己家庭作业的问题贴上来"><a href="#别把自己家庭作业的问题贴上来" class="headerlink" title="别把自己家庭作业的问题贴上来"></a>别把自己家庭作业的问题贴上来</h3><p>黑客们很擅长分辨哪些问题是家庭作业式的问题；因为我们中的大多数都曾自己解决这类问题。同样，这些问题得由<strong>你</strong>来搞定，你会从中学到东西。你可以要求给点提示，但别要求得到完整的解决方案。</p>
<p>如果你怀疑自己碰到了一个家庭作业式的问题，但仍然无法解决，试试在使用者群组，论坛或（最后一招）在项目的<strong>使用者</strong>邮件列表或论坛中提问。尽管黑客们<strong>会</strong>看出来，但一些有经验的使用者也许仍会给你一些提示。</p>
<h3 id="去掉无意义的提问句"><a href="#去掉无意义的提问句" class="headerlink" title="去掉无意义的提问句"></a>去掉无意义的提问句</h3><p>避免用无意义的话结束提问，例如<code>有人能帮我吗？</code>或者<code>这有答案吗？</code>。</p>
<p>首先：如果你对问题的描述不是很好，这样问更是画蛇添足。</p>
<p>其次：由于这样问是画蛇添足，黑客们会很厌烦你 —— 而且通常会用逻辑上正确，但毫无意义的回答来表示他们的蔑视， 例如：<code>没错，有人能帮你</code>或者<code>不，没答案</code>。</p>
<p>一般来说，避免用 <code>是或否</code>、<code>对或错</code>、<code>有或没有</code>类型的问句，除非你想得到<a href="http://homepage.ntlworld.com./jonathan.deboynepollard/FGA/questions-with-yes-or-no-answers.html" target="_blank" rel="noopener">是或否类型的回答</a>。</p>
<h3 id="即使你很急也不要在标题写紧急"><a href="#即使你很急也不要在标题写紧急" class="headerlink" title="即使你很急也不要在标题写紧急"></a>即使你很急也不要在标题写<code>紧急</code></h3><p>这是你的问题，不是我们的。宣称<code>紧急</code>极有可能事与愿违：大多数黑客会直接删除无礼和自私地企图即时引起关注的问题。更严重的是，<code>紧急</code>这个字（或是其他企图引起关注的标题）通常会被垃圾信过滤器过滤掉 —— 你希望能看到你问题的人可能永远也看不到。</p>
<p>有半个例外的情况是，如果你是在一些很高调，会使黑客们兴奋的地方，也许值得这样去做。在这种情况下，如果你有时间压力，也很有礼貌地提到这点，人们也许会有兴趣回答快一点。</p>
<p>当然，这风险很大，因为黑客们兴奋的点多半与你的不同。譬如从 NASA 国际空间站（International Space Station）发这样的标题没有问题，但用自我感觉良好的慈善行为或政治原因发肯定不行。事实上，张贴诸如<code>紧急：帮我救救这个毛绒绒的小海豹！</code>肯定让你被黑客忽略或惹恼他们，即使他们认为毛绒绒的小海豹很重要。</p>
<p>如果你觉得这点很不可思议，最好再把这份指南剩下的内容多读几遍，直到你弄懂了再发文。</p>
<h3 id="礼多人不怪，而且有时还很有帮助"><a href="#礼多人不怪，而且有时还很有帮助" class="headerlink" title="礼多人不怪，而且有时还很有帮助"></a>礼多人不怪，而且有时还很有帮助</h3><p>彬彬有礼，多用<code>请</code>和<code>谢谢您的关注</code>，或<code>谢谢你的关照</code>。让大家都知道你对他们花时间免费提供帮助心存感激。</p>
<p>坦白说，这一点并没有比清晰、正确、精准并合法语法和避免使用专用格式重要（也不能取而代之）。黑客们一般宁可读有点唐突但技术上鲜明的 Bug 报告，而不是那种有礼但含糊的报告。（如果这点让你不解，记住我们是按问题能教给我们什么来评价问题的价值的）</p>
<p>然而，如果你有一串的问题待解决，客气一点肯定会增加你得到有用回应的机会。</p>
<p>（我们注意到，自从本指南发布后，从资深黑客那里得到的唯一严重缺陷反馈，就是对预先道谢这一条。一些黑客觉得<code>先谢了</code>意味着事后就不用再感谢任何人的暗示。我们的建议是要么先说<code>先谢了</code>，<strong>然后</strong>事后再对回复者表示感谢，或者换种方式表达感激，譬如用<code>谢谢你的关注</code>或<code>谢谢你的关照</code>。）</p>
<h3 id="问题解决后，加个简短的补充说明"><a href="#问题解决后，加个简短的补充说明" class="headerlink" title="问题解决后，加个简短的补充说明"></a>问题解决后，加个简短的补充说明</h3><p>问题解决后，向所有帮助过你的人发个说明，让他们知道问题是怎样解决的，并再一次向他们表示感谢。如果问题在新闻组或者邮件列表中引起了广泛关注，应该在那里贴一个说明比较恰当。</p>
<p>最理想的方式是向最初提问的话题回复此消息，并在标题中包含<code>已修正</code>，<code>已解决</code>或其它同等含义的明显标记。在人来人往的邮件列表里，一个看见讨论串<code>问题 X</code>和<code>问题 X - 已解决</code>的潜在回复者就明白不用再浪费时间了（除非他个人觉得<code>问题 X</code>的有趣），因此可以利用此时间去解决其它问题。</p>
<p>补充说明不必很长或是很深入；简单的一句<code>你好，原来是网线出了问题！谢谢大家 – Bill</code>比什么也不说要来的好。事实上，除非结论真的很有技术含量，否则简短可爱的小结比长篇大论更好。说明问题是怎样解决的，但大可不必将解决问题的过程复述一遍。</p>
<p>对于有深度的问题，张贴调试记录的摘要是有帮助的。描述问题的最终状态，说明是什么解决了问题，在此<strong>之后</strong>才指明可以避免的盲点。避免盲点的部分应放在正确的解决方案和其它总结材料之后，而不要将此信息搞成侦探推理小说。列出那些帮助过你的名字，会让你交到更多朋友。</p>
<p>除了有礼貌和有内涵以外，这种类型的补充也有助于他人在邮件列表/新闻群组/论坛中搜索到真正解决你问题的方案，让他们也从中受益。</p>
<p>至少，这种补充有助于让每位参与协助的人因问题的解决而从中得到满足感。如果你自己不是技术专家或者黑客，那就相信我们，这种感觉对于那些你向他们求助的大师或者专家而言，是非常重要的。问题悬而未决会让人灰心；黑客们渴望看到问题被解决。好人有好报，满足他们的渴望，你会在下次提问时尝到甜头。</p>
<p>思考一下怎样才能避免他人将来也遇到类似的问题，自问写一份文件或加个常见问题（FAQ）会不会有帮助。如果是的话就将它们发给维护者。</p>
<p>在黑客中，这种良好的后继行动实际上比传统的礼节更为重要，也是你如何透过善待他人而赢得声誉的方式，这是非常有价值的资产。</p>
<h2 id="如何解读答案"><a href="#如何解读答案" class="headerlink" title="如何解读答案"></a>如何解读答案</h2><p><a id="RTFM"></a></p>
<h3 id="RTFM-和-STFW：如何知道你已完全搞砸了"><a href="#RTFM-和-STFW：如何知道你已完全搞砸了" class="headerlink" title="RTFM 和 STFW：如何知道你已完全搞砸了"></a>RTFM 和 STFW：如何知道你已完全搞砸了</h3><p>有一个古老而神圣的传统：如果你收到<code>RTFM （Read The Fucking Manual）</code>的回应，回答者认为你<strong>应该去读他妈的手册</strong>。当然，基本上他是对的，你应该去读一读。</p>
<p>RTFM 有一个年轻的亲戚。如果你收到<code>STFW（Search The Fucking Web）</code>的回应，回答者认为你<strong>应该到他妈的网上搜索</strong>。那人多半也是对的，去搜索一下吧。（更温和一点的说法是 <strong><a href="http://lmgtfy.com/" target="_blank" rel="noopener">Google 是你的朋友</a></strong>！）</p>
<p>在论坛，你也可能被要求去爬爬论坛的旧文。事实上，有人甚至可能热心地为你提供以前解决此问题的讨论串。但不要依赖这种关照，提问前应该先搜索一下旧文。</p>
<p>通常，用这两句之一回答你的人会给你一份包含你需要内容的手册或者一个网址，而且他们打这些字的时候也正在读着。这些答复意味着回答者认为</p>
<ul>
<li><strong>你需要的信息非常容易获得</strong>；</li>
<li><strong>你自己去搜索这些信息比灌给你，能让你学到更多</strong>。</li>
</ul>
<p>你不应该因此不爽；<strong>依照黑客的标准，他已经表示了对你一定程度的关注，而没有对你的要求视而不见</strong>。你应该对他祖母般的慈祥表示感谢。</p>
<h3 id="如果还是搞不懂"><a href="#如果还是搞不懂" class="headerlink" title="如果还是搞不懂"></a>如果还是搞不懂</h3><p>如果你看不懂回应，别立刻要求对方解释。像你以前试着自己解决问题时那样（利用手册，FAQ，网络，身边的高手），先试着去搞懂他的回应。如果你真的需要对方解释，记得表现出你已经从中学到了点什么。</p>
<p>比方说，如果我回答你：<code>看来似乎是 zentry 卡住了；你应该先清除它。</code>，然后，这是一个<strong>很糟的</strong>后续问题回应：<code>zentry 是什么？</code> <strong>好</strong>的问法应该是这样：<code>哦~~~我看过说明了但是只有 -z 和 -p 两个参数中提到了 zentries，而且还都没有清楚的解释如何清除它。你是指这两个中的哪一个吗？还是我看漏了什么？</code></p>
<h3 id="处理无礼的回应"><a href="#处理无礼的回应" class="headerlink" title="处理无礼的回应"></a>处理无礼的回应</h3><p>很多黑客圈子中看似无礼的行为并不是存心冒犯。相反，它是直接了当，一针见血式的交流风格，这种风格更注重解决问题，而不是使人感觉舒服而却模模糊糊。</p>
<p>如果你觉得被冒犯了，试着平静地反应。如果有人真的做了出格的事，邮件列表、新闻群组或论坛中的前辈多半会招呼他。如果这<strong>没有</strong>发生而你却发火了，那么你发火对象的言语可能在黑客社区中看起来是正常的，而<strong>你</strong>将被视为有错的一方，这将伤害到你获取信息或帮助的机会。</p>
<p>另一方面，你偶尔真的会碰到无礼和无聊的言行。与上述相反，对真正的冒犯者狠狠地打击，用犀利的语言将其驳得体无完肤都是可以接受的。然而，在行事之前一定要非常非常的有根据。纠正无礼的言论与开始一场毫无意义的口水战仅一线之隔，黑客们自己莽撞地越线的情况并不鲜见。如果你是新手或外人，避开这种莽撞的机会并不高。如果你想得到的是信息而不是消磨时光，这时最好不要把手放在键盘上以免冒险。</p>
<p>（有些人断言很多黑客都有轻度的自闭症或亚斯伯格综合症，缺少用于润滑人类社会<strong>正常</strong>交往所需的神经。这既可能是真也可能是假的。如果你自己不是黑客，兴许你认为我们脑袋有问题还能帮助你应付我们的古怪行为。只管这么干好了，我们不在乎。我们<strong>喜欢</strong>我们现在这个样子，并且通常对病患标记都有站得住脚的怀疑）。</p>
<p>Jeff Bigler 的观察总结和这个相关也值得一读 (<strong><a href="http://www.mit.edu/~jcb/tact.html" target="_blank" rel="noopener">tact filters</a></strong>)。</p>
<p>在下一节，我们会谈到另一个问题，当<strong>你</strong>行为不当时所会受到的<code>冒犯</code>。</p>
<h2 id="如何避免扮演失败者"><a href="#如何避免扮演失败者" class="headerlink" title="如何避免扮演失败者"></a>如何避免扮演失败者</h2><p>在黑客社区的论坛中有那么几次你可能会搞砸 —— 以本指南所描述到的或类似的方式。而你会在公开场合中被告知你是如何搞砸的，也许攻击的言语中还会带点夹七夹八的颜色。</p>
<p>这种事发生以后，你能做的最糟糕的事莫过于哀嚎你的遭遇、宣称被口头攻击、要求道歉、高声尖叫、憋闷气、威胁诉诸法律、向其雇主报怨、忘了关马桶盖等等。相反地，你该这么做：</p>
<p>熬过去，这很正常。事实上，它是有益健康且合理的。</p>
<p>社区的标准不会自行维持，它们是通过参与者积极而<strong>公开地</strong>执行来维持的。不要哭嚎所有的批评都应该通过私下的邮件传送，它不是这样运作的。当有人评论你的一个说法有误或者提出不同看法时，坚持声称受到个人攻击也毫无益处，这些都是失败者的态度。</p>
<p>也有其它的黑客论坛，受过高礼节要求的误导，禁止参与者张贴任何对别人帖子挑毛病的消息，并声称<code>如果你不想帮助用户就闭嘴。</code> 结果造成有想法的参与者纷纷离开，这么做只会使它们沦为毫无意义的唠叨与无用的技术论坛。</p>
<p>夸张的讲法是：你要的是“友善”（以上述方式）还是有用？两个里面挑一个。</p>
<p>记着：当黑客说你搞砸了，并且（无论多么刺耳）告诉你别再这样做时，他正在为关心<strong>你</strong>和<strong>他的社区</strong>而行动。对他而言，不理你并将你从他的生活中滤掉更简单。如果你无法做到感谢，至少要表现得有点尊严，别大声哀嚎，也别因为自己是个有戏剧性超级敏感的灵魂和自以为有资格的新来者，就指望别人像对待脆弱的洋娃娃那样对你。</p>
<p>有时候，即使你没有搞砸（或者只是在他的想像中你搞砸了），有些人也会无缘无故地攻击你本人。在这种情况下，抱怨倒是<strong>真的</strong>会把问题搞砸。</p>
<p>这些来找麻烦的人要么是毫无办法但自以为是专家的不中用家伙，要么就是测试你是否真会搞砸的心理专家。其它读者要么不理睬，要么用自己的方式对付他们。这些来找麻烦的人在给他们自己找麻烦，这点你不用操心。</p>
<p>也别让自己卷入口水战，最好不要理睬大多数的口水战 — 当然，这是在你检验它们只是口水战，并且未指出你有搞砸的地方，同时也没有巧妙地将问题真正的答案藏于其后（这也是有可能的）。</p>
<h2 id="不该问的问题"><a href="#不该问的问题" class="headerlink" title="不该问的问题"></a>不该问的问题</h2><p>以下是几个经典蠢问题，以及黑客没回答时心中所想的：</p>
<p>问题：<a href="#q1">我能在哪找到 X 程序或 X 资源？</a></p>
<p>问题：<a href="#q2">我怎样用 X 做 Y？</a></p>
<p>问题：<a href="#q3">如何设定我的 shell 提示？</a></p>
<p>问题：<a href="#q4">我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 档案转换为 TeX 格式吗？</a></p>
<p>问题：<a href="#q5">我的程序/设定/SQL 语句没有用</a></p>
<p>问题：<a href="#q6">我的 Windows 电脑有问题，你能帮我吗？</a></p>
<p>问题：<a href="#q7">我的程序不会动了，我认为系统工具 X 有问题</a></p>
<p>问题：<a href="#q8">我在安装 Linux（或者 X ）时有问题，你能帮我吗？</a></p>
<p>问题：<a href="#q9">我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？</a></p>
<hr>
<p><a id="q1"></a></p>
<blockquote>
<p>问题：我能在哪找到 X 程序或 X 资源？</p>
</blockquote>
<p>回答：就在我找到它的地方啊，白痴 —— 搜索引擎的那一头。天哪！难道还有人不会用 <a href="http://www.google.com" target="_blank" rel="noopener">Google</a> 吗？</p>
<p><a id="q2"></a></p>
<blockquote>
<p>问题：我怎样用 X 做 Y？</p>
</blockquote>
<p>回答：如果你想解决的是 Y ，提问时别给出可能并不恰当的方法。这种问题说明提问者不但对 X 完全无知，也对 Y 要解决的问题糊涂，还被特定形势禁锢了思维。最好忽略这种人，等他们把问题搞清楚了再说。</p>
<p><a id="q3"></a></p>
<blockquote>
<p>问题：如何设定我的 shell 提示？？</p>
</blockquote>
<p>回答：如果你有足够的智慧提这个问题，你也该有足够的智慧去 <a href="#RTFM">RTFM</a>，然后自己去找出来。</p>
<p><a id="q4"></a></p>
<blockquote>
<p>问题：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 档案转换为 TeX 格式吗？</p>
</blockquote>
<p>回答：试试看就知道了。如果你试过，你既知道了答案，就不用浪费我的时间了。</p>
<p><a id="q5"></a></p>
<blockquote>
<p>问题：我的{程序/设定/SQL 语句}不工作</p>
</blockquote>
<p>回答：这不算是问题吧，我对要我问你二十个问题才找得出你真正问题的问题没兴趣 —— 我有更有意思的事要做呢。在看到这类问题的时候，我的反应通常不外如下三种</p>
<ul>
<li>你还有什么要补充的吗？</li>
<li>真糟糕，希望你能搞定。</li>
<li>这关我有什么屁事？</li>
</ul>
<p><a id="q6"></a></p>
<blockquote>
<p>问题：我的 Windows 电脑有问题，你能帮我吗？</p>
</blockquote>
<p>回答：能啊，扔掉微软的垃圾，换个像 Linux 或 BSD 的开源操作系统吧。</p>
<p>注意：如果程序有官方版 Windows 或者与 Windows 有互动（如 Samba），你<strong>可以</strong>问与 Windows 相关的问题， 只是别对问题是由 Windows 操作系统而不是程序本身造成的回复感到惊讶， 因为 Windows 一般来说实在太烂，这种说法通常都是对的。</p>
<p><a id="q7"></a></p>
<blockquote>
<p>问题：我的程序不会动了，我认为系统工具 X 有问题</p>
</blockquote>
<p>回答：你完全有可能是第一个注意到被成千上万用户反复使用的系统调用与函数库档案有明显缺陷的人，更有可能的是你完全没有根据。不同凡响的说法需要不同凡响的证据，当你这样声称时，你必须有清楚而详尽的缺陷说明文件作后盾。</p>
<p><a id="q8"></a></p>
<blockquote>
<p>问题：我在安装 Linux（或者 X ）时有问题，你能帮我吗？</p>
</blockquote>
<p>回答：不能，我只有亲自在你的电脑上动手才能找到毛病。还是去找你当地的 Linux 使用群组者寻求实际的指导吧（你能在<a href="http://www.linux.org/groups/index.html" target="_blank" rel="noopener">这儿</a>找到使用者群组的清单）。</p>
<p>注意：如果安装问题与某 Linux 的发行版有关，在它的邮件列表、论坛或本地使用者群组中提问也许是恰当的。此时，应描述问题的准确细节。在此之前，先用 <code>Linux</code> 和<strong>所有</strong>被怀疑的硬件作关键词仔细搜索。</p>
<p><a id="q9"></a></p>
<blockquote>
<p>问题：我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？</p>
</blockquote>
<p>回答：想要这样做，说明了你是个卑鄙小人；想找个黑客帮你，说明你是个白痴！</p>
<h2 id="好问题与蠢问题"><a href="#好问题与蠢问题" class="headerlink" title="好问题与蠢问题"></a>好问题与蠢问题</h2><p>最后，我将透过举一些例子，来说明怎样聪明的提问；同一个问题的两种问法被放在一起，一种是愚蠢的，另一种才是明智的。</p>
<p><strong>蠢问题</strong>：</p>
<blockquote>
<p>我可以在哪儿找到关于 Foonly Flurbamatic 的资料？</p>
</blockquote>
<p>这种问法无非想得到 <a href="#RTFM">STFW</a> 这样的回答。</p>
<p><strong>聪明问题</strong>：</p>
<blockquote>
<p>我用 Google 搜索过 “Foonly Flurbamatic 2600”，但是没找到有用的结果。谁知道上哪儿去找对这种设备编程的资料？</p>
</blockquote>
<p>这个问题已经 STFW 过了，看起来他真的遇到了麻烦。</p>
<p><strong>蠢问题</strong>：</p>
<blockquote>
<p>我从 foo 项目找来的源码没法编译。它怎么这么烂？</p>
</blockquote>
<p>他觉得都是别人的错，这个傲慢自大的提问者。</p>
<p><strong>聪明问题</strong>：</p>
<blockquote>
<p>foo 项目代码在 Nulix 6.2 版下无法编译通过。我读过了 FAQ，但里面没有提到跟 Nulix 有关的问题。这是我编译过程的记录，我有什么做的不对的地方吗？</p>
</blockquote>
<p>提问者已经指明了环境，也读过了 FAQ，还列出了错误，并且他没有把问题的责任推到别人头上，他的问题值得被关注。</p>
<p><strong>蠢问题</strong>：</p>
<blockquote>
<p>我的主机板有问题了，谁来帮我？</p>
</blockquote>
<p>某黑客对这类问题的回答通常是：<code>好的，还要帮你拍拍背和换尿布吗？</code>，然后按下删除键。</p>
<p><strong>聪明问题</strong>：</p>
<blockquote>
<p>我在 S2464 主机板上试过了 X 、 Y 和 Z ，但没什么作用，我又试了 A 、 B 和 C 。请注意当我尝试 C 时的奇怪现象。显然 florbish 正在 grommicking，但结果出人意料。通常在 Athlon MP 主机板上引起 grommicking 的原因是什么？有谁知道接下来我该做些什么测试才能找出问题？</p>
</blockquote>
<p>这个家伙，从另一个角度来看，值得去回答他。他表现出了解决问题的能力，而不是坐等天上掉答案。</p>
<p>在最后一个问题中，注意<code>告诉我答案</code>和<code>给我启示，指出我还应该做什么诊断工作</code>之间微妙而又重要的区别。</p>
<p>事实上，后一个问题源自于 2001 年 8 月在 Linux 内核邮件列表（lkml）上的一个真实的提问。我（Eric）就是那个提出问题的人。我在 Tyan S2464 主板上观察到了这种无法解释的锁定现象，列表成员们提供了解决这一问题的重要信息。</p>
<p>通过我的提问方法，我给了别人可以咀嚼玩味的东西；我设法让人们很容易参与并且被吸引进来。我显示了自己具备和他们同等的能力，并邀请他们与我共同探讨。通过告诉他们我所走过的弯路，以避免他们再浪费时间，我也表明了对他们宝贵时间的尊重。</p>
<p>事后，当我向每个人表示感谢，并且赞赏这次良好的讨论经历的时候， 一个 Linux 内核邮件列表的成员表示，他觉得我的问题得到解决并非由于我是这个列表中的<strong>名</strong>人，而是因为我用了正确的方式来提问。</p>
<p>黑客从某种角度来说是拥有丰富知识但缺乏人情味的家伙；我相信他是对的，如果我<strong>像</strong>个乞讨者那样提问，不论我是谁，一定会惹恼某些人或者被他们忽视。他建议我记下这件事，这直接导致了本指南的出现。</p>
<h2 id="如果得不到回答"><a href="#如果得不到回答" class="headerlink" title="如果得不到回答"></a>如果得不到回答</h2><p>如果仍得不到回答，请不要以为我们觉得无法帮助你。有时只是看到你问题的人不知道答案罢了。没有回应不代表你被忽视，虽然不可否认这种差别很难区分。</p>
<p>总的来说，简单的重复张贴问题是个很糟的点子。这将被视为无意义的喧闹。有点耐心，知道你问题答案的人可能生活在不同的时区，可能正在睡觉，也有可能你的问题一开始就没有组织好。</p>
<p>你可以通过其他渠道获得帮助，这些渠道通常更适合初学者的需要。</p>
<p>有许多网上的以及本地的使用者群组，由热情的软件爱好者（即使他们可能从没亲自写过任何软件）组成。通常人们组建这样的团体来互相帮助并帮助新手。</p>
<p>另外，你可以向很多商业公司寻求帮助，不论公司大还是小。别为要付费才能获得帮助而感到沮丧！毕竟，假使你的汽车发动机汽缸密封圈爆掉了 —— 完全可能如此 —— 你还得把它送到修车铺，并且为维修付费。就算软件没花费你一分钱，你也不能强求技术支持总是免费的。</p>
<p>对像是 Linux 这种大众化的软件，每个开发者至少会对应到上万名使用者。根本不可能由一个人来处理来自上万名使用者的求助电话。要知道，即使你要为这些协助付费，和你所购买的同类软件相比，你所付出的也是微不足道的（通常封闭源代码软件的技术支持费用比开源软件的要高得多，且内容也没那么丰富）。</p>
<h2 id="如何更好地回答问题"><a href="#如何更好地回答问题" class="headerlink" title="如何更好地回答问题"></a>如何更好地回答问题</h2><p><strong>态度和善一点</strong>。问题带来的压力常使人显得无礼或愚蠢，其实并不是这样。</p>
<p><strong>对初犯者私下回复</strong>。对那些坦诚犯错之人没有必要当众羞辱，一个真正的新手也许连怎么搜索或在哪找常见问题都不知道。</p>
<p><strong>如果你不确定，一定要说出来</strong>！一个听起来权威的错误回复比没有还要糟，别因为听起来像个专家很好玩，就给别人乱指路。要谦虚和诚实，给提问者与同行都树个好榜样。</p>
<p><strong>如果帮不了忙，也别妨碍他</strong>。不要在实际步骤上开玩笑，那样也许会毁了使用者的设置 —— 有些可怜的呆瓜会把它当成真的指令。</p>
<p><strong>试探性的反问以引出更多的细节</strong>。如果你做得好，提问者可以学到点东西 —— 你也可以。试试将蠢问题转变成好问题，别忘了我们都曾是新手。</p>
<p>尽管对那些懒虫抱怨一声 RTFM 是正当的，能指出文件的位置（即使只是建议个 Google 搜索关键词）会更好。</p>
<p><strong>如果你决定回答，就请给出好的答案</strong>。当别人正在用错误的工具或方法时别建议笨拙的权宜之计（wordaround），应推荐更好的工具，重新界定问题。</p>
<p><strong>正面的回答问题</strong>！如果这个提问者已经很深入的研究而且也表明已经试过 X 、 Y 、 Z 、 A 、 B 、 C 但没得到结果，回答 <code>试试看 A 或是 B</code> 或者 <code>试试 X 、 Y 、 Z 、 A 、 B 、 C</code> 并附上一个链接一点用都没有。</p>
<p><strong>帮助你的社区从问题中学习</strong>。当回复一个好问题时，问问自己<code>如何修改相关文件或常见问题文件以免再次解答同样的问题？</code>，接着再向文件维护者发一份补丁。</p>
<p>如果你是在研究一番后才做出的回答，<strong>展现你的技巧而不是直接端出结果</strong>。毕竟<code>授人以鱼不如授人以渔</code>。</p>
<h2 id="相关资源"><a href="#相关资源" class="headerlink" title="相关资源"></a>相关资源</h2><p>如果你需要个人电脑、Unix 系统和网络如何运作的基础知识，参阅 <a href="http://en.tldp.org/HOWTO/Unix-and-Internet-Fundamentals-HOWTO/" target="_blank" rel="noopener">Unix 系统和网络基本原理</a>。</p>
<p>当你发布软件或补丁时，试着按<a href="http://en.tldp.org/HOWTO/Software-Release-Practice-HOWTO/index.html" target="_blank" rel="noopener">软件发布实践</a>操作。</p>
<h2 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h2><p>Evelyn Mitchel 贡献了一些愚蠢问题例子并启发了编写<code>如何更好地回答问题</code>这一节， Mikhail Ramendik 贡献了一些特别有价值的建议和改进。</p>
]]></content>
      <categories>
        <category>开发经验</category>
      </categories>
      <tags>
        <tag>开发经验</tag>
      </tags>
  </entry>
</search>
